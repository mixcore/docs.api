@startuml
class GlobalSettingsViewModel {
    + Domain : string <<get>> <<set>>
    + Lang : string <<get>> <<set>>
    + LangIcon : string <<get>> <<set>>
    + ThemeId : int <<get>> <<set>>
    + ApiEncryptKey : string <<get>> <<set>>
    + ApiEncryptIV : string <<get>> <<set>>
    + IsEncryptApi : bool <<get>> <<set>>
    + LastUpdateConfiguration : DateTime? <<get>> <<set>>
}
class FilePageViewModel {
}
class InitCulture {
    + Specificulture : string <<get>> <<set>>
    + FullName : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + Icon : string <<get>> <<set>>
    + Alias : string <<get>> <<set>>
}
class ExtraProperty {
    + Title : string <<get>> <<set>>
    + Name : string <<get>> <<set>>
    + Value : string <<get>> <<set>>
}
class DataValueViewModel {
    + Value : string <<get>> <<set>>
    + Name : string <<get>> <<set>>
}
class TemplateViewModel {
    + FileFolder : string <<get>> <<set>>
    + Filename : string <<get>> <<set>>
    + Extension : string <<get>> <<set>>
    + Content : string <<get>> <<set>>
    + Scripts : string <<get>> <<set>>
    + Styles : string <<get>> <<set>>
    + FileStream : string <<get>> <<set>>
}
class ModuleFieldViewModel {
    + Name : string <<get>> <<set>>
    + Title : string <<get>> <<set>>
    + DefaultValue : string <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + IsUnique : bool <<get>> <<set>>
    + IsRequired : bool <<get>> <<set>>
    + IsDisplay : bool <<get>> <<set>>
    + IsSelect : bool <<get>> <<set>>
    + IsGroupBy : bool <<get>> <<set>>
    + Width : int <<get>> <<set>>
}
class ApiModuleDataValueViewModel {
    + Name : string <<get>> <<set>>
    + Title : string <<get>> <<set>>
    + IsUnique : bool <<get>> <<set>>
    + IsRequired : bool <<get>> <<set>>
    + Value : string <<get>> <<set>>
    + IsDisplay : bool <<get>> <<set>>
    + IsSelect : bool <<get>> <<set>>
    + IsGroupBy : bool <<get>> <<set>>
    + Validate(id:IConvertible, specificulture:string, jItem:JObject, _context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<bool>
}
class MobileComponent {
    + Id : int <<get>> <<set>>
    + ComponentType : string <<get>> <<set>>
    + StyleName : string <<get>> <<set>>
    + DataType : string <<get>> <<set>>
    + DataValue : string <<get>> <<set>>
    + MobileComponent(element:XElement)
}
class SiteMap {
    + LastMod : DateTime? <<get>> <<set>>
    + ChangeFreq : string <<get>> <<set>>
    + Priority : double <<get>> <<set>>
    + Loc : string <<get>> <<set>>
    + ParseXElement() : XElement
}
class "ListAction`1"<T> {
    + Action : string <<get>> <<set>>
}
class SitemapLanguage {
    + HrefLang : string <<get>> <<set>>
    + Href : string <<get>> <<set>>
}
class FileInputModel {
}
class "List`1"<T> {
}
GlobalSettingsViewModel --> "PortalThemeSettings" JObject
GlobalSettingsViewModel --> "Cultures<SupportedCulture>" "List`1"
GlobalSettingsViewModel --> "PageTypes<object>" "List`1"
GlobalSettingsViewModel --> "ModuleTypes<object>" "List`1"
GlobalSettingsViewModel --> "AttributeSetTypes<object>" "List`1"
GlobalSettingsViewModel --> "DataTypes<object>" "List`1"
GlobalSettingsViewModel --> "Statuses<object>" "List`1"
FilePageViewModel --> "Files<FileViewModel>" "List`1"
FilePageViewModel --> "Directories<string>" "List`1"
ExtraProperty --> "DataType" MixDataType
DataValueViewModel o-> "DataType" MixDataType
ModuleFieldViewModel o-> "Options" JArray
ModuleFieldViewModel --> "DataType" MixDataType
ApiModuleDataValueViewModel --> "DataType" MixDataType
ApiModuleDataValueViewModel o-> "Options" JArray
MobileComponent --> "DataSource<MobileComponent>" "List`1"
SiteMap --> "OtherLanguages<SitemapLanguage>" "List`1"
"ListAction`1" --> "Data<T>" "List`1"
FileInputModel --> "FileToUpload" IFormFile
@enduml
