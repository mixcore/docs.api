@startuml
class ReadMvcViewModel {
    + Id : int <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + Name : string <<get>> <<set>>
    + Image : string <<get>> <<set>>
    + Thumbnail : string <<get>> <<set>>
    + Template : string <<get>> <<set>>
    + FormTemplate : string <<get>> <<set>>
    + EdmTemplate : string <<get>> <<set>>
    + Title : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + Fields : string <<get>> <<set>>
    + PageSize : int? <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + ModifiedBy : string <<get>> <<set>>
    + LastModified : DateTime? <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + Domain : string <<get>>
    + DetailsUrl : string <<get>> <<set>>
    + ImageUrl : string <<get>>
    + ThumbnailUrl : string <<get>>
    + TemplatePath : string <<get>>
    + FormTemplatePath : string <<get>>
    + EdmTemplatePath : string <<get>>
    + PostId : int? <<get>> <<set>>
    + PageId : int? <<get>> <<set>>
    + ReadMvcViewModel()
    + ReadMvcViewModel(model:MixModule, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + {static} GetBy(predicate:Expression<Func<MixModule, bool>>, postId:int?, productid:int?, pageId:int, _context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<ReadMvcViewModel>
    + LoadData(postId:int?, productId:int?, pageId:int?, pageSize:int?, pageIndex:int?, _context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + HasValue(fieldName:string) : bool
    + Property(fieldName:string) : T
}
class "ViewModelBase`3"<T1,T2,T3> {
}
class "List`1"<T> {
}
class "PaginationModel`1"<T> {
}
"ViewModelBase`3" "<MixCmsContext,MixModule,ReadMvcViewModel>" <|-- ReadMvcViewModel
ReadMvcViewModel --> "Cultures<Domain.Core.Models.SupportedCulture>" "List`1"
ReadMvcViewModel --> "Type" MixModuleType
ReadMvcViewModel --> "CreatedDateTime" DateTime
ReadMvcViewModel --> "Status" MixContentStatus
ReadMvcViewModel --> "Columns<ModuleFieldViewModel>" "List`1"
ReadMvcViewModel o-> "Data<ViewModels.MixModuleDatas.ReadViewModel>" "PaginationModel`1"
ReadMvcViewModel o-> "Posts<MixModulePosts.ReadViewModel>" "PaginationModel`1"
@enduml
