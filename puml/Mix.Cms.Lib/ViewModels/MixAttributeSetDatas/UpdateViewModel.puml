@startuml
class UpdateViewModel {
    + Id : string <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + AttributeSetId : int <<get>> <<set>>
    + AttributeSetName : string <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + ModifiedBy : string <<get>> <<set>>
    + LastModified : DateTime? <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + ParentId : string <<get>> <<set>>
    + UpdateViewModel()
    + UpdateViewModel(model:MixAttributeSetData, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> ParseModel(_context:MixCmsContext, _transaction:IDbContextTransaction) : MixAttributeSetData
    + <<override>> <<async>> SaveModelAsync(isSaveSubModels:bool, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<UpdateViewModel>>
    + <<override>> <<async>> SaveSubModelsAsync(parent:MixAttributeSetData, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<override>> SaveSubModels(parent:MixAttributeSetData, _context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<bool>
}
class "ViewModelBase`3"<T1,T2,T3> {
}
class "List`1"<T> {
}
"ViewModelBase`3" "<MixCmsContext,MixAttributeSetData,UpdateViewModel>" <|-- UpdateViewModel
UpdateViewModel --> "Cultures<Domain.Core.Models.SupportedCulture>" "List`1"
UpdateViewModel --> "CreatedDateTime" DateTime
UpdateViewModel --> "Status" MixContentStatus
UpdateViewModel o-> "RelatedData<MixRelatedAttributeDatas.UpdateViewModel>" "List`1"
UpdateViewModel --> "Values<MixAttributeSetValues.UpdateViewModel>" "List`1"
UpdateViewModel --> "Fields<MixAttributeFields.UpdateViewModel>" "List`1"
UpdateViewModel --> "DataNavs<MixRelatedAttributeDatas.UpdateViewModel>" "List`1"
UpdateViewModel --> "Data" JObject
UpdateViewModel --> "ParentType" MixDatabaseParentType
@enduml
