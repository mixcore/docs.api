@startuml
class ReadViewModel {
    + ReadViewModel(model:MixPagePost, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + ReadViewModel()
    + Id : int <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + PostId : int <<get>> <<set>>
    + PageId : int <<get>> <<set>>
    + IsActived : bool <<get>> <<set>>
    + Image : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + ModifiedBy : string <<get>> <<set>>
    + LastModified : DateTime? <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + <<override>> Validate(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> ParseModel(_context:MixCmsContext, _transaction:IDbContextTransaction) : MixPagePost
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + LoadPage(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + LoadPost(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + {static} GetPagePostNavAsync(postId:int, specificulture:string, _context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<List<MixPagePosts.ReadViewModel>>
}
class "ViewModelBase`3"<T1,T2,T3> {
}
"ViewModelBase`3" "<MixCmsContext,MixPagePost,ReadViewModel>" <|-- ReadViewModel
ReadViewModel --> "CreatedDateTime" DateTime
ReadViewModel --> "Status" MixContentStatus
@enduml
