@startuml
class UpdateViewModel {
    + Id : int <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + Alias : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + FullName : string <<get>> <<set>>
    + Icon : string <<get>> <<set>>
    + Lcid : string <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + ModifiedBy : string <<get>> <<set>>
    + LastModified : DateTime? <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + UpdateViewModel()
    + UpdateViewModel(model:MixCulture, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + <<override>> ParseModel(_context:MixCmsContext, _transaction:IDbContextTransaction) : MixCulture
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> <<async>> SaveModelAsync(isSaveSubModels:bool, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<UpdateViewModel>>
    + <<override>> <<async>> SaveSubModelsAsync(parent:MixCulture, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneRelatedAttributeDatasAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneAttributeDatasAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneAttributeValuesAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneUrlAliasAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneModulesAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneMediasAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> ClonePostMediasAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> ClonePostPostsAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneModulePostsAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> ClonePagePostsAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> ClonePageModulesAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> ClonePostsAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneModuleDatasAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneLanguagesAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> CloneConfigurationsAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<async>> ClonePagesAsync(parent:MixCulture, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<override>> <<async>> RemoveRelatedModelsAsync(view:UpdateViewModel, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<override>> <<async>> RemoveModelAsync(isRemoveRelatedModels:bool, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<MixCulture>>
}
class "ViewModelBase`3"<T1,T2,T3> {
}
class "List`1"<T> {
}
"ViewModelBase`3" "<MixCmsContext,MixCulture,UpdateViewModel>" <|-- UpdateViewModel
UpdateViewModel --> "CreatedDateTime" DateTime
UpdateViewModel --> "Status" MixContentStatus
UpdateViewModel --> "Configurations<MixConfigurations.ReadMvcViewModel>" "List`1"
@enduml
