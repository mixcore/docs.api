@startuml
class UpdateViewModel {
    + Id : int <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + Extension : string <<get>> <<set>>
    + FileFolder : string <<get>> <<set>>
    + FileName : string <<get>> <<set>>
    + FileType : string <<get>> <<set>>
    + FileSize : int <<get>> <<set>>
    + Title : string <<get>> <<set>>
    + Description : string <<get>> <<set>>
    + TargetUrl : string <<get>> <<set>>
    + Source : string <<get>> <<set>>
    + Tags : string <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + ModifiedBy : string <<get>> <<set>>
    + LastModified : DateTime? <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + Domain : string <<get>>
    + FullPath : string <<get>>
    + FilePath : string <<get>>
    + UpdateViewModel()
    + UpdateViewModel(model:MixMedia, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + <<override>> ParseModel(_context:MixCmsContext, _transaction:IDbContextTransaction) : MixMedia
    + <<override>> Validate(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> RemoveRelatedModels(view:UpdateViewModel, _context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<bool>
    + <<override>> <<async>> RemoveRelatedModelsAsync(view:UpdateViewModel, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
}
class "ViewModelBase`3"<T1,T2,T3> {
}
"ViewModelBase`3" "<MixCmsContext,MixMedia,UpdateViewModel>" <|-- UpdateViewModel
UpdateViewModel --> "CreatedDateTime" DateTime
UpdateViewModel --> "Status" MixContentStatus
UpdateViewModel --> "MediaFile" FileViewModel
UpdateViewModel --> "File" IFormFile
@enduml
