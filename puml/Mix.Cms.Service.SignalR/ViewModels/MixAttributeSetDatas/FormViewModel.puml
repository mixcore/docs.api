@startuml
class FormViewModel {
    + Id : string <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + AttributeSetId : int <<get>> <<set>>
    + AttributeSetName : string <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + Status : string <<get>> <<set>>
    + FormViewModel()
    + FormViewModel(model:MixAttributeSetData, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> ParseModel(_context:MixCmsContext, _transaction:IDbContextTransaction) : MixAttributeSetData
    + <<override>> <<async>> SaveModelAsync(isSaveSubModels:bool, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<FormViewModel>>
    + <<override>> SaveModel(isSaveSubModels:bool, _context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<FormViewModel>
    + <<override>> <<async>> SaveSubModelsAsync(parent:MixAttributeSetData, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    + <<override>> <<async>> GenerateCache(model:MixAttributeSetData, view:FormViewModel, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task
}
class "ViewModelBase`3"<T1,T2,T3> {
}
class "List`1"<T> {
}
"ViewModelBase`3" "<MixCmsContext,MixAttributeSetData,FormViewModel>" <|-- FormViewModel
FormViewModel --> "CreatedDateTime" DateTime
FormViewModel --> "Data" JObject
FormViewModel o-> "RelatedData<Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel>" "List`1"
FormViewModel --> "Values<Lib.ViewModels.MixAttributeSetValues.UpdateViewModel>" "List`1"
FormViewModel --> "Fields<Lib.ViewModels.MixAttributeFields.UpdateViewModel>" "List`1"
FormViewModel o-> "RefData<MixAttributeSetDatas.FormViewModel>" "List`1"
@enduml
