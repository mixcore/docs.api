@startuml
class UpdateViewModel {
    + Id : int <<get>> <<set>>
    + Specificulture : string <<get>> <<set>>
    + Name : string <<get>> <<set>>
    + Title : string <<get>> <<set>>
    + Image : string <<get>> <<set>>
    + Thumbnail : string <<get>> <<set>>
    + CreatedBy : string <<get>> <<set>>
    + CreatedDateTime : DateTime <<get>> <<set>>
    + ModifiedBy : string <<get>> <<set>>
    + LastModified : DateTime? <<get>> <<set>>
    + Priority : int <<get>> <<set>>
    + Status : MixContentStatus <<get>> <<set>>
    + IsCloneFromCurrentTheme : bool <<get>> <<set>>
    + Domain : string <<get>>
    + ImageUrl : string <<get>>
    + ThumbnailUrl : string <<get>>
    + IsActived : bool <<get>> <<set>>
    + TemplateAsset : FileViewModel <<get>> <<set>>
    + Asset : FileViewModel <<get>> <<set>>
    + AssetFolder : string <<get>>
    + UploadsFolder : string <<get>>
    + TemplateFolder : string <<get>>
    + Templates : List<MixTemplates.UpdateViewModel> <<get>> <<set>>
    + UpdateViewModel()
    + UpdateViewModel(model:MixTheme, _context:MixCmsContext, _transaction:IDbContextTransaction)
    + <<override>> ParseModel(_context:MixCmsContext, _transaction:IDbContextTransaction) : MixTheme
    + <<override>> ExpandView(_context:MixCmsContext, _transaction:IDbContextTransaction) : void
    + <<override>> <<async>> SaveSubModelsAsync(parent:MixTheme, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    - <<async>> ImportThemeAsync(parent:MixTheme, _context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    - <<async>> SaveTemplatesAsync(parent:MixTheme, themeName:string, context:MixCmsContext, transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    - <<async>> ActivedThemeAsync(_context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    - <<async>> CreateDefaultThemeTemplatesAsync(_context:MixCmsContext, _transaction:IDbContextTransaction) : Task<RepositoryResponse<bool>>
    - ImportAssetsAsync(_context:MixCmsContext, _transaction:IDbContextTransaction) : RepositoryResponse<bool>
    - <<async>> InitAssetStyleAsync(_context:MixCmsContext, _transaction:IDbContextTransaction) : Task
}
"ViewModelBase`3" "<MixCmsContext,MixTheme,UpdateViewModel>" <|-- UpdateViewModel
@enduml
