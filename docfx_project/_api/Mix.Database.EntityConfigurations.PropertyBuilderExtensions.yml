### YamlMime:ManagedReference
items:
- uid: Mix.Database.EntityConfigurations.PropertyBuilderExtensions
  commentId: T:Mix.Database.EntityConfigurations.PropertyBuilderExtensions
  id: PropertyBuilderExtensions
  parent: Mix.Database.EntityConfigurations
  children:
  - Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf``1(PropertyBuilder{``0},System.Boolean,System.String)
  - Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf``1(PropertyBuilder{``0},System.Boolean)
  langs:
  - csharp
  - vb
  name: PropertyBuilderExtensions
  nameWithType: PropertyBuilderExtensions
  fullName: Mix.Database.EntityConfigurations.PropertyBuilderExtensions
  type: Class
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/PropertyBuilderExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PropertyBuilderExtensions
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/PropertyBuilderExtensions.cs
    startLine: 2
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations
  syntax:
    content: public static class PropertyBuilderExtensions
    content.vb: Public Module PropertyBuilderExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf``1(PropertyBuilder{``0},System.Boolean,System.String)
  commentId: M:Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf``1(PropertyBuilder{``0},System.Boolean,System.String)
  id: UseDefaultGUIDIf``1(PropertyBuilder{``0},System.Boolean,System.String)
  isExtensionMethod: true
  parent: Mix.Database.EntityConfigurations.PropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseDefaultGUIDIf<TPrimaryKey>(PropertyBuilder<TPrimaryKey>, Boolean, String)
  nameWithType: PropertyBuilderExtensions.UseDefaultGUIDIf<TPrimaryKey>(PropertyBuilder<TPrimaryKey>, Boolean, String)
  fullName: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf<TPrimaryKey>(PropertyBuilder<TPrimaryKey>, System.Boolean, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/PropertyBuilderExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UseDefaultGUIDIf
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/PropertyBuilderExtensions.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations
  syntax:
    content: public static PropertyBuilder<TPrimaryKey> UseDefaultGUIDIf<TPrimaryKey>(this PropertyBuilder<TPrimaryKey> builder, bool condition, string method)
    parameters:
    - id: builder
      type: PropertyBuilder{{TPrimaryKey}}
    - id: condition
      type: System.Boolean
    - id: method
      type: System.String
    typeParameters:
    - id: TPrimaryKey
    return:
      type: PropertyBuilder{{TPrimaryKey}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseDefaultGUIDIf(Of TPrimaryKey)(builder As PropertyBuilder(Of TPrimaryKey), condition As Boolean, method As String) As PropertyBuilder(Of TPrimaryKey)
  overload: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf*
  nameWithType.vb: PropertyBuilderExtensions.UseDefaultGUIDIf(Of TPrimaryKey)(PropertyBuilder(Of TPrimaryKey), Boolean, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf(Of TPrimaryKey)(PropertyBuilder(Of TPrimaryKey), System.Boolean, System.String)
  name.vb: UseDefaultGUIDIf(Of TPrimaryKey)(PropertyBuilder(Of TPrimaryKey), Boolean, String)
- uid: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf``1(PropertyBuilder{``0},System.Boolean)
  commentId: M:Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf``1(PropertyBuilder{``0},System.Boolean)
  id: UseIncreaseValueIf``1(PropertyBuilder{``0},System.Boolean)
  isExtensionMethod: true
  parent: Mix.Database.EntityConfigurations.PropertyBuilderExtensions
  langs:
  - csharp
  - vb
  name: UseIncreaseValueIf<TPrimaryKey>(PropertyBuilder<TPrimaryKey>, Boolean)
  nameWithType: PropertyBuilderExtensions.UseIncreaseValueIf<TPrimaryKey>(PropertyBuilder<TPrimaryKey>, Boolean)
  fullName: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf<TPrimaryKey>(PropertyBuilder<TPrimaryKey>, System.Boolean)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/PropertyBuilderExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UseIncreaseValueIf
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/PropertyBuilderExtensions.cs
    startLine: 12
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations
  syntax:
    content: public static PropertyBuilder<TPrimaryKey> UseIncreaseValueIf<TPrimaryKey>(this PropertyBuilder<TPrimaryKey> builder, bool condition)
    parameters:
    - id: builder
      type: PropertyBuilder{{TPrimaryKey}}
    - id: condition
      type: System.Boolean
    typeParameters:
    - id: TPrimaryKey
    return:
      type: PropertyBuilder{{TPrimaryKey}}
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function UseIncreaseValueIf(Of TPrimaryKey)(builder As PropertyBuilder(Of TPrimaryKey), condition As Boolean) As PropertyBuilder(Of TPrimaryKey)
  overload: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf*
  nameWithType.vb: PropertyBuilderExtensions.UseIncreaseValueIf(Of TPrimaryKey)(PropertyBuilder(Of TPrimaryKey), Boolean)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf(Of TPrimaryKey)(PropertyBuilder(Of TPrimaryKey), System.Boolean)
  name.vb: UseIncreaseValueIf(Of TPrimaryKey)(PropertyBuilder(Of TPrimaryKey), Boolean)
references:
- uid: Mix.Database.EntityConfigurations
  commentId: N:Mix.Database.EntityConfigurations
  name: Mix.Database.EntityConfigurations
  nameWithType: Mix.Database.EntityConfigurations
  fullName: Mix.Database.EntityConfigurations
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf*
  commentId: Overload:Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf
  name: UseDefaultGUIDIf
  nameWithType: PropertyBuilderExtensions.UseDefaultGUIDIf
  fullName: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseDefaultGUIDIf
- uid: PropertyBuilder{{TPrimaryKey}}
  commentId: '!:PropertyBuilder{``0}'
  definition: PropertyBuilder`1
  name: PropertyBuilder<TPrimaryKey>
  nameWithType: PropertyBuilder<TPrimaryKey>
  fullName: PropertyBuilder<TPrimaryKey>
  nameWithType.vb: PropertyBuilder(Of TPrimaryKey)
  fullName.vb: PropertyBuilder(Of TPrimaryKey)
  name.vb: PropertyBuilder(Of TPrimaryKey)
  spec.csharp:
  - uid: PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: PropertyBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: PropertyBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: PropertyBuilder`1
  isExternal: true
  name: PropertyBuilder<>
  nameWithType: PropertyBuilder<>
  fullName: PropertyBuilder<>
  nameWithType.vb: PropertyBuilder(Of )
  fullName.vb: PropertyBuilder(Of )
  name.vb: PropertyBuilder(Of )
  spec.csharp:
  - uid: PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: PropertyBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: PropertyBuilder`1
    name: PropertyBuilder
    nameWithType: PropertyBuilder
    fullName: PropertyBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf*
  commentId: Overload:Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf
  name: UseIncreaseValueIf
  nameWithType: PropertyBuilderExtensions.UseIncreaseValueIf
  fullName: Mix.Database.EntityConfigurations.PropertyBuilderExtensions.UseIncreaseValueIf
