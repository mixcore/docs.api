### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Constants.MixRoles
  commentId: T:Mix.Identity.Constants.MixRoles
  id: MixRoles
  parent: Mix.Identity.Constants
  children:
  - Mix.Identity.Constants.MixRoles.Administrators
  - Mix.Identity.Constants.MixRoles.Authors
  - Mix.Identity.Constants.MixRoles.Developers
  - Mix.Identity.Constants.MixRoles.Editors
  - Mix.Identity.Constants.MixRoles.Guest
  - Mix.Identity.Constants.MixRoles.Owner
  - Mix.Identity.Constants.MixRoles.SuperAdmin
  langs:
  - csharp
  - vb
  name: MixRoles
  nameWithType: MixRoles
  fullName: Mix.Identity.Constants.MixRoles
  type: Class
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixRoles
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 2
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public class MixRoles
    content.vb: Public Class MixRoles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Constants.MixRoles.SuperAdmin
  commentId: F:Mix.Identity.Constants.MixRoles.SuperAdmin
  id: SuperAdmin
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: SuperAdmin
  nameWithType: MixRoles.SuperAdmin
  fullName: Mix.Identity.Constants.MixRoles.SuperAdmin
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SuperAdmin
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 4
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string SuperAdmin = "SuperAdmin"
    return:
      type: System.String
    content.vb: Public Const SuperAdmin As String = "SuperAdmin"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Identity.Constants.MixRoles.Owner
  commentId: F:Mix.Identity.Constants.MixRoles.Owner
  id: Owner
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: Owner
  nameWithType: MixRoles.Owner
  fullName: Mix.Identity.Constants.MixRoles.Owner
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Owner
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 5
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string Owner = "Owner"
    return:
      type: System.String
    content.vb: Public Const Owner As String = "Owner"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Identity.Constants.MixRoles.Administrators
  commentId: F:Mix.Identity.Constants.MixRoles.Administrators
  id: Administrators
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: Administrators
  nameWithType: MixRoles.Administrators
  fullName: Mix.Identity.Constants.MixRoles.Administrators
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Administrators
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 6
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string Administrators = "Administrators"
    return:
      type: System.String
    content.vb: Public Const Administrators As String = "Administrators"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Identity.Constants.MixRoles.Editors
  commentId: F:Mix.Identity.Constants.MixRoles.Editors
  id: Editors
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: Editors
  nameWithType: MixRoles.Editors
  fullName: Mix.Identity.Constants.MixRoles.Editors
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Editors
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 7
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string Editors = "Editors"
    return:
      type: System.String
    content.vb: Public Const Editors As String = "Editors"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Identity.Constants.MixRoles.Developers
  commentId: F:Mix.Identity.Constants.MixRoles.Developers
  id: Developers
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: Developers
  nameWithType: MixRoles.Developers
  fullName: Mix.Identity.Constants.MixRoles.Developers
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Developers
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 8
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string Developers = "Developers"
    return:
      type: System.String
    content.vb: Public Const Developers As String = "Developers"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Identity.Constants.MixRoles.Authors
  commentId: F:Mix.Identity.Constants.MixRoles.Authors
  id: Authors
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: Authors
  nameWithType: MixRoles.Authors
  fullName: Mix.Identity.Constants.MixRoles.Authors
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Authors
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 9
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string Authors = "Authors"
    return:
      type: System.String
    content.vb: Public Const Authors As String = "Authors"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Identity.Constants.MixRoles.Guest
  commentId: F:Mix.Identity.Constants.MixRoles.Guest
  id: Guest
  parent: Mix.Identity.Constants.MixRoles
  langs:
  - csharp
  - vb
  name: Guest
  nameWithType: MixRoles.Guest
  fullName: Mix.Identity.Constants.MixRoles.Guest
  type: Field
  source:
    remote:
      path: src/platform/mix.identity/Constants/MixRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Guest
    path: ../../mix.core/src/platform/mix.identity/Constants/MixRoles.cs
    startLine: 10
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Constants
  syntax:
    content: public const string Guest = "Guest"
    return:
      type: System.String
    content.vb: Public Const Guest As String = "Guest"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mix.Identity.Constants
  commentId: N:Mix.Identity.Constants
  name: Mix.Identity.Constants
  nameWithType: Mix.Identity.Constants
  fullName: Mix.Identity.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
