### YamlMime:ManagedReference
items:
- uid: Mix.Heart.ViewModel.WrappingViewBase`1
  commentId: T:Mix.Heart.ViewModel.WrappingViewBase`1
  id: WrappingViewBase`1
  parent: Mix.Heart.ViewModel
  children:
  - Mix.Heart.ViewModel.WrappingViewBase`1.BeginUow(Mix.Heart.UnitOfWork.UnitOfWorkInfo@)
  - Mix.Heart.ViewModel.WrappingViewBase`1.Execute
  - Mix.Heart.ViewModel.WrappingViewBase`1.SaveGroupView(Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  langs:
  - csharp
  - vb
  name: WrappingViewBase<TDbContext>
  nameWithType: WrappingViewBase<TDbContext>
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>
  type: Class
  source:
    remote:
      path: src/Mix.Heart/ViewModel/WrappingViewBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: WrappingViewBase
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/ViewModel/WrappingViewBase.cs
    startLine: 6
  assemblies:
  - mix.heart
  namespace: Mix.Heart.ViewModel
  syntax:
    content: >-
      public abstract class WrappingViewBase<TDbContext>
          where TDbContext : DbContext
    typeParameters:
    - id: TDbContext
    content.vb: Public MustInherit Class WrappingViewBase(Of TDbContext As DbContext)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: WrappingViewBase(Of TDbContext)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext)
  name.vb: WrappingViewBase(Of TDbContext)
- uid: Mix.Heart.ViewModel.WrappingViewBase`1.Execute
  commentId: M:Mix.Heart.ViewModel.WrappingViewBase`1.Execute
  id: Execute
  parent: Mix.Heart.ViewModel.WrappingViewBase`1
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: WrappingViewBase<TDbContext>.Execute()
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>.Execute()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/ViewModel/WrappingViewBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Execute
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/ViewModel/WrappingViewBase.cs
    startLine: 8
  assemblies:
  - mix.heart
  namespace: Mix.Heart.ViewModel
  syntax:
    content: public virtual void Execute()
    content.vb: Public Overridable Sub Execute
  overload: Mix.Heart.ViewModel.WrappingViewBase`1.Execute*
  nameWithType.vb: WrappingViewBase(Of TDbContext).Execute()
  modifiers.csharp:
  - public
  - virtual
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext).Execute()
- uid: Mix.Heart.ViewModel.WrappingViewBase`1.BeginUow(Mix.Heart.UnitOfWork.UnitOfWorkInfo@)
  commentId: M:Mix.Heart.ViewModel.WrappingViewBase`1.BeginUow(Mix.Heart.UnitOfWork.UnitOfWorkInfo@)
  id: BeginUow(Mix.Heart.UnitOfWork.UnitOfWorkInfo@)
  parent: Mix.Heart.ViewModel.WrappingViewBase`1
  langs:
  - csharp
  - vb
  name: BeginUow(ref UnitOfWorkInfo)
  nameWithType: WrappingViewBase<TDbContext>.BeginUow(ref UnitOfWorkInfo)
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>.BeginUow(ref Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/ViewModel/WrappingViewBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: BeginUow
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/ViewModel/WrappingViewBase.cs
    startLine: 27
  assemblies:
  - mix.heart
  namespace: Mix.Heart.ViewModel
  syntax:
    content: protected virtual void BeginUow(ref UnitOfWorkInfo uowInfo)
    parameters:
    - id: uowInfo
      type: Mix.Heart.UnitOfWork.UnitOfWorkInfo
    content.vb: Protected Overridable Sub BeginUow(ByRef uowInfo As UnitOfWorkInfo)
  overload: Mix.Heart.ViewModel.WrappingViewBase`1.BeginUow*
  nameWithType.vb: WrappingViewBase(Of TDbContext).BeginUow(ByRef UnitOfWorkInfo)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext).BeginUow(ByRef Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  name.vb: BeginUow(ByRef UnitOfWorkInfo)
- uid: Mix.Heart.ViewModel.WrappingViewBase`1.SaveGroupView(Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  commentId: M:Mix.Heart.ViewModel.WrappingViewBase`1.SaveGroupView(Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  id: SaveGroupView(Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  parent: Mix.Heart.ViewModel.WrappingViewBase`1
  langs:
  - csharp
  - vb
  name: SaveGroupView(UnitOfWorkInfo)
  nameWithType: WrappingViewBase<TDbContext>.SaveGroupView(UnitOfWorkInfo)
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>.SaveGroupView(Mix.Heart.UnitOfWork.UnitOfWorkInfo)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/ViewModel/WrappingViewBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: SaveGroupView
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/ViewModel/WrappingViewBase.cs
    startLine: 41
  assemblies:
  - mix.heart
  namespace: Mix.Heart.ViewModel
  syntax:
    content: protected abstract void SaveGroupView(UnitOfWorkInfo uowInfo)
    parameters:
    - id: uowInfo
      type: Mix.Heart.UnitOfWork.UnitOfWorkInfo
    content.vb: Protected MustOverride Sub SaveGroupView(uowInfo As UnitOfWorkInfo)
  overload: Mix.Heart.ViewModel.WrappingViewBase`1.SaveGroupView*
  nameWithType.vb: WrappingViewBase(Of TDbContext).SaveGroupView(UnitOfWorkInfo)
  modifiers.csharp:
  - protected
  - abstract
  modifiers.vb:
  - Protected
  - MustOverride
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext).SaveGroupView(Mix.Heart.UnitOfWork.UnitOfWorkInfo)
references:
- uid: Mix.Heart.ViewModel
  commentId: N:Mix.Heart.ViewModel
  name: Mix.Heart.ViewModel
  nameWithType: Mix.Heart.ViewModel
  fullName: Mix.Heart.ViewModel
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.ViewModel.WrappingViewBase`1.Execute*
  commentId: Overload:Mix.Heart.ViewModel.WrappingViewBase`1.Execute
  name: Execute
  nameWithType: WrappingViewBase<TDbContext>.Execute
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>.Execute
  nameWithType.vb: WrappingViewBase(Of TDbContext).Execute
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext).Execute
- uid: Mix.Heart.ViewModel.WrappingViewBase`1.BeginUow*
  commentId: Overload:Mix.Heart.ViewModel.WrappingViewBase`1.BeginUow
  name: BeginUow
  nameWithType: WrappingViewBase<TDbContext>.BeginUow
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>.BeginUow
  nameWithType.vb: WrappingViewBase(Of TDbContext).BeginUow
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext).BeginUow
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  commentId: T:Mix.Heart.UnitOfWork.UnitOfWorkInfo
  parent: Mix.Heart.UnitOfWork
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo
- uid: Mix.Heart.UnitOfWork
  commentId: N:Mix.Heart.UnitOfWork
  name: Mix.Heart.UnitOfWork
  nameWithType: Mix.Heart.UnitOfWork
  fullName: Mix.Heart.UnitOfWork
- uid: Mix.Heart.ViewModel.WrappingViewBase`1.SaveGroupView*
  commentId: Overload:Mix.Heart.ViewModel.WrappingViewBase`1.SaveGroupView
  name: SaveGroupView
  nameWithType: WrappingViewBase<TDbContext>.SaveGroupView
  fullName: Mix.Heart.ViewModel.WrappingViewBase<TDbContext>.SaveGroupView
  nameWithType.vb: WrappingViewBase(Of TDbContext).SaveGroupView
  fullName.vb: Mix.Heart.ViewModel.WrappingViewBase(Of TDbContext).SaveGroupView
