### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions
  commentId: T:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions
  id: MixAttributeValueModelExtensions
  parent: Mix.Cms.Lib.Extensions
  children:
  - Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData(Newtonsoft.Json.Linq.JObject,System.String,System.Int32,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty(Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue(Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel,Newtonsoft.Json.Linq.JToken)
  langs:
  - csharp
  - vb
  name: MixAttributeValueModelExtensions
  nameWithType: MixAttributeValueModelExtensions
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixAttributeValueModelExtensions
    path: ../../mix.core/src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
    startLine: 17
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Extensions
  syntax:
    content: public static class MixAttributeValueModelExtensions
    content.vb: Public Module MixAttributeValueModelExtensions
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty(Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty(Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ToJProperty(Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExtensionMethod: true
  parent: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions
  langs:
  - csharp
  - vb
  name: ToJProperty(MixAttributeSetValue, MixCmsContext, IDbContextTransaction)
  nameWithType: MixAttributeValueModelExtensions.ToJProperty(MixAttributeSetValue, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty(Mix.Cms.Lib.Models.Cms.MixAttributeSetValue, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ToJProperty
    path: ../../mix.core/src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Extensions
  syntax:
    content: public static JProperty ToJProperty(this MixAttributeSetValue item, MixCmsContext _context, IDbContextTransaction _transaction)
    parameters:
    - id: item
      type: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Newtonsoft.Json.Linq.JProperty
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Function ToJProperty(item As MixAttributeSetValue, _context As MixCmsContext, _transaction As IDbContextTransaction) As JProperty
  overload: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue(Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel,Newtonsoft.Json.Linq.JToken)
  commentId: M:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue(Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel,Newtonsoft.Json.Linq.JToken)
  id: ToModelValue(Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel,Newtonsoft.Json.Linq.JToken)
  isExtensionMethod: true
  parent: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions
  langs:
  - csharp
  - vb
  name: ToModelValue(UpdateViewModel, JToken)
  nameWithType: MixAttributeValueModelExtensions.ToModelValue(UpdateViewModel, JToken)
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue(Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel, Newtonsoft.Json.Linq.JToken)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ToModelValue
    path: ../../mix.core/src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
    startLine: 88
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Extensions
  syntax:
    content: public static void ToModelValue(this UpdateViewModel item, JToken property)
    parameters:
    - id: item
      type: Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel
    - id: property
      type: Newtonsoft.Json.Linq.JToken
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub ToModelValue(item As UpdateViewModel, property As JToken)
  overload: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData(Newtonsoft.Json.Linq.JObject,System.String,System.Int32,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData(Newtonsoft.Json.Linq.JObject,System.String,System.Int32,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: LoadAllReferenceData(Newtonsoft.Json.Linq.JObject,System.String,System.Int32,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExtensionMethod: true
  parent: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions
  langs:
  - csharp
  - vb
  name: LoadAllReferenceData(JObject, String, Int32, String, MixCmsContext, IDbContextTransaction)
  nameWithType: MixAttributeValueModelExtensions.LoadAllReferenceData(JObject, String, Int32, String, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData(Newtonsoft.Json.Linq.JObject, System.String, System.Int32, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadAllReferenceData
    path: ../../mix.core/src/Mix.Cms.Lib/Extensions/MixAttributeValueModelExtensions.cs
    startLine: 187
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Extensions
  syntax:
    content: public static void LoadAllReferenceData(this JObject obj, string dataId, int attributeSetId, string culture, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: obj
      type: Newtonsoft.Json.Linq.JObject
    - id: dataId
      type: System.String
    - id: attributeSetId
      type: System.Int32
    - id: culture
      type: System.String
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: >-
      <ExtensionAttribute>

      Public Shared Sub LoadAllReferenceData(obj As JObject, dataId As String, attributeSetId As Integer, culture As String, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Cms.Lib.Extensions
  commentId: N:Mix.Cms.Lib.Extensions
  name: Mix.Cms.Lib.Extensions
  nameWithType: Mix.Cms.Lib.Extensions
  fullName: Mix.Cms.Lib.Extensions
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty*
  commentId: Overload:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty
  name: ToJProperty
  nameWithType: MixAttributeValueModelExtensions.ToJProperty
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToJProperty
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
  commentId: T:Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
  parent: Mix.Cms.Lib.Models.Cms
  name: MixAttributeSetValue
  nameWithType: MixAttributeSetValue
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Newtonsoft.Json.Linq.JProperty
  commentId: T:Newtonsoft.Json.Linq.JProperty
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JProperty
  nameWithType: JProperty
  fullName: Newtonsoft.Json.Linq.JProperty
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue*
  commentId: Overload:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue
  name: ToModelValue
  nameWithType: MixAttributeValueModelExtensions.ToModelValue
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.ToModelValue
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetValues
  name: UpdateViewModel
  nameWithType: UpdateViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetValues.UpdateViewModel
- uid: Newtonsoft.Json.Linq.JToken
  commentId: T:Newtonsoft.Json.Linq.JToken
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JToken
  nameWithType: JToken
  fullName: Newtonsoft.Json.Linq.JToken
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetValues
  commentId: N:Mix.Cms.Lib.ViewModels.MixAttributeSetValues
  name: Mix.Cms.Lib.ViewModels.MixAttributeSetValues
  nameWithType: Mix.Cms.Lib.ViewModels.MixAttributeSetValues
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetValues
- uid: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData*
  commentId: Overload:Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData
  name: LoadAllReferenceData
  nameWithType: MixAttributeValueModelExtensions.LoadAllReferenceData
  fullName: Mix.Cms.Lib.Extensions.MixAttributeValueModelExtensions.LoadAllReferenceData
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
