### YamlMime:ManagedReference
items:
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  commentId: T:Mix.Heart.UnitOfWork.UnitOfWorkInfo
  id: UnitOfWorkInfo
  parent: Mix.Heart.UnitOfWork
  children:
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext(Microsoft.EntityFrameworkCore.DbContext)
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  langs:
  - csharp
  - vb
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  type: Class
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: UnitOfWorkInfo
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 6
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public class UnitOfWorkInfo
    content.vb: Public Class UnitOfWorkInfo
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Heart.UnitOfWork.UnitOfWorkInfo`1
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext
  commentId: P:Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext
  id: ActiveDbContext
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: ActiveDbContext
  nameWithType: UnitOfWorkInfo.ActiveDbContext
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext
  type: Property
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: ActiveDbContext
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 8
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public DbContext ActiveDbContext { get; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.DbContext
    content.vb: Public ReadOnly Property ActiveDbContext As DbContext
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction
  commentId: P:Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction
  id: ActiveTransaction
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: ActiveTransaction
  nameWithType: UnitOfWorkInfo.ActiveTransaction
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction
  type: Property
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: ActiveTransaction
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public IDbContextTransaction ActiveTransaction { get; }
    parameters: []
    return:
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public ReadOnly Property ActiveTransaction As IDbContextTransaction
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.#ctor(Microsoft.EntityFrameworkCore.DbContext)
  id: '#ctor(Microsoft.EntityFrameworkCore.DbContext)'
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: UnitOfWorkInfo(DbContext)
  nameWithType: UnitOfWorkInfo.UnitOfWorkInfo(DbContext)
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.UnitOfWorkInfo(Microsoft.EntityFrameworkCore.DbContext)
  type: Constructor
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: .ctor
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 12
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public UnitOfWorkInfo(DbContext dbContext)
    parameters:
    - id: dbContext
      type: Microsoft.EntityFrameworkCore.DbContext
    content.vb: Public Sub New(dbContext As DbContext)
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext(Microsoft.EntityFrameworkCore.DbContext)
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext(Microsoft.EntityFrameworkCore.DbContext)
  id: SetDbContext(Microsoft.EntityFrameworkCore.DbContext)
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: SetDbContext(DbContext)
  nameWithType: UnitOfWorkInfo.SetDbContext(DbContext)
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext(Microsoft.EntityFrameworkCore.DbContext)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: SetDbContext
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 17
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public void SetDbContext(DbContext dbContext)
    parameters:
    - id: dbContext
      type: Microsoft.EntityFrameworkCore.DbContext
    content.vb: Public Sub SetDbContext(dbContext As DbContext)
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SetTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: SetTransaction(IDbContextTransaction)
  nameWithType: UnitOfWorkInfo.SetTransaction(IDbContextTransaction)
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: SetTransaction
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 22
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public void SetTransaction(IDbContextTransaction dbContextTransaction)
    parameters:
    - id: dbContextTransaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub SetTransaction(dbContextTransaction As IDbContextTransaction)
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin
  id: Begin
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: Begin()
  nameWithType: UnitOfWorkInfo.Begin()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: Begin
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 27
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  syntax:
    content: public void Begin()
    content.vb: Public Sub Begin
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close
  id: Close
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: Close()
  nameWithType: UnitOfWorkInfo.Close()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: Close
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 40
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  summary: "\nTODO: implement multiple db context\n"
  example: []
  syntax:
    content: public void Close()
    content.vb: Public Sub Close
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync
  id: CloseAsync
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: CloseAsync()
  nameWithType: UnitOfWorkInfo.CloseAsync()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: CloseAsync
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 49
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  summary: "\nTODO: implement multiple db context\n"
  example: []
  syntax:
    content: public Task CloseAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CloseAsync As Task
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete
  id: Complete
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: Complete()
  nameWithType: UnitOfWorkInfo.Complete()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: Complete
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 60
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  summary: "\nTODO: implement multiple db context\n"
  example: []
  syntax:
    content: public void Complete()
    content.vb: Public Sub Complete
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback
  id: Rollback
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: Rollback()
  nameWithType: UnitOfWorkInfo.Rollback()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: Rollback
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 73
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  summary: "\nTODO: implement multiple db context\n"
  example: []
  syntax:
    content: public void Rollback()
    content.vb: Public Sub Rollback
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync
  id: CompleteAsync
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: CompleteAsync()
  nameWithType: UnitOfWorkInfo.CompleteAsync()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: CompleteAsync
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 86
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  summary: "\nTODO: implement multiple db context\n"
  example: []
  syntax:
    content: public Task CompleteAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function CompleteAsync As Task
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync
  commentId: M:Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync
  id: RollbackAsync
  parent: Mix.Heart.UnitOfWork.UnitOfWorkInfo
  langs:
  - csharp
  - vb
  name: RollbackAsync()
  nameWithType: UnitOfWorkInfo.RollbackAsync()
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: RollbackAsync
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/UnitOfWork/UnitOfWorkInfo.cs
    startLine: 99
  assemblies:
  - mix.heart
  namespace: Mix.Heart.UnitOfWork
  summary: "\nTODO: implement multiple db context\n"
  example: []
  syntax:
    content: public Task RollbackAsync()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function RollbackAsync As Task
  overload: Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Heart.UnitOfWork
  commentId: N:Mix.Heart.UnitOfWork
  name: Mix.Heart.UnitOfWork
  nameWithType: Mix.Heart.UnitOfWork
  fullName: Mix.Heart.UnitOfWork
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext
  name: ActiveDbContext
  nameWithType: UnitOfWorkInfo.ActiveDbContext
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveDbContext
- uid: Microsoft.EntityFrameworkCore.DbContext
  commentId: T:Microsoft.EntityFrameworkCore.DbContext
  parent: Microsoft.EntityFrameworkCore
  isExternal: true
  name: DbContext
  nameWithType: DbContext
  fullName: Microsoft.EntityFrameworkCore.DbContext
- uid: Microsoft.EntityFrameworkCore
  commentId: N:Microsoft.EntityFrameworkCore
  isExternal: true
  name: Microsoft.EntityFrameworkCore
  nameWithType: Microsoft.EntityFrameworkCore
  fullName: Microsoft.EntityFrameworkCore
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction
  name: ActiveTransaction
  nameWithType: UnitOfWorkInfo.ActiveTransaction
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.ActiveTransaction
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.#ctor*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.#ctor
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo.UnitOfWorkInfo
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.UnitOfWorkInfo
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext
  name: SetDbContext
  nameWithType: UnitOfWorkInfo.SetDbContext
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetDbContext
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction
  name: SetTransaction
  nameWithType: UnitOfWorkInfo.SetTransaction
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.SetTransaction
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin
  name: Begin
  nameWithType: UnitOfWorkInfo.Begin
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Begin
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close
  name: Close
  nameWithType: UnitOfWorkInfo.Close
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Close
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync
  name: CloseAsync
  nameWithType: UnitOfWorkInfo.CloseAsync
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CloseAsync
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete
  name: Complete
  nameWithType: UnitOfWorkInfo.Complete
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Complete
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback
  name: Rollback
  nameWithType: UnitOfWorkInfo.Rollback
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.Rollback
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync
  name: CompleteAsync
  nameWithType: UnitOfWorkInfo.CompleteAsync
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.CompleteAsync
- uid: Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync*
  commentId: Overload:Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync
  name: RollbackAsync
  nameWithType: UnitOfWorkInfo.RollbackAsync
  fullName: Mix.Heart.UnitOfWork.UnitOfWorkInfo.RollbackAsync
