### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  commentId: T:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  id: ConnectViewModel
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  children:
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.#ctor(Mix.Cms.Service.SignalR.Models.MessengerConnection)
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name
  langs:
  - csharp
  - vb
  name: ConnectViewModel
  nameWithType: ConnectViewModel
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConnectViewModel
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 10
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: public class ConnectViewModel
    content.vb: Public Class ConnectViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id
  id: Id
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ConnectViewModel.Id
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 14
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name
  id: Name
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ConnectViewModel.Name
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 17
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("name")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name")>

      Public Property Name As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar
  id: Avatar
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: ConnectViewModel.Avatar
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Avatar
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 20
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("avatar")]

      public string Avatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("avatar")>

      Public Property Avatar As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: avatar
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device
  id: Device
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: Device
  nameWithType: ConnectViewModel.Device
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Device
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 23
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("device")]

      public MixMessengerUserDevice Device { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    content.vb: >-
      <JsonProperty("device")>

      Public Property Device As MixMessengerUserDevice
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: device
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate
  id: CreatedDate
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: ConnectViewModel.CreatedDate
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDate
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("createdDate")]

      public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("createdDate")>

      Public Property CreatedDate As Date
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified
  id: LastModified
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: ConnectViewModel.LastModified
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("lastModified")]

      public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("lastModified")>

      Public Property LastModified As Date?
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin
  id: IsJoin
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: IsJoin
  nameWithType: ConnectViewModel.IsJoin
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsJoin
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 31
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: >-
      [JsonProperty("isJoin")]

      public bool IsJoin { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isJoin")>

      Public Property IsJoin As Boolean
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isJoin
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.#ctor(Mix.Cms.Service.SignalR.Models.MessengerConnection)
  commentId: M:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.#ctor(Mix.Cms.Service.SignalR.Models.MessengerConnection)
  id: '#ctor(Mix.Cms.Service.SignalR.Models.MessengerConnection)'
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: ConnectViewModel(MessengerConnection)
  nameWithType: ConnectViewModel.ConnectViewModel(MessengerConnection)
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.ConnectViewModel(Mix.Cms.Service.SignalR.Models.MessengerConnection)
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 37
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: public ConnectViewModel(MessengerConnection connection)
    parameters:
    - id: connection
      type: Mix.Cms.Service.SignalR.Models.MessengerConnection
    content.vb: Public Sub New(connection As MessengerConnection)
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: Join(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel
  langs:
  - csharp
  - vb
  name: Join(MixChatServiceContext, IDbContextTransaction)
  nameWithType: ConnectViewModel.Join(MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Join
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUsers/ConnectViewModel.cs
    startLine: 70
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  syntax:
    content: public RepositoryResponse<bool> Join(MixChatServiceContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
    content.vb: Public Function Join(_context As MixChatServiceContext = Nothing, _transaction As IDbContextTransaction = Nothing) As RepositoryResponse(Of Boolean)
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  commentId: N:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  name: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  nameWithType: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id
  name: Id
  nameWithType: ConnectViewModel.Id
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name
  name: Name
  nameWithType: ConnectViewModel.Name
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Name
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar
  name: Avatar
  nameWithType: ConnectViewModel.Avatar
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Avatar
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device
  name: Device
  nameWithType: ConnectViewModel.Device
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Device
- uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  commentId: T:Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  parent: Mix.Cms.Messenger.Models.Data
  name: MixMessengerUserDevice
  nameWithType: MixMessengerUserDevice
  fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
- uid: Mix.Cms.Messenger.Models.Data
  commentId: N:Mix.Cms.Messenger.Models.Data
  name: Mix.Cms.Messenger.Models.Data
  nameWithType: Mix.Cms.Messenger.Models.Data
  fullName: Mix.Cms.Messenger.Models.Data
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate
  name: CreatedDate
  nameWithType: ConnectViewModel.CreatedDate
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified
  name: LastModified
  nameWithType: ConnectViewModel.LastModified
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.LastModified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin
  name: IsJoin
  nameWithType: ConnectViewModel.IsJoin
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.IsJoin
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.#ctor*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.#ctor
  name: ConnectViewModel
  nameWithType: ConnectViewModel.ConnectViewModel
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.ConnectViewModel
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection
  commentId: T:Mix.Cms.Service.SignalR.Models.MessengerConnection
  parent: Mix.Cms.Service.SignalR.Models
  name: MessengerConnection
  nameWithType: MessengerConnection
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection
- uid: Mix.Cms.Service.SignalR.Models
  commentId: N:Mix.Cms.Service.SignalR.Models
  name: Mix.Cms.Service.SignalR.Models
  nameWithType: Mix.Cms.Service.SignalR.Models
  fullName: Mix.Cms.Service.SignalR.Models
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join
  name: Join
  nameWithType: ConnectViewModel.Join
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUsers.ConnectViewModel.Join
- uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  commentId: T:Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  parent: Mix.Cms.Messenger.Models.Data
  name: MixChatServiceContext
  nameWithType: MixChatServiceContext
  fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<Boolean>
  nameWithType: RepositoryResponse<Boolean>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>
  nameWithType.vb: RepositoryResponse(Of Boolean)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean)
  name.vb: RepositoryResponse(Of Boolean)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
