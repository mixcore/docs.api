### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  commentId: T:Mix.Cms.Lib.ViewModels.MixPosts.Helper
  id: Helper
  parent: Mix.Cms.Lib.ViewModels.MixPosts
  children:
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId``1(System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts
  - Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost``1(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  langs:
  - csharp
  - vb
  name: Helper
  nameWithType: Helper
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Helper
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 20
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: public class Helper
    content.vb: Public Class Helper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetModelistByMeta``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetModelistByMeta<TView>(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetModelistByMeta<TView>(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta<TView>(System.String, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetModelistByMeta
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 36
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  summary: "\nGets the modelist by meta.\n"
  example: []
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetModelistByMeta<TView>(string metaName, string metaValue, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: metaName
      type: System.String
      description: 'Name of the meta. Ex: sys_tag / sys_category'
    - id: metaValue
      type: System.String
      description: The meta value.
    - id: culture
      type: System.String
      description: The culture.
    - id: orderByPropertyName
      type: System.String
      description: Name of the order by property.
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
      description: The direction.
    - id: pageSize
      type: System.Nullable{System.Int32}
      description: Size of the page.
    - id: pageIndex
      type: System.Nullable{System.Int32}
      description: Index of the page.
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
      description: The context.
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
      description: The transaction.
    typeParameters:
    - id: TView
      description: The type of the view.
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
      description: ''
    content.vb: Public Shared Function GetModelistByMeta(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(metaName As String, metaValue As String, culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta*
  nameWithType.vb: Helper.GetModelistByMeta(Of TView)(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta(Of TView)(System.String, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetModelistByMeta(Of TView)(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostListByValueId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetPostListByValueId<TView>(String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetPostListByValueId<TView>(String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId<TView>(System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostListByValueId
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 95
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostListByValueId<TView>(string valueId, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: valueId
      type: System.String
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostListByValueId(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(valueId As String, culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId*
  nameWithType.vb: Helper.GetPostListByValueId(Of TView)(String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId(Of TView)(System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostListByValueId(Of TView)(String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostListByValueIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetPostListByValueIds<TView>(List<String>, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetPostListByValueIds<TView>(List<String>, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds<TView>(System.Collections.Generic.List<System.String>, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostListByValueIds
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 154
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostListByValueIds<TView>(List<string> valueIds, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: valueIds
      type: System.Collections.Generic.List{System.String}
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostListByValueIds(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(valueIds As List(Of String), culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds*
  nameWithType.vb: Helper.GetPostListByValueIds(Of TView)(List(Of String), String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds(Of TView)(System.Collections.Generic.List(Of System.String), System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostListByValueIds(Of TView)(List(Of String), String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId``1(System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId``1(System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostListByPageId``1(System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetPostListByPageId<TView>(Int32, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetPostListByPageId<TView>(Int32, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId<TView>(System.Int32, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostListByPageId
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 221
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostListByPageId<TView>(int pageId, string keyword = null, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPagePost, TView>
    parameters:
    - id: pageId
      type: System.Int32
    - id: keyword
      type: System.String
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostListByPageId(Of TView As ViewModelBase(Of MixCmsContext, MixPagePost, TView))(pageId As Integer, keyword As String = Nothing, culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId*
  nameWithType.vb: Helper.GetPostListByPageId(Of TView)(Int32, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId(Of TView)(System.Int32, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostListByPageId(Of TView)(Int32, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostListByDataId``1(System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetPostListByDataId<TView>(String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetPostListByDataId<TView>(String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId<TView>(System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostListByDataId
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 261
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostListByDataId<TView>(string dataId, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: dataId
      type: System.String
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostListByDataId(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(dataId As String, culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId*
  nameWithType.vb: Helper.GetPostListByDataId(Of TView)(String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId(Of TView)(System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostListByDataId(Of TView)(String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostListByDataIds``1(System.Collections.Generic.List{System.String},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetPostListByDataIds<TView>(List<String>, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetPostListByDataIds<TView>(List<String>, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds<TView>(System.Collections.Generic.List<System.String>, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostListByDataIds
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 324
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostListByDataIds<TView>(List<string> dataIds, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: dataIds
      type: System.Collections.Generic.List{System.String}
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostListByDataIds(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(dataIds As List(Of String), culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds*
  nameWithType.vb: Helper.GetPostListByDataIds(Of TView)(List(Of String), String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds(Of TView)(System.Collections.Generic.List(Of System.String), System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostListByDataIds(Of TView)(List(Of String), String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost``1(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost``1(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: SearchPost``1(System.String,System.Collections.Generic.List{System.String},System.Collections.Generic.List{System.Int32},System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: SearchPost<TView>(String, List<String>, List<Int32>, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.SearchPost<TView>(String, List<String>, List<Int32>, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost<TView>(System.String, System.Collections.Generic.List<System.String>, System.Collections.Generic.List<System.Int32>, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SearchPost
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 394
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> SearchPost<TView>(string keyword, List<string> dataIds, List<int> pageIds = null, string culture = null, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: keyword
      type: System.String
    - id: dataIds
      type: System.Collections.Generic.List{System.String}
    - id: pageIds
      type: System.Collections.Generic.List{System.Int32}
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function SearchPost(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(keyword As String, dataIds As List(Of String), pageIds As List(Of Integer) = Nothing, culture As String = Nothing, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost*
  nameWithType.vb: Helper.SearchPost(Of TView)(String, List(Of String), List(Of Int32), String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost(Of TView)(System.String, System.Collections.Generic.List(Of System.String), System.Collections.Generic.List(Of System.Int32), System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: SearchPost(Of TView)(String, List(Of String), List(Of Int32), String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetModelistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: GetModelistByAdditionalField<TView>(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetModelistByAdditionalField<TView>(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField<TView>(System.String, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetModelistByAdditionalField
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 506
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetModelistByAdditionalField<TView>(string fieldName, string value, string culture, string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.String
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetModelistByAdditionalField(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(fieldName As String, value As String, culture As String, orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer?, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField*
  nameWithType.vb: Helper.GetModelistByAdditionalField(Of TView)(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField(Of TView)(System.String, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetModelistByAdditionalField(Of TView)(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts
  commentId: M:Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts
  id: PublishScheduledPosts
  parent: Mix.Cms.Lib.ViewModels.MixPosts.Helper
  langs:
  - csharp
  - vb
  name: PublishScheduledPosts()
  nameWithType: Helper.PublishScheduledPosts()
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PublishScheduledPosts
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPosts/Helper.cs
    startLine: 574
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPosts
  syntax:
    content: public static Task PublishScheduledPosts()
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function PublishScheduledPosts As Task
  overload: Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Cms.Lib.ViewModels.MixPosts
  commentId: N:Mix.Cms.Lib.ViewModels.MixPosts
  name: Mix.Cms.Lib.ViewModels.MixPosts
  nameWithType: Mix.Cms.Lib.ViewModels.MixPosts
  fullName: Mix.Cms.Lib.ViewModels.MixPosts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta
  name: GetModelistByMeta
  nameWithType: Helper.GetModelistByMeta
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByMeta
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
  commentId: T:Mix.Heart.Enums.MixHeartEnums.DisplayDirection
  parent: Mix.Heart.Enums
  isExternal: true
  name: MixHeartEnums.DisplayDirection
  nameWithType: MixHeartEnums.DisplayDirection
  fullName: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{`2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<TView>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<TView>>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Domain.Core.ViewModels.PaginationModel<TView>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Domain.Core.ViewModels.PaginationModel(Of TView)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  isExternal: true
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId
  name: GetPostListByValueId
  nameWithType: Helper.GetPostListByValueId
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueId
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds
  name: GetPostListByValueIds
  nameWithType: Helper.GetPostListByValueIds
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByValueIds
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId
  name: GetPostListByPageId
  nameWithType: Helper.GetPostListByPageId
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByPageId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId
  name: GetPostListByDataId
  nameWithType: Helper.GetPostListByDataId
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataId
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds
  name: GetPostListByDataIds
  nameWithType: Helper.GetPostListByDataIds
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetPostListByDataIds
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost
  name: SearchPost
  nameWithType: Helper.SearchPost
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.SearchPost
- uid: System.Collections.Generic.List{System.Int32}
  commentId: T:System.Collections.Generic.List{System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Int32>
  nameWithType: List<Int32>
  fullName: System.Collections.Generic.List<System.Int32>
  nameWithType.vb: List(Of Int32)
  fullName.vb: System.Collections.Generic.List(Of System.Int32)
  name.vb: List(Of Int32)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField
  name: GetModelistByAdditionalField
  nameWithType: Helper.GetModelistByAdditionalField
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.GetModelistByAdditionalField
- uid: Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts
  name: PublishScheduledPosts
  nameWithType: Helper.PublishScheduledPosts
  fullName: Mix.Cms.Lib.ViewModels.MixPosts.Helper.PublishScheduledPosts
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
