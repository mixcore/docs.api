### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Services.TenantUserStore
  commentId: T:Mix.Lib.Services.TenantUserStore
  id: TenantUserStore
  parent: Mix.Lib.Services
  children:
  - Mix.Lib.Services.TenantUserStore.#ctor(Mix.Database.Entities.Account.MixCmsAccountContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  langs:
  - csharp
  - vb
  name: TenantUserStore
  nameWithType: TenantUserStore
  fullName: Mix.Lib.Services.TenantUserStore
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Services/TenantUserStore.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TenantUserStore
    path: ../../mix.core/src/platform/mix.library/Services/TenantUserStore.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: 'public class TenantUserStore : UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>, IUserLoginStore<MixUser>, IUserClaimStore<MixUser>, IUserPasswordStore<MixUser>, IUserSecurityStampStore<MixUser>, IUserEmailStore<MixUser>, IUserLockoutStore<MixUser>, IUserPhoneNumberStore<MixUser>, IQueryableUserStore<MixUser>, IUserTwoFactorStore<MixUser>, IUserAuthenticationTokenStore<MixUser>, IUserAuthenticatorKeyStore<MixUser>, IUserTwoFactorRecoveryCodeStore<MixUser>, IUserRoleStore<MixUser>, IProtectedUserStore<MixUser>, IUserStore<MixUser>, IDisposable'
    content.vb: >-
      Public Class TenantUserStore
          Inherits UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims)
          Implements IUserLoginStore(Of MixUser), IUserClaimStore(Of MixUser), IUserPasswordStore(Of MixUser), IUserSecurityStampStore(Of MixUser), IUserEmailStore(Of MixUser), IUserLockoutStore(Of MixUser), IUserPhoneNumberStore(Of MixUser), IQueryableUserStore(Of MixUser), IUserTwoFactorStore(Of MixUser), IUserAuthenticationTokenStore(Of MixUser), IUserAuthenticatorKeyStore(Of MixUser), IUserTwoFactorRecoveryCodeStore(Of MixUser), IUserRoleStore(Of MixUser), IProtectedUserStore(Of MixUser), IUserStore(Of MixUser), IDisposable
  inheritance:
  - System.Object
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  implements:
  - Microsoft.AspNetCore.Identity.IUserLoginStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserClaimStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserPasswordStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserSecurityStampStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserEmailStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserLockoutStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserPhoneNumberStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IQueryableUserStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserTwoFactorStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserRoleStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IProtectedUserStore{Mix.Database.Entities.Account.MixUser}
  - Microsoft.AspNetCore.Identity.IUserStore{Mix.Database.Entities.Account.MixUser}
  - System.IDisposable
  inheritedMembers:
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.SaveChanges(System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.CreateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.UpdateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.DeleteAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindRoleAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserRoleAsync(Guid,Guid,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserAsync(Guid,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserLoginAsync(Guid,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddToRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetRolesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.IsInRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddLoginAsync(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetLoginsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.Context
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AutoSaveChanges
  - Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.Users
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.CreateUserRole(Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddToRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetRolesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.IsInRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindRoleAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserRoleAsync(Guid,Guid,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserClaim(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserLogin(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserToken(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.String)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUserIdAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUserNameAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetUserNameAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.UpdateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.DeleteAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ConvertIdFromString(System.String)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ConvertIdToString(Guid)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPasswordHashAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPasswordHashAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.HasPasswordAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserAsync(Guid,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserLoginAsync(Guid,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ThrowIfDisposed
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.Dispose
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddLoginAsync(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLoginsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetEmailAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetEmailAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.IncrementAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ResetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetSecurityStampAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetSecurityStampAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CountCodesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ReplaceCodesAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RedeemCodeAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ErrorDescriber
  - Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.Users
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Services.TenantUserStore.#ctor(Mix.Database.Entities.Account.MixCmsAccountContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  commentId: M:Mix.Lib.Services.TenantUserStore.#ctor(Mix.Database.Entities.Account.MixCmsAccountContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  id: '#ctor(Mix.Database.Entities.Account.MixCmsAccountContext,Microsoft.AspNetCore.Identity.IdentityErrorDescriber)'
  parent: Mix.Lib.Services.TenantUserStore
  langs:
  - csharp
  - vb
  name: TenantUserStore(MixCmsAccountContext, IdentityErrorDescriber)
  nameWithType: TenantUserStore.TenantUserStore(MixCmsAccountContext, IdentityErrorDescriber)
  fullName: Mix.Lib.Services.TenantUserStore.TenantUserStore(Mix.Database.Entities.Account.MixCmsAccountContext, Microsoft.AspNetCore.Identity.IdentityErrorDescriber)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Services/TenantUserStore.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Services/TenantUserStore.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public TenantUserStore(MixCmsAccountContext context, IdentityErrorDescriber describer = null)
    parameters:
    - id: context
      type: Mix.Database.Entities.Account.MixCmsAccountContext
    - id: describer
      type: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
    content.vb: Public Sub New(context As MixCmsAccountContext, describer As IdentityErrorDescriber = Nothing)
  overload: Mix.Lib.Services.TenantUserStore.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Services
  commentId: N:Mix.Lib.Services
  name: Mix.Lib.Services
  nameWithType: Mix.Lib.Services
  fullName: Mix.Lib.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  commentId: T:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5
  name: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens)
  name.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  commentId: T:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8
  name: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims)
  name.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
  name: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims)
  name.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixCmsAccountContext
    name: MixCmsAccountContext
    nameWithType: MixCmsAccountContext
    fullName: Mix.Database.Entities.Account.MixCmsAccountContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixCmsAccountContext
    name: MixCmsAccountContext
    nameWithType: MixCmsAccountContext
    fullName: Mix.Database.Entities.Account.MixCmsAccountContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLoginStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserLoginStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserLoginStore`1
  name: IUserLoginStore<MixUser>
  nameWithType: IUserLoginStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLoginStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserLoginStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserLoginStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserLoginStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserClaimStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserClaimStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserClaimStore`1
  name: IUserClaimStore<MixUser>
  nameWithType: IUserClaimStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserClaimStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserClaimStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserClaimStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserClaimStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPasswordStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserPasswordStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
  name: IUserPasswordStore<MixUser>
  nameWithType: IUserPasswordStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserPasswordStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserPasswordStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserPasswordStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserSecurityStampStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
  name: IUserSecurityStampStore<MixUser>
  nameWithType: IUserSecurityStampStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserSecurityStampStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserSecurityStampStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserSecurityStampStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserEmailStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserEmailStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserEmailStore`1
  name: IUserEmailStore<MixUser>
  nameWithType: IUserEmailStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserEmailStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserEmailStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserEmailStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserEmailStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLockoutStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserLockoutStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
  name: IUserLockoutStore<MixUser>
  nameWithType: IUserLockoutStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserLockoutStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserLockoutStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserLockoutStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserPhoneNumberStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
  name: IUserPhoneNumberStore<MixUser>
  nameWithType: IUserPhoneNumberStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserPhoneNumberStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserPhoneNumberStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableUserStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableUserStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
  name: IQueryableUserStore<MixUser>
  nameWithType: IQueryableUserStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IQueryableUserStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IQueryableUserStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IQueryableUserStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  name: IUserTwoFactorStore<MixUser>
  nameWithType: IUserTwoFactorStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserTwoFactorStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserTwoFactorStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
  name: IUserAuthenticationTokenStore<MixUser>
  nameWithType: IUserAuthenticationTokenStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserAuthenticationTokenStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserAuthenticationTokenStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
  name: IUserAuthenticatorKeyStore<MixUser>
  nameWithType: IUserAuthenticatorKeyStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserAuthenticatorKeyStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserAuthenticatorKeyStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
    name: IUserAuthenticatorKeyStore
    nameWithType: IUserAuthenticatorKeyStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
    name: IUserAuthenticatorKeyStore
    nameWithType: IUserAuthenticatorKeyStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
  name: IUserTwoFactorRecoveryCodeStore<MixUser>
  nameWithType: IUserTwoFactorRecoveryCodeStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserTwoFactorRecoveryCodeStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserTwoFactorRecoveryCodeStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
    name: IUserTwoFactorRecoveryCodeStore
    nameWithType: IUserTwoFactorRecoveryCodeStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
    name: IUserTwoFactorRecoveryCodeStore
    nameWithType: IUserTwoFactorRecoveryCodeStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserRoleStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserRoleStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserRoleStore`1
  name: IUserRoleStore<MixUser>
  nameWithType: IUserRoleStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserRoleStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserRoleStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserRoleStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserRoleStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IProtectedUserStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IProtectedUserStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IProtectedUserStore`1
  name: IProtectedUserStore<MixUser>
  nameWithType: IProtectedUserStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IProtectedUserStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IProtectedUserStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IProtectedUserStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IProtectedUserStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IProtectedUserStore`1
    name: IProtectedUserStore
    nameWithType: IProtectedUserStore
    fullName: Microsoft.AspNetCore.Identity.IProtectedUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IProtectedUserStore`1
    name: IProtectedUserStore
    nameWithType: IProtectedUserStore
    fullName: Microsoft.AspNetCore.Identity.IProtectedUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore{Mix.Database.Entities.Account.MixUser}
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore{Mix.Database.Entities.Account.MixUser}
  parent: Microsoft.AspNetCore.Identity
  definition: Microsoft.AspNetCore.Identity.IUserStore`1
  name: IUserStore<MixUser>
  nameWithType: IUserStore<MixUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: IUserStore(Of MixUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserStore(Of Mix.Database.Entities.Account.MixUser)
  name.vb: IUserStore(Of MixUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.SaveChanges(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.SaveChanges(System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
  name: SaveChanges(CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.SaveChanges(CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.SaveChanges(System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).SaveChanges(CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).SaveChanges(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.CreateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.CreateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(MixUser, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.CreateAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.CreateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).CreateAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).CreateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.UpdateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.UpdateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(MixUser, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.UpdateAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.UpdateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).UpdateAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).UpdateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.DeleteAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.DeleteAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(MixUser, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.DeleteAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.DeleteAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).DeleteAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).DeleteAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByIdAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByNameAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
  name: FindRoleAsync(String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserRoleAsync(Guid,Guid,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserRoleAsync(Guid,Guid,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
  name: FindUserRoleAsync(Guid, Guid, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserRoleAsync(Guid, Guid, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserRoleAsync(Guid, Guid, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserRoleAsync(Guid, Guid, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserRoleAsync(Guid, Guid, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserAsync(Guid,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserAsync(Guid,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
  name: FindUserAsync(Guid, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserAsync(Guid, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserAsync(Guid, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserAsync(Guid, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserAsync(Guid, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserLoginAsync(Guid,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserLoginAsync(Guid,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
  name: FindUserLoginAsync(Guid, String, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserLoginAsync(Guid, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserLoginAsync(Guid, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserLoginAsync(Guid, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserLoginAsync(Guid, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  name: FindUserLoginAsync(String, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddToRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddToRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: AddToRoleAsync(MixUser, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddToRoleAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddToRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddToRoleAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddToRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: RemoveFromRoleAsync(MixUser, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveFromRoleAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveFromRoleAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetRolesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetRolesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
  name: GetRolesAsync(MixUser, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetRolesAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetRolesAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetRolesAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetRolesAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.IsInRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.IsInRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: IsInRoleAsync(MixUser, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.IsInRoleAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.IsInRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).IsInRoleAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).IsInRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
  name: GetClaimsAsync(MixUser, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetClaimsAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetClaimsAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  name: AddClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: AddClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: ReplaceClaimAsync(MixUser, Claim, Claim, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.ReplaceClaimAsync(MixUser, Claim, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).ReplaceClaimAsync(MixUser, Claim, Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  name: RemoveClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: RemoveClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddLoginAsync(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddLoginAsync(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  name: AddLoginAsync(MixUser, UserLoginInfo, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddLoginAsync(MixUser, UserLoginInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddLoginAsync(Mix.Database.Entities.Account.MixUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddLoginAsync(MixUser, UserLoginInfo, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddLoginAsync(Mix.Database.Entities.Account.MixUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: RemoveLoginAsync(MixUser, String, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveLoginAsync(MixUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveLoginAsync(MixUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveLoginAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetLoginsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetLoginsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
  name: GetLoginsAsync(MixUser, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetLoginsAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetLoginsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetLoginsAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetLoginsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  name: FindByLoginAsync(String, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  name: FindByEmailAsync(String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByEmailAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByEmailAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByEmailAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByEmailAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: GetUsersForClaimAsync(Claim, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetUsersForClaimAsync(Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetUsersForClaimAsync(Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  name: GetUsersInRoleAsync(String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetUsersInRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetUsersInRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: FindTokenAsync(MixUser, String, String, CancellationToken)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindTokenAsync(MixUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindTokenAsync(MixUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
  name: AddUserTokenAsync(AspNetUserTokens)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddUserTokenAsync(AspNetUserTokens)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddUserTokenAsync(AspNetUserTokens)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
    name: AddUserTokenAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
    name: AddUserTokenAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
  name: RemoveUserTokenAsync(AspNetUserTokens)
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveUserTokenAsync(AspNetUserTokens)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveUserTokenAsync(AspNetUserTokens)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
    name: RemoveUserTokenAsync
    nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
    name: RemoveUserTokenAsync
    nameWithType: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.Context
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.Context
  name: Context
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.Context
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).Context
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AutoSaveChanges
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AutoSaveChanges
  name: AutoSaveChanges
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AutoSaveChanges
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AutoSaveChanges
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.Users
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.Users
  parent: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Mix.Database.Entities.Account.MixCmsAccountContext,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.Users
  name: Users
  nameWithType: UserStore<MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.Users
  nameWithType.vb: UserStore(Of MixUser, MixRole, MixCmsAccountContext, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).Users
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Mix.Database.Entities.Account.MixCmsAccountContext, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).Users
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.CreateUserRole(Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.CreateUserRole(Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
  name: CreateUserRole(MixUser, MixRole)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.CreateUserRole(MixUser, MixRole)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.CreateUserRole(Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).CreateUserRole(MixUser, MixRole)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).CreateUserRole(Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.CreateUserRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).CreateUserRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  name: GetUsersInRoleAsync(String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetUsersInRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetUsersInRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddToRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.AddToRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: AddToRoleAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddToRoleAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddToRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddToRoleAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddToRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: RemoveFromRoleAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveFromRoleAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveFromRoleAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveFromRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetRolesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.GetRolesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
  name: GetRolesAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetRolesAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetRolesAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetRolesAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetRolesAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.IsInRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.IsInRoleAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  name: IsInRoleAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.IsInRoleAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.IsInRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).IsInRoleAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).IsInRoleAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindRoleAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
  name: FindRoleAsync(String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserRoleAsync(Guid,Guid,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}.FindUserRoleAsync(Guid,Guid,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Mix.Database.Entities.Account.MixRole,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserRoles,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens,Mix.Database.Entities.Account.AspNetRoleClaims}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
  name: FindUserRoleAsync(Guid, Guid, CancellationToken)
  nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserRoleAsync(Guid, Guid, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserRoleAsync(Guid, Guid, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserRoleAsync(Guid, Guid, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserRoleAsync(Guid, Guid, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStoreBase<MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims>.FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims>.FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStoreBase(Of MixUser, MixRole, Guid, AspNetUserClaims, AspNetUserRoles, AspNetUserLogins, AspNetUserTokens, AspNetRoleClaims).FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Mix.Database.Entities.Account.MixRole, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserRoles, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens, Mix.Database.Entities.Account.AspNetRoleClaims).FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserClaim(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserClaim(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
  name: CreateUserClaim(MixUser, Claim)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateUserClaim(MixUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateUserClaim(Mix.Database.Entities.Account.MixUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateUserClaim(MixUser, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateUserClaim(Mix.Database.Entities.Account.MixUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateUserClaim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateUserClaim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserLogin(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserLogin(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  name: CreateUserLogin(MixUser, UserLoginInfo)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateUserLogin(MixUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateUserLogin(Mix.Database.Entities.Account.MixUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateUserLogin(MixUser, UserLoginInfo)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateUserLogin(Mix.Database.Entities.Account.MixUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateUserLogin
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateUserLogin
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserToken(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateUserToken(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.String)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
  name: CreateUserToken(MixUser, String, String, String)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateUserToken(MixUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateUserToken(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.String)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateUserToken(MixUser, String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateUserToken(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateUserToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateUserToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUserIdAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUserIdAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
  name: GetUserIdAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetUserIdAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetUserIdAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetUserIdAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetUserIdAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUserNameAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUserNameAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetUserNameAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetUserNameAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetUserNameAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetUserNameAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetUserNameAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetUserNameAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetUserNameAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetUserNameAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetUserNameAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetUserNameAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetUserNameAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetUserNameAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedUserNameAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetNormalizedUserNameAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetNormalizedUserNameAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedUserNameAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetNormalizedUserNameAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetNormalizedUserNameAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetNormalizedUserNameAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CreateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
  name: CreateAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.UpdateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.UpdateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
  name: UpdateAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.UpdateAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.UpdateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).UpdateAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).UpdateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.DeleteAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.DeleteAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
  name: DeleteAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.DeleteAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.DeleteAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).DeleteAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).DeleteAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByIdAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByIdAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ConvertIdFromString(System.String)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
  name: ConvertIdFromString(String)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ConvertIdFromString(System.String)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ConvertIdFromString(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ConvertIdFromString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ConvertIdFromString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ConvertIdToString(Guid)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ConvertIdToString(Guid)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
  name: ConvertIdToString(Guid)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ConvertIdToString(Guid)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ConvertIdToString(Guid)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ConvertIdToString(Guid)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ConvertIdToString(Guid)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
    name: ConvertIdToString
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ConvertIdToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
    name: ConvertIdToString
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ConvertIdToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByNameAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByNameAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPasswordHashAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPasswordHashAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetPasswordHashAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetPasswordHashAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetPasswordHashAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetPasswordHashAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetPasswordHashAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPasswordHashAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPasswordHashAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  name: GetPasswordHashAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetPasswordHashAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetPasswordHashAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetPasswordHashAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetPasswordHashAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.HasPasswordAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.HasPasswordAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
  name: HasPasswordAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.HasPasswordAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.HasPasswordAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).HasPasswordAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).HasPasswordAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserAsync(Guid,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserAsync(Guid,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
  name: FindUserAsync(Guid, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindUserAsync(Guid, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindUserAsync(Guid, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindUserAsync(Guid, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindUserAsync(Guid, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserLoginAsync(Guid,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserLoginAsync(Guid,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
  name: FindUserLoginAsync(Guid, String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindUserLoginAsync(Guid, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindUserLoginAsync(Guid, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindUserLoginAsync(Guid, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindUserLoginAsync(Guid, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  name: FindUserLoginAsync(String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindUserLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindUserLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ThrowIfDisposed
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
  name: ThrowIfDisposed()
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ThrowIfDisposed()
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ThrowIfDisposed()
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.Dispose
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
  name: Dispose()
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.Dispose()
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).Dispose()
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
    name: Dispose
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
    name: Dispose
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  name: GetClaimsAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetClaimsAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetClaimsAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  name: AddClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.AddClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.AddClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).AddClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).AddClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: AddClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: ReplaceClaimAsync(MixUser, Claim, Claim, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ReplaceClaimAsync(MixUser, Claim, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ReplaceClaimAsync(MixUser, Claim, Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ReplaceClaimAsync(Mix.Database.Entities.Account.MixUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  name: RemoveClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveClaimsAsync(MixUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveClaimsAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: RemoveClaimsAsync(MixUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddLoginAsync(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddLoginAsync(Mix.Database.Entities.Account.MixUser,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  name: AddLoginAsync(MixUser, UserLoginInfo, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.AddLoginAsync(MixUser, UserLoginInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.AddLoginAsync(Mix.Database.Entities.Account.MixUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).AddLoginAsync(MixUser, UserLoginInfo, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).AddLoginAsync(Mix.Database.Entities.Account.MixUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: RemoveLoginAsync(MixUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveLoginAsync(MixUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveLoginAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveLoginAsync(MixUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveLoginAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLoginsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLoginsAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
  name: GetLoginsAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetLoginsAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetLoginsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetLoginsAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetLoginsAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  name: FindByLoginAsync(String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  name: GetEmailConfirmedAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetEmailConfirmedAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetEmailConfirmedAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetEmailConfirmedAsync(MixUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetEmailConfirmedAsync(MixUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetEmailConfirmedAsync(MixUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetEmailConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetEmailAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetEmailAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetEmailAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetEmailAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetEmailAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetEmailAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetEmailAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetEmailAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetEmailAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
  name: GetEmailAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetEmailAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetEmailAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetEmailAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetEmailAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  name: GetNormalizedEmailAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetNormalizedEmailAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetNormalizedEmailAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetNormalizedEmailAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetNormalizedEmailAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetNormalizedEmailAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetNormalizedEmailAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  name: FindByEmailAsync(String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByEmailAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByEmailAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByEmailAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByEmailAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  name: GetLockoutEndDateAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetLockoutEndDateAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetLockoutEndDateAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  name: SetLockoutEndDateAsync(MixUser, Nullable<DateTimeOffset>, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetLockoutEndDateAsync(MixUser, Nullable<DateTimeOffset>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser, System.Nullable<System.DateTimeOffset>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetLockoutEndDateAsync(MixUser, Nullable(Of DateTimeOffset), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetLockoutEndDateAsync(Mix.Database.Entities.Account.MixUser, System.Nullable(Of System.DateTimeOffset), System.Threading.CancellationToken)
  name.vb: SetLockoutEndDateAsync(MixUser, Nullable(Of DateTimeOffset), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.IncrementAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.IncrementAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  name: IncrementAccessFailedCountAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.IncrementAccessFailedCountAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.IncrementAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).IncrementAccessFailedCountAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).IncrementAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ResetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ResetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  name: ResetAccessFailedCountAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ResetAccessFailedCountAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ResetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ResetAccessFailedCountAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ResetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  name: GetAccessFailedCountAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetAccessFailedCountAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetAccessFailedCountAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetAccessFailedCountAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  name: GetLockoutEnabledAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetLockoutEnabledAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetLockoutEnabledAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetLockoutEnabledAsync(MixUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetLockoutEnabledAsync(MixUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetLockoutEnabledAsync(MixUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetLockoutEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetPhoneNumberAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetPhoneNumberAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetPhoneNumberAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  name: GetPhoneNumberAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetPhoneNumberAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetPhoneNumberAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetPhoneNumberAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  name: GetPhoneNumberConfirmedAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetPhoneNumberConfirmedAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetPhoneNumberConfirmedAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetPhoneNumberConfirmedAsync(MixUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetPhoneNumberConfirmedAsync(MixUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetPhoneNumberConfirmedAsync(MixUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetPhoneNumberConfirmedAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetSecurityStampAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetSecurityStampAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetSecurityStampAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetSecurityStampAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetSecurityStampAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetSecurityStampAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetSecurityStampAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetSecurityStampAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetSecurityStampAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  name: GetSecurityStampAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetSecurityStampAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetSecurityStampAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetSecurityStampAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetSecurityStampAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Boolean,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  name: SetTwoFactorEnabledAsync(MixUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetTwoFactorEnabledAsync(MixUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetTwoFactorEnabledAsync(MixUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  name: GetTwoFactorEnabledAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetTwoFactorEnabledAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetTwoFactorEnabledAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetTwoFactorEnabledAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  name: GetUsersForClaimAsync(Claim, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetUsersForClaimAsync(Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetUsersForClaimAsync(Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.FindTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: FindTokenAsync(MixUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindTokenAsync(MixUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindTokenAsync(MixUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
  name: AddUserTokenAsync(AspNetUserTokens)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.AddUserTokenAsync(AspNetUserTokens)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).AddUserTokenAsync(AspNetUserTokens)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).AddUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
    name: AddUserTokenAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
    name: AddUserTokenAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
  name: RemoveUserTokenAsync(AspNetUserTokens)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveUserTokenAsync(AspNetUserTokens)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveUserTokenAsync(AspNetUserTokens)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveUserTokenAsync(Mix.Database.Entities.Account.AspNetUserTokens)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
    name: RemoveUserTokenAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
    name: RemoveUserTokenAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  name: SetTokenAsync(MixUser, String, String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetTokenAsync(MixUser, String, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetTokenAsync(MixUser, String, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RemoveTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: RemoveTokenAsync(MixUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveTokenAsync(MixUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveTokenAsync(MixUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RemoveTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RemoveTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetTokenAsync(Mix.Database.Entities.Account.MixUser,System.String,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  name: GetTokenAsync(MixUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetTokenAsync(MixUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetTokenAsync(MixUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetTokenAsync(Mix.Database.Entities.Account.MixUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.SetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
  name: SetAuthenticatorKeyAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetAuthenticatorKeyAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetAuthenticatorKeyAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetAuthenticatorKeyAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.SetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.SetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetAuthenticatorKeyAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).SetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).SetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.GetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
  name: GetAuthenticatorKeyAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetAuthenticatorKeyAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetAuthenticatorKeyAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetAuthenticatorKeyAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CountCodesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.CountCodesAsync(Mix.Database.Entities.Account.MixUser,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
  name: CountCodesAsync(MixUser, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CountCodesAsync(MixUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CountCodesAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CountCodesAsync(MixUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CountCodesAsync(Mix.Database.Entities.Account.MixUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
    name: CountCodesAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.CountCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.CountCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
    name: CountCodesAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).CountCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).CountCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ReplaceCodesAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ReplaceCodesAsync(Mix.Database.Entities.Account.MixUser,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  name: ReplaceCodesAsync(MixUser, IEnumerable<String>, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ReplaceCodesAsync(MixUser, IEnumerable<String>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ReplaceCodesAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable<System.String>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ReplaceCodesAsync(MixUser, IEnumerable(Of String), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ReplaceCodesAsync(Mix.Database.Entities.Account.MixUser, System.Collections.Generic.IEnumerable(Of System.String), System.Threading.CancellationToken)
  name.vb: ReplaceCodesAsync(MixUser, IEnumerable(Of String), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
    name: ReplaceCodesAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ReplaceCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ReplaceCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
    name: ReplaceCodesAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ReplaceCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ReplaceCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RedeemCodeAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.RedeemCodeAsync(Mix.Database.Entities.Account.MixUser,System.String,System.Threading.CancellationToken)
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
  name: RedeemCodeAsync(MixUser, String, CancellationToken)
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RedeemCodeAsync(MixUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RedeemCodeAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RedeemCodeAsync(MixUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RedeemCodeAsync(Mix.Database.Entities.Account.MixUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
    name: RedeemCodeAsync
    nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.RedeemCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.RedeemCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
    name: RedeemCodeAsync
    nameWithType: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).RedeemCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).RedeemCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.ErrorDescriber
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.ErrorDescriber
  name: ErrorDescriber
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.ErrorDescriber
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).ErrorDescriber
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.Users
  commentId: P:Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}.Users
  parent: Microsoft.AspNetCore.Identity.UserStoreBase{Mix.Database.Entities.Account.MixUser,Guid,Mix.Database.Entities.Account.AspNetUserClaims,Mix.Database.Entities.Account.AspNetUserLogins,Mix.Database.Entities.Account.AspNetUserTokens}
  definition: Microsoft.AspNetCore.Identity.UserStoreBase`5.Users
  name: Users
  nameWithType: UserStoreBase<MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens>.Users
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens>.Users
  nameWithType.vb: UserStoreBase(Of MixUser, Guid, AspNetUserClaims, AspNetUserLogins, AspNetUserTokens).Users
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of Mix.Database.Entities.Account.MixUser, Guid, Mix.Database.Entities.Account.AspNetUserClaims, Mix.Database.Entities.Account.AspNetUserLogins, Mix.Database.Entities.Account.AspNetUserTokens).Users
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5
  commentId: T:Microsoft.AspNetCore.Identity.UserStoreBase`5
  isExternal: true
  name: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken)
  name.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity
  commentId: N:Microsoft.AspNetCore.Identity
  isExternal: true
  name: Microsoft.AspNetCore.Identity
  nameWithType: Microsoft.AspNetCore.Identity
  fullName: Microsoft.AspNetCore.Identity
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8
  commentId: T:Microsoft.AspNetCore.Identity.UserStoreBase`8
  isExternal: true
  name: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)
  name.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8
    name: UserStoreBase
    nameWithType: UserStoreBase
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
  commentId: T:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
  isExternal: true
  name: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)
  name.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9
    name: UserStore
    nameWithType: UserStore
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TContext
    nameWithType: TContext
    fullName: TContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserClaim
    nameWithType: TUserClaim
    fullName: TUserClaim
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserRole
    nameWithType: TUserRole
    fullName: TUserRole
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserLogin
    nameWithType: TUserLogin
    fullName: TUserLogin
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRoleClaim
    nameWithType: TRoleClaim
    fullName: TRoleClaim
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  commentId: N:Microsoft.AspNetCore.Identity.EntityFrameworkCore
  isExternal: true
  name: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  nameWithType: Microsoft.AspNetCore.Identity.EntityFrameworkCore
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore
- uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserLoginStore`1
  isExternal: true
  name: IUserLoginStore<TUser>
  nameWithType: IUserLoginStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLoginStore<TUser>
  nameWithType.vb: IUserLoginStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserLoginStore(Of TUser)
  name.vb: IUserLoginStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLoginStore`1
    name: IUserLoginStore
    nameWithType: IUserLoginStore
    fullName: Microsoft.AspNetCore.Identity.IUserLoginStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserClaimStore`1
  isExternal: true
  name: IUserClaimStore<TUser>
  nameWithType: IUserClaimStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserClaimStore<TUser>
  nameWithType.vb: IUserClaimStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserClaimStore(Of TUser)
  name.vb: IUserClaimStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserClaimStore`1
    name: IUserClaimStore
    nameWithType: IUserClaimStore
    fullName: Microsoft.AspNetCore.Identity.IUserClaimStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserPasswordStore`1
  isExternal: true
  name: IUserPasswordStore<TUser>
  nameWithType: IUserPasswordStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore<TUser>
  nameWithType.vb: IUserPasswordStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserPasswordStore(Of TUser)
  name.vb: IUserPasswordStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPasswordStore`1
    name: IUserPasswordStore
    nameWithType: IUserPasswordStore
    fullName: Microsoft.AspNetCore.Identity.IUserPasswordStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
  isExternal: true
  name: IUserSecurityStampStore<TUser>
  nameWithType: IUserSecurityStampStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore<TUser>
  nameWithType.vb: IUserSecurityStampStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserSecurityStampStore(Of TUser)
  name.vb: IUserSecurityStampStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserSecurityStampStore`1
    name: IUserSecurityStampStore
    nameWithType: IUserSecurityStampStore
    fullName: Microsoft.AspNetCore.Identity.IUserSecurityStampStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserEmailStore`1
  isExternal: true
  name: IUserEmailStore<TUser>
  nameWithType: IUserEmailStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserEmailStore<TUser>
  nameWithType.vb: IUserEmailStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserEmailStore(Of TUser)
  name.vb: IUserEmailStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserEmailStore`1
    name: IUserEmailStore
    nameWithType: IUserEmailStore
    fullName: Microsoft.AspNetCore.Identity.IUserEmailStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserLockoutStore`1
  isExternal: true
  name: IUserLockoutStore<TUser>
  nameWithType: IUserLockoutStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore<TUser>
  nameWithType.vb: IUserLockoutStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserLockoutStore(Of TUser)
  name.vb: IUserLockoutStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserLockoutStore`1
    name: IUserLockoutStore
    nameWithType: IUserLockoutStore
    fullName: Microsoft.AspNetCore.Identity.IUserLockoutStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
  isExternal: true
  name: IUserPhoneNumberStore<TUser>
  nameWithType: IUserPhoneNumberStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore<TUser>
  nameWithType.vb: IUserPhoneNumberStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore(Of TUser)
  name.vb: IUserPhoneNumberStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore`1
    name: IUserPhoneNumberStore
    nameWithType: IUserPhoneNumberStore
    fullName: Microsoft.AspNetCore.Identity.IUserPhoneNumberStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IQueryableUserStore`1
  isExternal: true
  name: IQueryableUserStore<TUser>
  nameWithType: IQueryableUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore<TUser>
  nameWithType.vb: IQueryableUserStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IQueryableUserStore(Of TUser)
  name.vb: IQueryableUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IQueryableUserStore`1
    name: IQueryableUserStore
    nameWithType: IQueryableUserStore
    fullName: Microsoft.AspNetCore.Identity.IQueryableUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
  isExternal: true
  name: IUserTwoFactorStore<TUser>
  nameWithType: IUserTwoFactorStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore<TUser>
  nameWithType.vb: IUserTwoFactorStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorStore(Of TUser)
  name.vb: IUserTwoFactorStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorStore`1
    name: IUserTwoFactorStore
    nameWithType: IUserTwoFactorStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
  isExternal: true
  name: IUserAuthenticationTokenStore<TUser>
  nameWithType: IUserAuthenticationTokenStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore<TUser>
  nameWithType.vb: IUserAuthenticationTokenStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore(Of TUser)
  name.vb: IUserAuthenticationTokenStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore`1
    name: IUserAuthenticationTokenStore
    nameWithType: IUserAuthenticationTokenStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticationTokenStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
  isExternal: true
  name: IUserAuthenticatorKeyStore<TUser>
  nameWithType: IUserAuthenticatorKeyStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore<TUser>
  nameWithType.vb: IUserAuthenticatorKeyStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore(Of TUser)
  name.vb: IUserAuthenticatorKeyStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
    name: IUserAuthenticatorKeyStore
    nameWithType: IUserAuthenticatorKeyStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore`1
    name: IUserAuthenticatorKeyStore
    nameWithType: IUserAuthenticatorKeyStore
    fullName: Microsoft.AspNetCore.Identity.IUserAuthenticatorKeyStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
  isExternal: true
  name: IUserTwoFactorRecoveryCodeStore<TUser>
  nameWithType: IUserTwoFactorRecoveryCodeStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore<TUser>
  nameWithType.vb: IUserTwoFactorRecoveryCodeStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore(Of TUser)
  name.vb: IUserTwoFactorRecoveryCodeStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
    name: IUserTwoFactorRecoveryCodeStore
    nameWithType: IUserTwoFactorRecoveryCodeStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore`1
    name: IUserTwoFactorRecoveryCodeStore
    nameWithType: IUserTwoFactorRecoveryCodeStore
    fullName: Microsoft.AspNetCore.Identity.IUserTwoFactorRecoveryCodeStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserRoleStore`1
  isExternal: true
  name: IUserRoleStore<TUser>
  nameWithType: IUserRoleStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserRoleStore<TUser>
  nameWithType.vb: IUserRoleStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserRoleStore(Of TUser)
  name.vb: IUserRoleStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserRoleStore`1
    name: IUserRoleStore
    nameWithType: IUserRoleStore
    fullName: Microsoft.AspNetCore.Identity.IUserRoleStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IProtectedUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IProtectedUserStore`1
  isExternal: true
  name: IProtectedUserStore<TUser>
  nameWithType: IProtectedUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IProtectedUserStore<TUser>
  nameWithType.vb: IProtectedUserStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IProtectedUserStore(Of TUser)
  name.vb: IProtectedUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IProtectedUserStore`1
    name: IProtectedUserStore
    nameWithType: IProtectedUserStore
    fullName: Microsoft.AspNetCore.Identity.IProtectedUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IProtectedUserStore`1
    name: IProtectedUserStore
    nameWithType: IProtectedUserStore
    fullName: Microsoft.AspNetCore.Identity.IProtectedUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.IUserStore`1
  commentId: T:Microsoft.AspNetCore.Identity.IUserStore`1
  isExternal: true
  name: IUserStore<TUser>
  nameWithType: IUserStore<TUser>
  fullName: Microsoft.AspNetCore.Identity.IUserStore<TUser>
  nameWithType.vb: IUserStore(Of TUser)
  fullName.vb: Microsoft.AspNetCore.Identity.IUserStore(Of TUser)
  name.vb: IUserStore(Of TUser)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.IUserStore`1
    name: IUserStore
    nameWithType: IUserStore
    fullName: Microsoft.AspNetCore.Identity.IUserStore
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
  isExternal: true
  name: SaveChanges(CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.SaveChanges(CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.SaveChanges(System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).SaveChanges(CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).SaveChanges(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.SaveChanges(System.Threading.CancellationToken)
    name: SaveChanges
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).SaveChanges
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).SaveChanges
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).UpdateAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).DeleteAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByIdAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByNameAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindRoleAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserRoleAsync(TKey, TKey, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync(TKey, TKey, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync(TKey, TKey, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync(TKey, TKey, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync(TKey, TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserRoleAsync(`3,`3,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserAsync(TKey, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserAsync(TKey, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserAsync(TKey, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserAsync(TKey, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserAsync(TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserAsync(`3,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserLoginAsync(TKey, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(TKey, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(TKey, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync(TKey, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync(TKey, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(`3,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserLoginAsync(String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: AddToRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveFromRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRolesAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: IsInRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetClaimsAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetClaimsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetClaimsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetClaimsAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetClaimsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  isExternal: true
  name: AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  isExternal: true
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  isExternal: true
  name: AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveLoginAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLoginsAsync(TUser, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetLoginsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetLoginsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetLoginsAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetLoginsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByLoginAsync(String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByEmailAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByEmailAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByEmailAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByEmailAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByEmailAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: GetUsersForClaimAsync(Claim, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersForClaimAsync(Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersForClaimAsync(Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: GetUsersInRoleAsync(String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindTokenAsync(TUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
  isExternal: true
  name: AddUserTokenAsync(TUserToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddUserTokenAsync(TUserToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddUserTokenAsync(TUserToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddUserTokenAsync(TUserToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddUserTokenAsync(TUserToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
    name: AddUserTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AddUserTokenAsync(`7)
    name: AddUserTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
  commentId: M:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
  isExternal: true
  name: RemoveUserTokenAsync(TUserToken)
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveUserTokenAsync(TUserToken)
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveUserTokenAsync(TUserToken)
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveUserTokenAsync(TUserToken)
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveUserTokenAsync(TUserToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
    name: RemoveUserTokenAsync
    nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.RemoveUserTokenAsync(`7)
    name: RemoveUserTokenAsync
    nameWithType: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.Context
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.Context
  isExternal: true
  name: Context
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.Context
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.Context
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).Context
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).Context
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AutoSaveChanges
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.AutoSaveChanges
  isExternal: true
  name: AutoSaveChanges
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AutoSaveChanges
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AutoSaveChanges
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AutoSaveChanges
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AutoSaveChanges
- uid: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.Users
  commentId: P:Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore`9.Users
  isExternal: true
  name: Users
  nameWithType: UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.Users
  fullName: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore<TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.Users
  nameWithType.vb: UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).Users
  fullName.vb: Microsoft.AspNetCore.Identity.EntityFrameworkCore.UserStore(Of TUser, TRole, TContext, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).Users
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
  isExternal: true
  name: CreateUserRole(TUser, TRole)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateUserRole(TUser, TRole)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateUserRole(TUser, TRole)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateUserRole(TUser, TRole)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateUserRole(TUser, TRole)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.CreateUserRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.CreateUserRole(`0,`1)
    name: CreateUserRole
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateUserRole
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).CreateUserRole
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TRole
    nameWithType: TRole
    fullName: TRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: GetUsersInRoleAsync(String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetUsersInRoleAsync(System.String,System.Threading.CancellationToken)
    name: GetUsersInRoleAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetUsersInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: AddToRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.AddToRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: AddToRoleAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).AddToRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveFromRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.RemoveFromRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: RemoveFromRoleAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).RemoveFromRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetRolesAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.GetRolesAsync(`0,System.Threading.CancellationToken)
    name: GetRolesAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).GetRolesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: IsInRoleAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.IsInRoleAsync(`0,System.String,System.Threading.CancellationToken)
    name: IsInRoleAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).IsInRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindRoleAsync(String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindRoleAsync(System.String,System.Threading.CancellationToken)
    name: FindRoleAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserRoleAsync(TKey, TKey, CancellationToken)
  nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync(TKey, TKey, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync(TKey, TKey, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync(TKey, TKey, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync(TKey, TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim>.FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`8.FindUserRoleAsync(`2,`2,System.Threading.CancellationToken)
    name: FindUserRoleAsync
    nameWithType: UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TRole, TKey, TUserClaim, TUserRole, TUserLogin, TUserToken, TRoleClaim).FindUserRoleAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
  isExternal: true
  name: CreateUserClaim(TUser, Claim)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim(TUser, Claim)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim(TUser, System.Security.Claims.Claim)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserClaim(TUser, Claim)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserClaim(TUser, System.Security.Claims.Claim)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserClaim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserClaim(`0,System.Security.Claims.Claim)
    name: CreateUserClaim
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserClaim
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserClaim
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
  isExternal: true
  name: CreateUserLogin(TUser, UserLoginInfo)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin(TUser, UserLoginInfo)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserLogin(TUser, UserLoginInfo)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserLogin(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserLogin
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserLogin(`0,Microsoft.AspNetCore.Identity.UserLoginInfo)
    name: CreateUserLogin
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserLogin
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserLogin
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
  isExternal: true
  name: CreateUserToken(TUser, String, String, String)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken(TUser, String, String, String)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken(TUser, System.String, System.String, System.String)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserToken(TUser, String, String, String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserToken(TUser, System.String, System.String, System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateUserToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateUserToken(`0,System.String,System.String,System.String)
    name: CreateUserToken
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserToken
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateUserToken
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserIdAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserIdAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserIdAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserIdAsync(`0,System.Threading.CancellationToken)
    name: GetUserIdAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetUserNameAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserNameAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetUserNameAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetUserNameAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetUserNameAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetUserNameAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedUserNameAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedUserNameAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedUserNameAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedUserNameAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedUserNameAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedUserNameAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedUserNameAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedUserNameAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedUserNameAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedUserNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedUserNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CreateAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CreateAsync(`0,System.Threading.CancellationToken)
    name: CreateAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CreateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: UpdateAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).UpdateAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).UpdateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.UpdateAsync(`0,System.Threading.CancellationToken)
    name: UpdateAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).UpdateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).UpdateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: DeleteAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).DeleteAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).DeleteAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.DeleteAsync(`0,System.Threading.CancellationToken)
    name: DeleteAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).DeleteAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).DeleteAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByIdAsync(String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByIdAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByIdAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByIdAsync(System.String,System.Threading.CancellationToken)
    name: FindByIdAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByIdAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByIdAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
  isExternal: true
  name: ConvertIdFromString(String)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString(String)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString(System.String)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdFromString(String)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdFromString(System.String)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdFromString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdFromString(System.String)
    name: ConvertIdFromString
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdFromString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdFromString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
  isExternal: true
  name: ConvertIdToString(TKey)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString(TKey)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString(TKey)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdToString(TKey)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdToString(TKey)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
    name: ConvertIdToString
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ConvertIdToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ConvertIdToString(`1)
    name: ConvertIdToString
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdToString
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ConvertIdToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByNameAsync(String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByNameAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByNameAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByNameAsync(System.String,System.Threading.CancellationToken)
    name: FindByNameAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByNameAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByNameAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetPasswordHashAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPasswordHashAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPasswordHashAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPasswordHashAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPasswordHashAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetPasswordHashAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPasswordHashAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPasswordHashAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPasswordHashAsync(`0,System.Threading.CancellationToken)
    name: GetPasswordHashAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPasswordHashAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPasswordHashAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: HasPasswordAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).HasPasswordAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).HasPasswordAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.HasPasswordAsync(`0,System.Threading.CancellationToken)
    name: HasPasswordAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).HasPasswordAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).HasPasswordAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserAsync(TKey, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync(TKey, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserAsync(TKey, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserAsync(TKey, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserAsync(`1,System.Threading.CancellationToken)
    name: FindUserAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserLoginAsync(TKey, String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(TKey, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync(TKey, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync(TKey, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(`1,System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindUserLoginAsync(String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindUserLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindUserLoginAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindUserLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
  isExternal: true
  name: ThrowIfDisposed()
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed()
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed()
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ThrowIfDisposed()
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ThrowIfDisposed()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ThrowIfDisposed
    name: ThrowIfDisposed
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ThrowIfDisposed
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ThrowIfDisposed
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
  isExternal: true
  name: Dispose()
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose()
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose()
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).Dispose()
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).Dispose()
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
    name: Dispose
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.Dispose
    name: Dispose
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).Dispose
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).Dispose
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetClaimsAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetClaimsAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetClaimsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetClaimsAsync(`0,System.Threading.CancellationToken)
    name: GetClaimsAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  isExternal: true
  name: AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: AddClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: AddClaimsAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceClaimAsync(TUser, Claim, Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceClaimAsync(TUser, System.Security.Claims.Claim, System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceClaimAsync(`0,System.Security.Claims.Claim,System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: ReplaceClaimAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
  isExternal: true
  name: RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, IEnumerable<Claim>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveClaimsAsync(TUser, System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim), System.Threading.CancellationToken)
  name.vb: RemoveClaimsAsync(TUser, IEnumerable(Of Claim), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveClaimsAsync(`0,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.Threading.CancellationToken)
    name: RemoveClaimsAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveClaimsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveClaimsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
  isExternal: true
  name: AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddLoginAsync(TUser, UserLoginInfo, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddLoginAsync(TUser, Microsoft.AspNetCore.Identity.UserLoginInfo, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddLoginAsync(`0,Microsoft.AspNetCore.Identity.UserLoginInfo,System.Threading.CancellationToken)
    name: AddLoginAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Identity.UserLoginInfo
    name: UserLoginInfo
    nameWithType: UserLoginInfo
    fullName: Microsoft.AspNetCore.Identity.UserLoginInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveLoginAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveLoginAsync(TUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveLoginAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveLoginAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveLoginAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLoginsAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLoginsAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLoginsAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLoginsAsync(`0,System.Threading.CancellationToken)
    name: GetLoginsAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLoginsAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLoginsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByLoginAsync(String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByLoginAsync(String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByLoginAsync(System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByLoginAsync(System.String,System.String,System.Threading.CancellationToken)
    name: FindByLoginAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByLoginAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByLoginAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetEmailConfirmedAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailConfirmedAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailConfirmedAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetEmailConfirmedAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetEmailConfirmedAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetEmailAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetEmailAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetEmailAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetEmailAsync(`0,System.Threading.CancellationToken)
    name: GetEmailAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetNormalizedEmailAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedEmailAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedEmailAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetNormalizedEmailAsync(`0,System.Threading.CancellationToken)
    name: GetNormalizedEmailAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetNormalizedEmailAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedEmailAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedEmailAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetNormalizedEmailAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetNormalizedEmailAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetNormalizedEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindByEmailAsync(String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync(System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByEmailAsync(String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByEmailAsync(System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindByEmailAsync(System.String,System.Threading.CancellationToken)
    name: FindByEmailAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByEmailAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindByEmailAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLockoutEndDateAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEndDateAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEndDateAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEndDateAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEndDateAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
  isExternal: true
  name: SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, Nullable<DateTimeOffset>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync(TUser, System.Nullable<System.DateTimeOffset>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEndDateAsync(TUser, System.Nullable(Of System.DateTimeOffset), System.Threading.CancellationToken)
  name.vb: SetLockoutEndDateAsync(TUser, Nullable(Of DateTimeOffset), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEndDateAsync(`0,System.Nullable{System.DateTimeOffset},System.Threading.CancellationToken)
    name: SetLockoutEndDateAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEndDateAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEndDateAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTimeOffset
    name: DateTimeOffset
    nameWithType: DateTimeOffset
    fullName: System.DateTimeOffset
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: IncrementAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).IncrementAccessFailedCountAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).IncrementAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.IncrementAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: IncrementAccessFailedCountAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).IncrementAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).IncrementAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: ResetAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ResetAccessFailedCountAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ResetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ResetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: ResetAccessFailedCountAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ResetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ResetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetAccessFailedCountAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAccessFailedCountAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAccessFailedCountAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAccessFailedCountAsync(`0,System.Threading.CancellationToken)
    name: GetAccessFailedCountAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAccessFailedCountAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAccessFailedCountAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetLockoutEnabledAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEnabledAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEnabledAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetLockoutEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetLockoutEnabledAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEnabledAsync(TUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetLockoutEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetLockoutEnabledAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetLockoutEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetPhoneNumberAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetPhoneNumberAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetPhoneNumberAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetPhoneNumberConfirmedAsync(`0,System.Threading.CancellationToken)
    name: GetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync(TUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetPhoneNumberConfirmedAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetPhoneNumberConfirmedAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetPhoneNumberConfirmedAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetSecurityStampAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetSecurityStampAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetSecurityStampAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetSecurityStampAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetSecurityStampAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetSecurityStampAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetSecurityStampAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetSecurityStampAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetSecurityStampAsync(`0,System.Threading.CancellationToken)
    name: GetSecurityStampAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetSecurityStampAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetSecurityStampAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
  isExternal: true
  name: SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTwoFactorEnabledAsync(TUser, Boolean, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTwoFactorEnabledAsync(TUser, System.Boolean, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTwoFactorEnabledAsync(`0,System.Boolean,System.Threading.CancellationToken)
    name: SetTwoFactorEnabledAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetTwoFactorEnabledAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTwoFactorEnabledAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTwoFactorEnabledAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTwoFactorEnabledAsync(`0,System.Threading.CancellationToken)
    name: GetTwoFactorEnabledAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTwoFactorEnabledAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTwoFactorEnabledAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
  isExternal: true
  name: GetUsersForClaimAsync(Claim, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(Claim, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUsersForClaimAsync(Claim, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUsersForClaimAsync(System.Security.Claims.Claim, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetUsersForClaimAsync(System.Security.Claims.Claim,System.Threading.CancellationToken)
    name: GetUsersForClaimAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUsersForClaimAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetUsersForClaimAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: FindTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindTokenAsync(TUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.FindTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: FindTokenAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).FindTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
  isExternal: true
  name: AddUserTokenAsync(TUserToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync(TUserToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddUserTokenAsync(TUserToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddUserTokenAsync(TUserToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
    name: AddUserTokenAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.AddUserTokenAsync(`4)
    name: AddUserTokenAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).AddUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
  isExternal: true
  name: RemoveUserTokenAsync(TUserToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync(TUserToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveUserTokenAsync(TUserToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveUserTokenAsync(TUserToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
    name: RemoveUserTokenAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveUserTokenAsync(`4)
    name: RemoveUserTokenAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveUserTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveUserTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUserToken
    nameWithType: TUserToken
    fullName: TUserToken
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetTokenAsync(TUser, String, String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, String, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync(TUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTokenAsync(TUser, String, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTokenAsync(TUser, System.String, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetTokenAsync(`0,System.String,System.String,System.String,System.Threading.CancellationToken)
    name: SetTokenAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RemoveTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveTokenAsync(TUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RemoveTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RemoveTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: RemoveTokenAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RemoveTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: GetTokenAsync(TUser, String, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync(TUser, String, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTokenAsync(TUser, String, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTokenAsync(TUser, System.String, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetTokenAsync(`0,System.String,System.String,System.Threading.CancellationToken)
    name: GetTokenAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTokenAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetTokenAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: SetAuthenticatorKeyAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetAuthenticatorKeyAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetAuthenticatorKeyAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetAuthenticatorKeyAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.SetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.SetAuthenticatorKeyAsync(`0,System.String,System.Threading.CancellationToken)
    name: SetAuthenticatorKeyAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).SetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: GetAuthenticatorKeyAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAuthenticatorKeyAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAuthenticatorKeyAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.GetAuthenticatorKeyAsync(`0,System.Threading.CancellationToken)
    name: GetAuthenticatorKeyAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAuthenticatorKeyAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).GetAuthenticatorKeyAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
  isExternal: true
  name: CountCodesAsync(TUser, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync(TUser, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync(TUser, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CountCodesAsync(TUser, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CountCodesAsync(TUser, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
    name: CountCodesAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.CountCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.CountCodesAsync(`0,System.Threading.CancellationToken)
    name: CountCodesAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CountCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).CountCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
  isExternal: true
  name: ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync(TUser, IEnumerable<String>, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync(TUser, System.Collections.Generic.IEnumerable<System.String>, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceCodesAsync(TUser, IEnumerable(Of String), CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceCodesAsync(TUser, System.Collections.Generic.IEnumerable(Of System.String), System.Threading.CancellationToken)
  name.vb: ReplaceCodesAsync(TUser, IEnumerable(Of String), CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
    name: ReplaceCodesAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ReplaceCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ReplaceCodesAsync(`0,System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)
    name: ReplaceCodesAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceCodesAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ReplaceCodesAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
  commentId: M:Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
  isExternal: true
  name: RedeemCodeAsync(TUser, String, CancellationToken)
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync(TUser, String, CancellationToken)
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync(TUser, System.String, System.Threading.CancellationToken)
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RedeemCodeAsync(TUser, String, CancellationToken)
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RedeemCodeAsync(TUser, System.String, System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
    name: RedeemCodeAsync
    nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.RedeemCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.RedeemCodeAsync(`0,System.String,System.Threading.CancellationToken)
    name: RedeemCodeAsync
    nameWithType: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RedeemCodeAsync
    fullName: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).RedeemCodeAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TUser
    nameWithType: TUser
    fullName: TUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.ErrorDescriber
  commentId: P:Microsoft.AspNetCore.Identity.UserStoreBase`5.ErrorDescriber
  isExternal: true
  name: ErrorDescriber
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.ErrorDescriber
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ErrorDescriber
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).ErrorDescriber
- uid: Microsoft.AspNetCore.Identity.UserStoreBase`5.Users
  commentId: P:Microsoft.AspNetCore.Identity.UserStoreBase`5.Users
  isExternal: true
  name: Users
  nameWithType: UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users
  fullName: Microsoft.AspNetCore.Identity.UserStoreBase<TUser, TKey, TUserClaim, TUserLogin, TUserToken>.Users
  nameWithType.vb: UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).Users
  fullName.vb: Microsoft.AspNetCore.Identity.UserStoreBase(Of TUser, TKey, TUserClaim, TUserLogin, TUserToken).Users
- uid: Mix.Lib.Services.TenantUserStore.#ctor*
  commentId: Overload:Mix.Lib.Services.TenantUserStore.#ctor
  name: TenantUserStore
  nameWithType: TenantUserStore.TenantUserStore
  fullName: Mix.Lib.Services.TenantUserStore.TenantUserStore
- uid: Mix.Database.Entities.Account.MixCmsAccountContext
  commentId: T:Mix.Database.Entities.Account.MixCmsAccountContext
  parent: Mix.Database.Entities.Account
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext
- uid: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  commentId: T:Microsoft.AspNetCore.Identity.IdentityErrorDescriber
  parent: Microsoft.AspNetCore.Identity
  isExternal: true
  name: IdentityErrorDescriber
  nameWithType: IdentityErrorDescriber
  fullName: Microsoft.AspNetCore.Identity.IdentityErrorDescriber
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
