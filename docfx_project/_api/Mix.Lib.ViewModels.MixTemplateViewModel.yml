### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixTemplateViewModel
  commentId: T:Mix.Lib.ViewModels.MixTemplateViewModel
  id: MixTemplateViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixTemplateViewModel.#ctor
  - Mix.Lib.ViewModels.MixTemplateViewModel.#ctor(MixTemplate,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixTemplateViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixTemplateViewModel.Content
  - Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync
  - Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView
  - Mix.Lib.ViewModels.MixTemplateViewModel.Extension
  - Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder
  - Mix.Lib.ViewModels.MixTemplateViewModel.FileName
  - Mix.Lib.ViewModels.MixTemplateViewModel.FolderType
  - Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId
  - Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId
  - Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName
  - Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity
  - Mix.Lib.ViewModels.MixTemplateViewModel.Scripts
  - Mix.Lib.ViewModels.MixTemplateViewModel.Styles
  - Mix.Lib.ViewModels.MixTemplateViewModel.Validate
  langs:
  - csharp
  - vb
  name: MixTemplateViewModel
  nameWithType: MixTemplateViewModel
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTemplateViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixTemplateViewModel : ViewModelBase<MixCmsContext, MixTemplate, int, MixTemplateViewModel>'
    content.vb: >-
      Public Class MixTemplateViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixTemplate, Integer, MixTemplateViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId
  id: MixTenantId
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: MixTemplateViewModel.MixTenantId
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Content
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.Content
  id: Content
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MixTemplateViewModel.Content
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Content
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Extension
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.Extension
  id: Extension
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: MixTemplateViewModel.Extension
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Extension
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Extension
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Extension { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Extension As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder
  id: FileFolder
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: FileFolder
  nameWithType: MixTemplateViewModel.FileFolder
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileFolder
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string FileFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileFolder As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.FileName
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.FileName
  id: FileName
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: MixTemplateViewModel.FileName
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.FileName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string FileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileName As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.FileName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.FolderType
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.FolderType
  id: FolderType
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: FolderType
  nameWithType: MixTemplateViewModel.FolderType
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.FolderType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FolderType
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTemplateFolderType FolderType { get; set; }
    parameters: []
    return:
      type: MixTemplateFolderType
    content.vb: Public Property FolderType As MixTemplateFolderType
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.FolderType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Scripts
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.Scripts
  id: Scripts
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: Scripts
  nameWithType: MixTemplateViewModel.Scripts
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Scripts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Scripts
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Scripts { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scripts As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.Scripts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Styles
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.Styles
  id: Styles
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: Styles
  nameWithType: MixTemplateViewModel.Styles
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Styles
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Styles
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Styles { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Styles As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.Styles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName
  id: MixThemeName
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: MixThemeName
  nameWithType: MixTemplateViewModel.MixThemeName
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string MixThemeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixThemeName As String
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId
  commentId: P:Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId
  id: MixThemeId
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: MixThemeId
  nameWithType: MixTemplateViewModel.MixThemeId
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 19
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixThemeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixThemeId As Integer
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: MixTemplateViewModel()
  nameWithType: MixTemplateViewModel.MixTemplateViewModel()
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixTemplateViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 25
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTemplateViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor(MixTemplate,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.#ctor(MixTemplate,UnitOfWorkInfo)
  id: '#ctor(MixTemplate,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: MixTemplateViewModel(MixTemplate, UnitOfWorkInfo)
  nameWithType: MixTemplateViewModel.MixTemplateViewModel(MixTemplate, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixTemplateViewModel(MixTemplate, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 29
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTemplateViewModel(MixTemplate entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixTemplate
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixTemplate, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: MixTemplateViewModel(UnitOfWorkInfo)
  nameWithType: MixTemplateViewModel.MixTemplateViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixTemplateViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 36
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTemplateViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView
  id: ExpandView
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixTemplateViewModel.ExpandView()
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 44
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: MixTemplateViewModel.ParseEntity()
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 59
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<MixTemplate> ParseEntity()
    return:
      type: Task{MixTemplate}
    content.vb: Public Overrides Function ParseEntity As Task(Of MixTemplate)
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Validate
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.Validate
  id: Validate
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: MixTemplateViewModel.Validate()
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Validate()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Validate
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 74
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task Validate()
    return:
      type: Task
    content.vb: Public Overrides Function Validate As Task
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync
  commentId: M:Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync
  id: CopyAsync
  parent: Mix.Lib.ViewModels.MixTemplateViewModel
  langs:
  - csharp
  - vb
  name: CopyAsync()
  nameWithType: MixTemplateViewModel.CopyAsync()
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CopyAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTemplateViewModel.cs
    startLine: 101
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Task<MixTemplateViewModel> CopyAsync()
    return:
      type: Task{Mix.Lib.ViewModels.MixTemplateViewModel}
    content.vb: Public Function CopyAsync As Task(Of MixTemplateViewModel)
  overload: Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId
  name: MixTenantId
  nameWithType: MixTemplateViewModel.MixTenantId
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Content*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.Content
  name: Content
  nameWithType: MixTemplateViewModel.Content
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Content
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Extension*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.Extension
  name: Extension
  nameWithType: MixTemplateViewModel.Extension
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Extension
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder
  name: FileFolder
  nameWithType: MixTemplateViewModel.FileFolder
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.FileFolder
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.FileName*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.FileName
  name: FileName
  nameWithType: MixTemplateViewModel.FileName
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.FileName
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.FolderType*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.FolderType
  name: FolderType
  nameWithType: MixTemplateViewModel.FolderType
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.FolderType
- uid: MixTemplateFolderType
  isExternal: true
  name: MixTemplateFolderType
  nameWithType: MixTemplateFolderType
  fullName: MixTemplateFolderType
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Scripts*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.Scripts
  name: Scripts
  nameWithType: MixTemplateViewModel.Scripts
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Scripts
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Styles*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.Styles
  name: Styles
  nameWithType: MixTemplateViewModel.Styles
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Styles
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName
  name: MixThemeName
  nameWithType: MixTemplateViewModel.MixThemeName
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeName
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId
  name: MixThemeId
  nameWithType: MixTemplateViewModel.MixThemeId
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixThemeId
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.#ctor
  name: MixTemplateViewModel
  nameWithType: MixTemplateViewModel.MixTemplateViewModel
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.MixTemplateViewModel
- uid: MixTemplate
  isExternal: true
  name: MixTemplate
  nameWithType: MixTemplate
  fullName: MixTemplate
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView
  name: ExpandView
  nameWithType: MixTemplateViewModel.ExpandView
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity
  name: ParseEntity
  nameWithType: MixTemplateViewModel.ParseEntity
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.ParseEntity
- uid: Task{MixTemplate}
  commentId: '!:Task{MixTemplate}'
  definition: Task`1
  name: Task<MixTemplate>
  nameWithType: Task<MixTemplate>
  fullName: Task<MixTemplate>
  nameWithType.vb: Task(Of MixTemplate)
  fullName.vb: Task(Of MixTemplate)
  name.vb: Task(Of MixTemplate)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: MixTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: MixTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.Validate*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.Validate
  name: Validate
  nameWithType: MixTemplateViewModel.Validate
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.Validate
- uid: Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync
  name: CopyAsync
  nameWithType: MixTemplateViewModel.CopyAsync
  fullName: Mix.Lib.ViewModels.MixTemplateViewModel.CopyAsync
- uid: Task{Mix.Lib.ViewModels.MixTemplateViewModel}
  commentId: '!:Task{Mix.Lib.ViewModels.MixTemplateViewModel}'
  definition: Task`1
  name: Task<MixTemplateViewModel>
  nameWithType: Task<MixTemplateViewModel>
  fullName: Task<Mix.Lib.ViewModels.MixTemplateViewModel>
  nameWithType.vb: Task(Of MixTemplateViewModel)
  fullName.vb: Task(Of Mix.Lib.ViewModels.MixTemplateViewModel)
  name.vb: Task(Of MixTemplateViewModel)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixTemplateViewModel
    name: MixTemplateViewModel
    nameWithType: MixTemplateViewModel
    fullName: Mix.Lib.ViewModels.MixTemplateViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixTemplateViewModel
    name: MixTemplateViewModel
    nameWithType: MixTemplateViewModel
    fullName: Mix.Lib.ViewModels.MixTemplateViewModel
  - name: )
    nameWithType: )
    fullName: )
