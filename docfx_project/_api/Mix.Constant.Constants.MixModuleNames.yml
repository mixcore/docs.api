### YamlMime:ManagedReference
items:
- uid: Mix.Constant.Constants.MixModuleNames
  commentId: T:Mix.Constant.Constants.MixModuleNames
  id: MixModuleNames
  parent: Mix.Constant.Constants
  children:
  - Mix.Constant.Constants.MixModuleNames.Account
  - Mix.Constant.Constants.MixModuleNames.Common
  - Mix.Constant.Constants.MixModuleNames.Grpc
  - Mix.Constant.Constants.MixModuleNames.Messenger
  - Mix.Constant.Constants.MixModuleNames.Mixcore
  - Mix.Constant.Constants.MixModuleNames.Portal
  - Mix.Constant.Constants.MixModuleNames.Scheduler
  - Mix.Constant.Constants.MixModuleNames.Theme
  langs:
  - csharp
  - vb
  name: MixModuleNames
  nameWithType: MixModuleNames
  fullName: Mix.Constant.Constants.MixModuleNames
  type: Class
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixModuleNames
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 2
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public class MixModuleNames
    content.vb: Public Class MixModuleNames
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Constant.Constants.MixModuleNames.Account
  commentId: F:Mix.Constant.Constants.MixModuleNames.Account
  id: Account
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Account
  nameWithType: MixModuleNames.Account
  fullName: Mix.Constant.Constants.MixModuleNames.Account
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Account
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 4
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Account = "Account"
    return:
      type: System.String
    content.vb: Public Const Account As String = "Account"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Common
  commentId: F:Mix.Constant.Constants.MixModuleNames.Common
  id: Common
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Common
  nameWithType: MixModuleNames.Common
  fullName: Mix.Constant.Constants.MixModuleNames.Common
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Common
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 5
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Common = "Common"
    return:
      type: System.String
    content.vb: Public Const Common As String = "Common"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Portal
  commentId: F:Mix.Constant.Constants.MixModuleNames.Portal
  id: Portal
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Portal
  nameWithType: MixModuleNames.Portal
  fullName: Mix.Constant.Constants.MixModuleNames.Portal
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Portal
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 6
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Portal = "Portal"
    return:
      type: System.String
    content.vb: Public Const Portal As String = "Portal"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Theme
  commentId: F:Mix.Constant.Constants.MixModuleNames.Theme
  id: Theme
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Theme
  nameWithType: MixModuleNames.Theme
  fullName: Mix.Constant.Constants.MixModuleNames.Theme
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Theme
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 7
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Theme = "Theme"
    return:
      type: System.String
    content.vb: Public Const Theme As String = "Theme"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Mixcore
  commentId: F:Mix.Constant.Constants.MixModuleNames.Mixcore
  id: Mixcore
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Mixcore
  nameWithType: MixModuleNames.Mixcore
  fullName: Mix.Constant.Constants.MixModuleNames.Mixcore
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Mixcore
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 8
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Mixcore = "Mixcore"
    return:
      type: System.String
    content.vb: Public Const Mixcore As String = "Mixcore"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Messenger
  commentId: F:Mix.Constant.Constants.MixModuleNames.Messenger
  id: Messenger
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Messenger
  nameWithType: MixModuleNames.Messenger
  fullName: Mix.Constant.Constants.MixModuleNames.Messenger
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Messenger
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 9
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Messenger = "Messenger"
    return:
      type: System.String
    content.vb: Public Const Messenger As String = "Messenger"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Scheduler
  commentId: F:Mix.Constant.Constants.MixModuleNames.Scheduler
  id: Scheduler
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Scheduler
  nameWithType: MixModuleNames.Scheduler
  fullName: Mix.Constant.Constants.MixModuleNames.Scheduler
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Scheduler
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 10
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Scheduler = "Scheduler"
    return:
      type: System.String
    content.vb: Public Const Scheduler As String = "Scheduler"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixModuleNames.Grpc
  commentId: F:Mix.Constant.Constants.MixModuleNames.Grpc
  id: Grpc
  parent: Mix.Constant.Constants.MixModuleNames
  langs:
  - csharp
  - vb
  name: Grpc
  nameWithType: MixModuleNames.Grpc
  fullName: Mix.Constant.Constants.MixModuleNames.Grpc
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixModuleNames.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Grpc
    path: ../../mix.core/src/platform/mix.constant/Constants/MixModuleNames.cs
    startLine: 11
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Grpc = "Grpc"
    return:
      type: System.String
    content.vb: Public Const Grpc As String = "Grpc"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mix.Constant.Constants
  commentId: N:Mix.Constant.Constants
  name: Mix.Constant.Constants
  nameWithType: Mix.Constant.Constants
  fullName: Mix.Constant.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
