### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Services.MixService
  commentId: T:Mix.Lib.Services.MixService
  id: MixService
  parent: Mix.Lib.Services
  children:
  - Mix.Lib.Services.MixService.#ctor(Mix.Lib.Services.MixConfigurationService,SmtpConfigService,Microsoft.AspNetCore.Http.IHttpContextAccessor)
  - Mix.Lib.Services.MixService._configService
  - Mix.Lib.Services.MixService._smtpConfigService
  - Mix.Lib.Services.MixService.GetAssetFolder(System.String)
  - Mix.Lib.Services.MixService.GetUploadFolder(System.String)
  - Mix.Lib.Services.MixService.LogError(System.String,System.Object)
  - Mix.Lib.Services.MixService.LogException(Exception,System.Nullable{MixErrorStatus},System.String)
  - Mix.Lib.Services.MixService.MixTenantId
  langs:
  - csharp
  - vb
  name: MixService
  nameWithType: MixService
  fullName: Mix.Lib.Services.MixService
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixService
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public class MixService
    content.vb: Public Class MixService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Services.MixService._smtpConfigService
  commentId: F:Mix.Lib.Services.MixService._smtpConfigService
  id: _smtpConfigService
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: _smtpConfigService
  nameWithType: MixService._smtpConfigService
  fullName: Mix.Lib.Services.MixService._smtpConfigService
  type: Field
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: _smtpConfigService
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public readonly SmtpConfigService _smtpConfigService
    return:
      type: SmtpConfigService
    content.vb: Public ReadOnly _smtpConfigService As SmtpConfigService
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.Services.MixService._configService
  commentId: F:Mix.Lib.Services.MixService._configService
  id: _configService
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: _configService
  nameWithType: MixService._configService
  fullName: Mix.Lib.Services.MixService._configService
  type: Field
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: _configService
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public readonly MixConfigurationService _configService
    return:
      type: Mix.Lib.Services.MixConfigurationService
    content.vb: Public ReadOnly _configService As MixConfigurationService
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.Services.MixService.MixTenantId
  commentId: F:Mix.Lib.Services.MixService.MixTenantId
  id: MixTenantId
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: MixService.MixTenantId
  fullName: Mix.Lib.Services.MixService.MixTenantId
  type: Field
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public readonly int MixTenantId
    return:
      type: System.Int32
    content.vb: Public ReadOnly MixTenantId As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.Services.MixService.#ctor(Mix.Lib.Services.MixConfigurationService,SmtpConfigService,Microsoft.AspNetCore.Http.IHttpContextAccessor)
  commentId: M:Mix.Lib.Services.MixService.#ctor(Mix.Lib.Services.MixConfigurationService,SmtpConfigService,Microsoft.AspNetCore.Http.IHttpContextAccessor)
  id: '#ctor(Mix.Lib.Services.MixConfigurationService,SmtpConfigService,Microsoft.AspNetCore.Http.IHttpContextAccessor)'
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: MixService(MixConfigurationService, SmtpConfigService, IHttpContextAccessor)
  nameWithType: MixService.MixService(MixConfigurationService, SmtpConfigService, IHttpContextAccessor)
  fullName: Mix.Lib.Services.MixService.MixService(Mix.Lib.Services.MixConfigurationService, SmtpConfigService, Microsoft.AspNetCore.Http.IHttpContextAccessor)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public MixService(MixConfigurationService configService, SmtpConfigService smtpConfigService, IHttpContextAccessor httpContextAccessor)
    parameters:
    - id: configService
      type: Mix.Lib.Services.MixConfigurationService
    - id: smtpConfigService
      type: SmtpConfigService
    - id: httpContextAccessor
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
    content.vb: Public Sub New(configService As MixConfigurationService, smtpConfigService As SmtpConfigService, httpContextAccessor As IHttpContextAccessor)
  overload: Mix.Lib.Services.MixService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixService.GetAssetFolder(System.String)
  commentId: M:Mix.Lib.Services.MixService.GetAssetFolder(System.String)
  id: GetAssetFolder(System.String)
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetAssetFolder(String)
  nameWithType: MixService.GetAssetFolder(String)
  fullName: Mix.Lib.Services.MixService.GetAssetFolder(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAssetFolder
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public string GetAssetFolder(string culture = null)
    parameters:
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetAssetFolder(culture As String = Nothing) As String
  overload: Mix.Lib.Services.MixService.GetAssetFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixService.GetUploadFolder(System.String)
  commentId: M:Mix.Lib.Services.MixService.GetUploadFolder(System.String)
  id: GetUploadFolder(System.String)
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetUploadFolder(String)
  nameWithType: MixService.GetUploadFolder(String)
  fullName: Mix.Lib.Services.MixService.GetUploadFolder(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetUploadFolder
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public string GetUploadFolder(string culture = null)
    parameters:
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Function GetUploadFolder(culture As String = Nothing) As String
  overload: Mix.Lib.Services.MixService.GetUploadFolder*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixService.LogException(Exception,System.Nullable{MixErrorStatus},System.String)
  commentId: M:Mix.Lib.Services.MixService.LogException(Exception,System.Nullable{MixErrorStatus},System.String)
  id: LogException(Exception,System.Nullable{MixErrorStatus},System.String)
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: LogException(Exception, Nullable<MixErrorStatus>, String)
  nameWithType: MixService.LogException(Exception, Nullable<MixErrorStatus>, String)
  fullName: Mix.Lib.Services.MixService.LogException(Exception, System.Nullable<MixErrorStatus>, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LogException
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 40
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public static void LogException(Exception ex = null, MixErrorStatus? status = default(MixErrorStatus? ), string message = null)
    parameters:
    - id: ex
      type: Exception
    - id: status
      type: System.Nullable{MixErrorStatus}
    - id: message
      type: System.String
    content.vb: Public Shared Sub LogException(ex As Exception = Nothing, status As MixErrorStatus? = Nothing, message As String = Nothing)
  overload: Mix.Lib.Services.MixService.LogException*
  nameWithType.vb: MixService.LogException(Exception, Nullable(Of MixErrorStatus), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Lib.Services.MixService.LogException(Exception, System.Nullable(Of MixErrorStatus), System.String)
  name.vb: LogException(Exception, Nullable(Of MixErrorStatus), String)
- uid: Mix.Lib.Services.MixService.LogError(System.String,System.Object)
  commentId: M:Mix.Lib.Services.MixService.LogError(System.String,System.Object)
  id: LogError(System.String,System.Object)
  parent: Mix.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: LogError(String, Object)
  nameWithType: MixService.LogError(String, Object)
  fullName: Mix.Lib.Services.MixService.LogError(System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LogError
    path: ../../mix.core/src/platform/mix.library/Services/MixService.cs
    startLine: 82
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public static void LogError(string message, object data)
    parameters:
    - id: message
      type: System.String
    - id: data
      type: System.Object
    content.vb: Public Shared Sub LogError(message As String, data As Object)
  overload: Mix.Lib.Services.MixService.LogError*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Lib.Services
  commentId: N:Mix.Lib.Services
  name: Mix.Lib.Services
  nameWithType: Mix.Lib.Services
  fullName: Mix.Lib.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: SmtpConfigService
  isExternal: true
  name: SmtpConfigService
  nameWithType: SmtpConfigService
  fullName: SmtpConfigService
- uid: Mix.Lib.Services.MixConfigurationService
  commentId: T:Mix.Lib.Services.MixConfigurationService
  parent: Mix.Lib.Services
  name: MixConfigurationService
  nameWithType: MixConfigurationService
  fullName: Mix.Lib.Services.MixConfigurationService
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.Services.MixService.#ctor*
  commentId: Overload:Mix.Lib.Services.MixService.#ctor
  name: MixService
  nameWithType: MixService.MixService
  fullName: Mix.Lib.Services.MixService.MixService
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Mix.Lib.Services.MixService.GetAssetFolder*
  commentId: Overload:Mix.Lib.Services.MixService.GetAssetFolder
  name: GetAssetFolder
  nameWithType: MixService.GetAssetFolder
  fullName: Mix.Lib.Services.MixService.GetAssetFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Services.MixService.GetUploadFolder*
  commentId: Overload:Mix.Lib.Services.MixService.GetUploadFolder
  name: GetUploadFolder
  nameWithType: MixService.GetUploadFolder
  fullName: Mix.Lib.Services.MixService.GetUploadFolder
- uid: Mix.Lib.Services.MixService.LogException*
  commentId: Overload:Mix.Lib.Services.MixService.LogException
  name: LogException
  nameWithType: MixService.LogException
  fullName: Mix.Lib.Services.MixService.LogException
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: System.Nullable{MixErrorStatus}
  commentId: T:System.Nullable{MixErrorStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MixErrorStatus>
  nameWithType: Nullable<MixErrorStatus>
  fullName: System.Nullable<MixErrorStatus>
  nameWithType.vb: Nullable(Of MixErrorStatus)
  fullName.vb: System.Nullable(Of MixErrorStatus)
  name.vb: Nullable(Of MixErrorStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixErrorStatus
    name: MixErrorStatus
    nameWithType: MixErrorStatus
    fullName: MixErrorStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixErrorStatus
    name: MixErrorStatus
    nameWithType: MixErrorStatus
    fullName: MixErrorStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Services.MixService.LogError*
  commentId: Overload:Mix.Lib.Services.MixService.LogError
  name: LogError
  nameWithType: MixService.LogError
  fullName: Mix.Lib.Services.MixService.LogError
