### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel
  commentId: T:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel
  id: UsersInRoleModel
  parent: Mix.Identity.Identity.Models.AccountViewModels
  children:
  - Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers
  - Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id
  - Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers
  langs:
  - csharp
  - vb
  name: UsersInRoleModel
  nameWithType: UsersInRoleModel
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel
  type: Class
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UsersInRoleModel
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
    startLine: 5
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Identity.Models.AccountViewModels
  syntax:
    content: public class UsersInRoleModel
    content.vb: Public Class UsersInRoleModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id
  commentId: P:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id
  id: Id
  parent: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UsersInRoleModel.Id
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
    startLine: 7
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [JsonProperty("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As String
  overload: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers
  commentId: P:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers
  id: EnrolledUsers
  parent: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel
  langs:
  - csharp
  - vb
  name: EnrolledUsers
  nameWithType: UsersInRoleModel.EnrolledUsers
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EnrolledUsers
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
    startLine: 10
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [JsonProperty("EnrolledUsers")]

      public List<string> EnrolledUsers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <JsonProperty("EnrolledUsers")>

      Public Property EnrolledUsers As List(Of String)
  overload: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: EnrolledUsers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers
  commentId: P:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers
  id: RemovedUsers
  parent: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel
  langs:
  - csharp
  - vb
  name: RemovedUsers
  nameWithType: UsersInRoleModel.RemovedUsers
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RemovedUsers
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UsersInRoleModel.cs
    startLine: 13
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [JsonProperty("removedUsers")]

      public List<string> RemovedUsers { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: >-
      <JsonProperty("removedUsers")>

      Public Property RemovedUsers As List(Of String)
  overload: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: removedUsers
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Identity.Models.AccountViewModels
  commentId: N:Mix.Identity.Identity.Models.AccountViewModels
  name: Mix.Identity.Identity.Models.AccountViewModels
  nameWithType: Mix.Identity.Identity.Models.AccountViewModels
  fullName: Mix.Identity.Identity.Models.AccountViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id*
  commentId: Overload:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id
  name: Id
  nameWithType: UsersInRoleModel.Id
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers*
  commentId: Overload:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers
  name: EnrolledUsers
  nameWithType: UsersInRoleModel.EnrolledUsers
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.EnrolledUsers
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers*
  commentId: Overload:Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers
  name: RemovedUsers
  nameWithType: UsersInRoleModel.RemovedUsers
  fullName: Mix.Identity.Identity.Models.AccountViewModels.UsersInRoleModel.RemovedUsers
