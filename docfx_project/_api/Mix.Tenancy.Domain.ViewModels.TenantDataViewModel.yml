### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  commentId: T:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  id: TenantDataViewModel
  parent: Mix.Tenancy.Domain.ViewModels
  children:
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.#ctor
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture
  - Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName
  langs:
  - csharp
  - vb
  name: TenantDataViewModel
  nameWithType: TenantDataViewModel
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TenantDataViewModel
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 2
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public class TenantDataViewModel
    content.vb: Public Class TenantDataViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy
  id: CreatedBy
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: TenantDataViewModel.CreatedBy
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 4
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture
  id: Specificulture
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: TenantDataViewModel.Specificulture
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 6
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName
  id: ThemeName
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: ThemeName
  nameWithType: TenantDataViewModel.ThemeName
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThemeName
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 8
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public string ThemeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThemeName As String
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations
  id: Configurations
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: TenantDataViewModel.Configurations
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configurations
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 10
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixConfiguration> Configurations { get; set; }
    parameters: []
    return:
      type: List{MixConfiguration}
    content.vb: Public Property Configurations As List(Of MixConfiguration)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages
  id: Languages
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: TenantDataViewModel.Languages
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Languages
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 11
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixLanguage> Languages { get; set; }
    parameters: []
    return:
      type: List{MixLanguage}
    content.vb: Public Property Languages As List(Of MixLanguage)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules
  id: Modules
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: TenantDataViewModel.Modules
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Modules
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 12
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixModule> Modules { get; set; }
    parameters: []
    return:
      type: List{MixModule}
    content.vb: Public Property Modules As List(Of MixModule)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas
  id: ModuleDatas
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: ModuleDatas
  nameWithType: TenantDataViewModel.ModuleDatas
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleDatas
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 13
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixModuleData> ModuleDatas { get; set; }
    parameters: []
    return:
      type: List{MixModuleData}
    content.vb: Public Property ModuleDatas As List(Of MixModuleData)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages
  id: Pages
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Pages
  nameWithType: TenantDataViewModel.Pages
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Pages
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 14
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixPage> Pages { get; set; }
    parameters: []
    return:
      type: List{MixPage}
    content.vb: Public Property Pages As List(Of MixPage)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts
  id: Posts
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Posts
  nameWithType: TenantDataViewModel.Posts
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Posts
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 15
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixPost> Posts { get; set; }
    parameters: []
    return:
      type: List{MixPost}
    content.vb: Public Property Posts As List(Of MixPost)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases
  id: Databases
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: Databases
  nameWithType: TenantDataViewModel.Databases
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Databases
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 16
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixDatabase> Databases { get; set; }
    parameters: []
    return:
      type: List{MixDatabase}
    content.vb: Public Property Databases As List(Of MixDatabase)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns
  id: DatabaseColumns
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: DatabaseColumns
  nameWithType: TenantDataViewModel.DatabaseColumns
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabaseColumns
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 17
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixDatabaseColumn> DatabaseColumns { get; set; }
    parameters: []
    return:
      type: List{MixDatabaseColumn}
    content.vb: Public Property DatabaseColumns As List(Of MixDatabaseColumn)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas
  commentId: P:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas
  id: MixDatas
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatas
  nameWithType: TenantDataViewModel.MixDatas
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatas
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 18
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public List<MixData> MixDatas { get; set; }
    parameters: []
    return:
      type: List{MixData}
    content.vb: Public Property MixDatas As List(Of MixData)
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.#ctor
  commentId: M:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.#ctor
  id: '#ctor'
  parent: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel
  langs:
  - csharp
  - vb
  name: TenantDataViewModel()
  nameWithType: TenantDataViewModel.TenantDataViewModel()
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.TenantDataViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/TenantDataViewModel.cs
    startLine: 21
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels
  syntax:
    content: public TenantDataViewModel()
    content.vb: Public Sub New
  overload: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Tenancy.Domain.ViewModels
  commentId: N:Mix.Tenancy.Domain.ViewModels
  name: Mix.Tenancy.Domain.ViewModels
  nameWithType: Mix.Tenancy.Domain.ViewModels
  fullName: Mix.Tenancy.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy
  name: CreatedBy
  nameWithType: TenantDataViewModel.CreatedBy
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.CreatedBy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture
  name: Specificulture
  nameWithType: TenantDataViewModel.Specificulture
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Specificulture
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName
  name: ThemeName
  nameWithType: TenantDataViewModel.ThemeName
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ThemeName
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations
  name: Configurations
  nameWithType: TenantDataViewModel.Configurations
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Configurations
- uid: List{MixConfiguration}
  commentId: '!:List{MixConfiguration}'
  definition: List`1
  name: List<MixConfiguration>
  nameWithType: List<MixConfiguration>
  fullName: List<MixConfiguration>
  nameWithType.vb: List(Of MixConfiguration)
  fullName.vb: List(Of MixConfiguration)
  name.vb: List(Of MixConfiguration)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixConfiguration
    name: MixConfiguration
    nameWithType: MixConfiguration
    fullName: MixConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixConfiguration
    name: MixConfiguration
    nameWithType: MixConfiguration
    fullName: MixConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages
  name: Languages
  nameWithType: TenantDataViewModel.Languages
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Languages
- uid: List{MixLanguage}
  commentId: '!:List{MixLanguage}'
  definition: List`1
  name: List<MixLanguage>
  nameWithType: List<MixLanguage>
  fullName: List<MixLanguage>
  nameWithType.vb: List(Of MixLanguage)
  fullName.vb: List(Of MixLanguage)
  name.vb: List(Of MixLanguage)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixLanguage
    name: MixLanguage
    nameWithType: MixLanguage
    fullName: MixLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixLanguage
    name: MixLanguage
    nameWithType: MixLanguage
    fullName: MixLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules
  name: Modules
  nameWithType: TenantDataViewModel.Modules
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Modules
- uid: List{MixModule}
  commentId: '!:List{MixModule}'
  definition: List`1
  name: List<MixModule>
  nameWithType: List<MixModule>
  fullName: List<MixModule>
  nameWithType.vb: List(Of MixModule)
  fullName.vb: List(Of MixModule)
  name.vb: List(Of MixModule)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: MixModule
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: MixModule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas
  name: ModuleDatas
  nameWithType: TenantDataViewModel.ModuleDatas
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.ModuleDatas
- uid: List{MixModuleData}
  commentId: '!:List{MixModuleData}'
  definition: List`1
  name: List<MixModuleData>
  nameWithType: List<MixModuleData>
  fullName: List<MixModuleData>
  nameWithType.vb: List(Of MixModuleData)
  fullName.vb: List(Of MixModuleData)
  name.vb: List(Of MixModuleData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: MixModuleData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: MixModuleData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages
  name: Pages
  nameWithType: TenantDataViewModel.Pages
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Pages
- uid: List{MixPage}
  commentId: '!:List{MixPage}'
  definition: List`1
  name: List<MixPage>
  nameWithType: List<MixPage>
  fullName: List<MixPage>
  nameWithType.vb: List(Of MixPage)
  fullName.vb: List(Of MixPage)
  name.vb: List(Of MixPage)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: MixPage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: MixPage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts
  name: Posts
  nameWithType: TenantDataViewModel.Posts
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Posts
- uid: List{MixPost}
  commentId: '!:List{MixPost}'
  definition: List`1
  name: List<MixPost>
  nameWithType: List<MixPost>
  fullName: List<MixPost>
  nameWithType.vb: List(Of MixPost)
  fullName.vb: List(Of MixPost)
  name.vb: List(Of MixPost)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: MixPost
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: MixPost
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases
  name: Databases
  nameWithType: TenantDataViewModel.Databases
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.Databases
- uid: List{MixDatabase}
  commentId: '!:List{MixDatabase}'
  definition: List`1
  name: List<MixDatabase>
  nameWithType: List<MixDatabase>
  fullName: List<MixDatabase>
  nameWithType.vb: List(Of MixDatabase)
  fullName.vb: List(Of MixDatabase)
  name.vb: List(Of MixDatabase)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: MixDatabase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: MixDatabase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns
  name: DatabaseColumns
  nameWithType: TenantDataViewModel.DatabaseColumns
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.DatabaseColumns
- uid: List{MixDatabaseColumn}
  commentId: '!:List{MixDatabaseColumn}'
  definition: List`1
  name: List<MixDatabaseColumn>
  nameWithType: List<MixDatabaseColumn>
  fullName: List<MixDatabaseColumn>
  nameWithType.vb: List(Of MixDatabaseColumn)
  fullName.vb: List(Of MixDatabaseColumn)
  name.vb: List(Of MixDatabaseColumn)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseColumn
    name: MixDatabaseColumn
    nameWithType: MixDatabaseColumn
    fullName: MixDatabaseColumn
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseColumn
    name: MixDatabaseColumn
    nameWithType: MixDatabaseColumn
    fullName: MixDatabaseColumn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas
  name: MixDatas
  nameWithType: TenantDataViewModel.MixDatas
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.MixDatas
- uid: List{MixData}
  commentId: '!:List{MixData}'
  definition: List`1
  name: List<MixData>
  nameWithType: List<MixData>
  fullName: List<MixData>
  nameWithType.vb: List(Of MixData)
  fullName.vb: List(Of MixData)
  name.vb: List(Of MixData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixData
    name: MixData
    nameWithType: MixData
    fullName: MixData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixData
    name: MixData
    nameWithType: MixData
    fullName: MixData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.#ctor*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.#ctor
  name: TenantDataViewModel
  nameWithType: TenantDataViewModel.TenantDataViewModel
  fullName: Mix.Tenancy.Domain.ViewModels.TenantDataViewModel.TenantDataViewModel
