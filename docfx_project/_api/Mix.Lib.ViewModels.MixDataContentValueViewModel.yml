### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel
  commentId: T:Mix.Lib.ViewModels.MixDataContentValueViewModel
  id: MixDataContentValueViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor(MixDataContentValue,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.Column
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue
  - Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty
  langs:
  - csharp
  - vb
  name: MixDataContentValueViewModel
  nameWithType: MixDataContentValueViewModel
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDataContentValueViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixDataContentValueViewModel : MultilingualContentViewModelBase<MixCmsContext, MixDataContentValue, Guid, MixDataContentValueViewModel>'
    content.vb: >-
      Public Class MixDataContentValueViewModel
          Inherits MultilingualContentViewModelBase(Of MixCmsContext, MixDataContentValue, Guid, MixDataContentValueViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId
  id: MixDatabaseId
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseId
  nameWithType: MixDataContentValueViewModel.MixDatabaseId
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixDatabaseId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseId As Integer
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName
  id: MixDatabaseColumnName
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseColumnName
  nameWithType: MixDataContentValueViewModel.MixDatabaseColumnName
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseColumnName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string MixDatabaseColumnName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseColumnName As String
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: MixDataContentValueViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType
  id: DataType
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: MixDataContentValueViewModel.DataType
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataType
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDataType DataType { get; set; }
    parameters: []
    return:
      type: MixDataType
    content.vb: Public Property DataType As MixDataType
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue
  id: BooleanValue
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: BooleanValue
  nameWithType: MixDataContentValueViewModel.BooleanValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: BooleanValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public bool? BooleanValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property BooleanValue As Boolean?
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue
  id: DateTimeValue
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: DateTimeValue
  nameWithType: MixDataContentValueViewModel.DateTimeValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DateTimeValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public DateTime? DateTimeValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property DateTimeValue As DateTime?
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue
  id: DoubleValue
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: DoubleValue
  nameWithType: MixDataContentValueViewModel.DoubleValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DoubleValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public double? DoubleValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: Public Property DoubleValue As Double?
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue
  id: IntegerValue
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: IntegerValue
  nameWithType: MixDataContentValueViewModel.IntegerValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IntegerValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int? IntegerValue { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IntegerValue As Integer?
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue
  id: StringValue
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: StringValue
  nameWithType: MixDataContentValueViewModel.StringValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StringValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string StringValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StringValue As String
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue
  id: EncryptValue
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: EncryptValue
  nameWithType: MixDataContentValueViewModel.EncryptValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EncryptValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 17
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string EncryptValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EncryptValue As String
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey
  id: EncryptKey
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: EncryptKey
  nameWithType: MixDataContentValueViewModel.EncryptKey
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EncryptKey
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string EncryptKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EncryptKey As String
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType
  id: EncryptType
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: EncryptType
  nameWithType: MixDataContentValueViewModel.EncryptType
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EncryptType
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 19
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixEncryptType EncryptType { get; set; }
    parameters: []
    return:
      type: MixEncryptType
    content.vb: Public Property EncryptType As MixEncryptType
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId
  id: MixDataContentId
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDataContentId
  nameWithType: MixDataContentValueViewModel.MixDataContentId
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDataContentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 21
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid MixDataContentId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property MixDataContentId As Guid
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId
  id: MixDatabaseColumnId
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseColumnId
  nameWithType: MixDataContentValueViewModel.MixDatabaseColumnId
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseColumnId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 22
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixDatabaseColumnId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseColumnId As Integer
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.Column
  commentId: P:Mix.Lib.ViewModels.MixDataContentValueViewModel.Column
  id: Column
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: Column
  nameWithType: MixDataContentValueViewModel.Column
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.Column
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Column
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDatabaseColumnViewModel Column { get; set; }
    parameters: []
    return:
      type: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
    content.vb: Public Property Column As MixDatabaseColumnViewModel
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.Column*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDataContentValueViewModel()
  nameWithType: MixDataContentValueViewModel.MixDataContentValueViewModel()
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentValueViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDataContentValueViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDataContentValueViewModel(UnitOfWorkInfo)
  nameWithType: MixDataContentValueViewModel.MixDataContentValueViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentValueViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 35
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDataContentValueViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor(MixDataContentValue,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor(MixDataContentValue,UnitOfWorkInfo)
  id: '#ctor(MixDataContentValue,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: MixDataContentValueViewModel(MixDataContentValue, UnitOfWorkInfo)
  nameWithType: MixDataContentValueViewModel.MixDataContentValueViewModel(MixDataContentValue, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentValueViewModel(MixDataContentValue, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 39
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDataContentValueViewModel(MixDataContentValue entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixDataContentValue
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixDataContentValue, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity
  commentId: M:Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: MixDataContentValueViewModel.ParseEntity()
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 49
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<MixDataContentValue> ParseEntity()
    return:
      type: Task{MixDataContentValue}
    content.vb: Public Overrides Function ParseEntity As Task(Of MixDataContentValue)
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView
  commentId: M:Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView
  id: ExpandView
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixDataContentValueViewModel.ExpandView()
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 64
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty
  commentId: M:Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty
  id: ToJProperty
  parent: Mix.Lib.ViewModels.MixDataContentValueViewModel
  langs:
  - csharp
  - vb
  name: ToJProperty()
  nameWithType: MixDataContentValueViewModel.ToJProperty()
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ToJProperty
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDataContentValueViewModel.cs
    startLine: 89
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public JProperty ToJProperty()
    return:
      type: JProperty
    content.vb: Public Function ToJProperty As JProperty
  overload: Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId
  name: MixDatabaseId
  nameWithType: MixDataContentValueViewModel.MixDatabaseId
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName
  name: MixDatabaseColumnName
  nameWithType: MixDataContentValueViewModel.MixDatabaseColumnName
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName
  name: MixDatabaseName
  nameWithType: MixDataContentValueViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseName
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType
  name: DataType
  nameWithType: MixDataContentValueViewModel.DataType
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.DataType
- uid: MixDataType
  isExternal: true
  name: MixDataType
  nameWithType: MixDataType
  fullName: MixDataType
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue
  name: BooleanValue
  nameWithType: MixDataContentValueViewModel.BooleanValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.BooleanValue
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue
  name: DateTimeValue
  nameWithType: MixDataContentValueViewModel.DateTimeValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.DateTimeValue
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue
  name: DoubleValue
  nameWithType: MixDataContentValueViewModel.DoubleValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.DoubleValue
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue
  name: IntegerValue
  nameWithType: MixDataContentValueViewModel.IntegerValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.IntegerValue
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue
  name: StringValue
  nameWithType: MixDataContentValueViewModel.StringValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.StringValue
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue
  name: EncryptValue
  nameWithType: MixDataContentValueViewModel.EncryptValue
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptValue
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey
  name: EncryptKey
  nameWithType: MixDataContentValueViewModel.EncryptKey
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptKey
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType
  name: EncryptType
  nameWithType: MixDataContentValueViewModel.EncryptType
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.EncryptType
- uid: MixEncryptType
  isExternal: true
  name: MixEncryptType
  nameWithType: MixEncryptType
  fullName: MixEncryptType
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId
  name: MixDataContentId
  nameWithType: MixDataContentValueViewModel.MixDataContentId
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId
  name: MixDatabaseColumnId
  nameWithType: MixDataContentValueViewModel.MixDatabaseColumnId
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDatabaseColumnId
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.Column*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.Column
  name: Column
  nameWithType: MixDataContentValueViewModel.Column
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.Column
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  commentId: T:Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  parent: Mix.Lib.ViewModels
  name: MixDatabaseColumnViewModel
  nameWithType: MixDatabaseColumnViewModel
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.#ctor
  name: MixDataContentValueViewModel
  nameWithType: MixDataContentValueViewModel.MixDataContentValueViewModel
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.MixDataContentValueViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: MixDataContentValue
  isExternal: true
  name: MixDataContentValue
  nameWithType: MixDataContentValue
  fullName: MixDataContentValue
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity
  name: ParseEntity
  nameWithType: MixDataContentValueViewModel.ParseEntity
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.ParseEntity
- uid: Task{MixDataContentValue}
  commentId: '!:Task{MixDataContentValue}'
  definition: Task`1
  name: Task<MixDataContentValue>
  nameWithType: Task<MixDataContentValue>
  fullName: Task<MixDataContentValue>
  nameWithType.vb: Task(Of MixDataContentValue)
  fullName.vb: Task(Of MixDataContentValue)
  name.vb: Task(Of MixDataContentValue)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDataContentValue
    name: MixDataContentValue
    nameWithType: MixDataContentValue
    fullName: MixDataContentValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDataContentValue
    name: MixDataContentValue
    nameWithType: MixDataContentValue
    fullName: MixDataContentValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView
  name: ExpandView
  nameWithType: MixDataContentValueViewModel.ExpandView
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty*
  commentId: Overload:Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty
  name: ToJProperty
  nameWithType: MixDataContentValueViewModel.ToJProperty
  fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel.ToJProperty
- uid: JProperty
  isExternal: true
  name: JProperty
  nameWithType: JProperty
  fullName: JProperty
