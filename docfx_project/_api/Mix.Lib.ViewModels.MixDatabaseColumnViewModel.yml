### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  commentId: T:Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  id: MixDatabaseColumnViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor(MixDatabaseColumn,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView``1(``0)
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId
  - Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName
  langs:
  - csharp
  - vb
  name: MixDatabaseColumnViewModel
  nameWithType: MixDatabaseColumnViewModel
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseColumnViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 5
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixDatabaseColumnViewModel : ViewModelBase<MixCmsContext, MixDatabaseColumn, int, MixDatabaseColumnViewModel>'
    content.vb: >-
      Public Class MixDatabaseColumnViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixDatabaseColumn, Integer, MixDatabaseColumnViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName
  id: SystemName
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MixDatabaseColumnViewModel.SystemName
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName
  id: DisplayName
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MixDatabaseColumnViewModel.DisplayName
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DisplayName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType
  id: DataType
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: MixDatabaseColumnViewModel.DataType
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataType
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDataType DataType { get; set; }
    parameters: []
    return:
      type: MixDataType
    content.vb: Public Property DataType As MixDataType
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId
  id: ReferenceId
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: ReferenceId
  nameWithType: MixDatabaseColumnViewModel.ReferenceId
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ReferenceId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int? ReferenceId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ReferenceId As Integer?
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue
  id: DefaultValue
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: MixDatabaseColumnViewModel.DefaultValue
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DefaultValue
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string DefaultValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultValue As String
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId
  id: MixDatabaseId
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseId
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseId
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixDatabaseId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseId As Integer
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations
  id: Configurations
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: MixDatabaseColumnViewModel.Configurations
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configurations
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 17
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: >-
      [JsonIgnore]

      public string Configurations { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public Property Configurations As String
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations
  commentId: P:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations
  id: ColumnConfigurations
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: ColumnConfigurations
  nameWithType: MixDatabaseColumnViewModel.ColumnConfigurations
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ColumnConfigurations
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 19
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public ColumnConfigurations ColumnConfigurations { get; set; }
    parameters: []
    return:
      type: Mix.Shared.Models.ColumnConfigurations
    content.vb: Public Property ColumnConfigurations As ColumnConfigurations
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseColumnViewModel()
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseColumnViewModel()
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseColumnViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDatabaseColumnViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseColumnViewModel(UnitOfWorkInfo)
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseColumnViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseColumnViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDatabaseColumnViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor(MixDatabaseColumn,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor(MixDatabaseColumn,UnitOfWorkInfo)
  id: '#ctor(MixDatabaseColumn,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseColumnViewModel(MixDatabaseColumn, UnitOfWorkInfo)
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseColumnViewModel(MixDatabaseColumn, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseColumnViewModel(MixDatabaseColumn, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDatabaseColumnViewModel(MixDatabaseColumn entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixDatabaseColumn
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixDatabaseColumn, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity
  commentId: M:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: MixDatabaseColumnViewModel.ParseEntity()
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 42
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<MixDatabaseColumn> ParseEntity()
    return:
      type: Task{MixDatabaseColumn}
    content.vb: Public Overrides Function ParseEntity As Task(Of MixDatabaseColumn)
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView``1(``0)
  commentId: M:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView``1(``0)
  id: ParseView``1(``0)
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: ParseView<TSource>(TSource)
  nameWithType: MixDatabaseColumnViewModel.ParseView<TSource>(TSource)
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView<TSource>(TSource)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseView
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 53
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override void ParseView<TSource>(TSource sourceObject)
    parameters:
    - id: sourceObject
      type: '{TSource}'
    typeParameters:
    - id: TSource
    content.vb: Public Overrides Sub ParseView(Of TSource)(sourceObject As TSource)
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView*
  nameWithType.vb: MixDatabaseColumnViewModel.ParseView(Of TSource)(TSource)
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView(Of TSource)(TSource)
  name.vb: ParseView(Of TSource)(TSource)
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync
  commentId: M:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync
  id: DeleteHandlerAsync
  parent: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  langs:
  - csharp
  - vb
  name: DeleteHandlerAsync()
  nameWithType: MixDatabaseColumnViewModel.DeleteHandlerAsync()
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeleteHandlerAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixDatabaseColumnViewModel.cs
    startLine: 61
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: protected override Task DeleteHandlerAsync()
    return:
      type: Task
    content.vb: Protected Overrides Function DeleteHandlerAsync As Task
  overload: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName
  name: SystemName
  nameWithType: MixDatabaseColumnViewModel.SystemName
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.SystemName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName
  name: DisplayName
  nameWithType: MixDatabaseColumnViewModel.DisplayName
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DisplayName
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName
  name: MixDatabaseName
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseName
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType
  name: DataType
  nameWithType: MixDatabaseColumnViewModel.DataType
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DataType
- uid: MixDataType
  isExternal: true
  name: MixDataType
  nameWithType: MixDataType
  fullName: MixDataType
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId
  name: ReferenceId
  nameWithType: MixDatabaseColumnViewModel.ReferenceId
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ReferenceId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue
  name: DefaultValue
  nameWithType: MixDatabaseColumnViewModel.DefaultValue
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DefaultValue
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId
  name: MixDatabaseId
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseId
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations
  name: Configurations
  nameWithType: MixDatabaseColumnViewModel.Configurations
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.Configurations
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations
  name: ColumnConfigurations
  nameWithType: MixDatabaseColumnViewModel.ColumnConfigurations
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ColumnConfigurations
- uid: Mix.Shared.Models.ColumnConfigurations
  commentId: T:Mix.Shared.Models.ColumnConfigurations
  parent: Mix.Shared.Models
  name: ColumnConfigurations
  nameWithType: ColumnConfigurations
  fullName: Mix.Shared.Models.ColumnConfigurations
- uid: Mix.Shared.Models
  commentId: N:Mix.Shared.Models
  name: Mix.Shared.Models
  nameWithType: Mix.Shared.Models
  fullName: Mix.Shared.Models
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.#ctor
  name: MixDatabaseColumnViewModel
  nameWithType: MixDatabaseColumnViewModel.MixDatabaseColumnViewModel
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.MixDatabaseColumnViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: MixDatabaseColumn
  commentId: '!:MixDatabaseColumn'
  isExternal: true
  name: MixDatabaseColumn
  nameWithType: MixDatabaseColumn
  fullName: MixDatabaseColumn
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity
  name: ParseEntity
  nameWithType: MixDatabaseColumnViewModel.ParseEntity
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseEntity
- uid: Task{MixDatabaseColumn}
  commentId: '!:Task{MixDatabaseColumn}'
  definition: Task`1
  name: Task<MixDatabaseColumn>
  nameWithType: Task<MixDatabaseColumn>
  fullName: Task<MixDatabaseColumn>
  nameWithType.vb: Task(Of MixDatabaseColumn)
  fullName.vb: Task(Of MixDatabaseColumn)
  name.vb: Task(Of MixDatabaseColumn)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseColumn
    name: MixDatabaseColumn
    nameWithType: MixDatabaseColumn
    fullName: MixDatabaseColumn
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseColumn
    name: MixDatabaseColumn
    nameWithType: MixDatabaseColumn
    fullName: MixDatabaseColumn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView
  name: ParseView
  nameWithType: MixDatabaseColumnViewModel.ParseView
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.ParseView
- uid: '{TSource}'
  commentId: '!:TSource'
  definition: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: TSource
  name: TSource
  nameWithType: TSource
  fullName: TSource
- uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync
  name: DeleteHandlerAsync
  nameWithType: MixDatabaseColumnViewModel.DeleteHandlerAsync
  fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel.DeleteHandlerAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
