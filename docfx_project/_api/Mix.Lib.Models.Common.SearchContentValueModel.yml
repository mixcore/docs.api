### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.Common.SearchContentValueModel
  commentId: T:Mix.Lib.Models.Common.SearchContentValueModel
  id: SearchContentValueModel
  parent: Mix.Lib.Models.Common
  children:
  - Mix.Lib.Models.Common.SearchContentValueModel.ColumnName
  - Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod
  - Mix.Lib.Models.Common.SearchContentValueModel.Value
  langs:
  - csharp
  - vb
  name: SearchContentValueModel
  nameWithType: SearchContentValueModel
  fullName: Mix.Lib.Models.Common.SearchContentValueModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchContentValueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SearchContentValueModel
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchContentValueModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public class SearchContentValueModel
    content.vb: Public Class SearchContentValueModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.Common.SearchContentValueModel.ColumnName
  commentId: P:Mix.Lib.Models.Common.SearchContentValueModel.ColumnName
  id: ColumnName
  parent: Mix.Lib.Models.Common.SearchContentValueModel
  langs:
  - csharp
  - vb
  name: ColumnName
  nameWithType: SearchContentValueModel.ColumnName
  fullName: Mix.Lib.Models.Common.SearchContentValueModel.ColumnName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchContentValueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ColumnName
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchContentValueModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string ColumnName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ColumnName As String
  overload: Mix.Lib.Models.Common.SearchContentValueModel.ColumnName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.SearchContentValueModel.Value
  commentId: P:Mix.Lib.Models.Common.SearchContentValueModel.Value
  id: Value
  parent: Mix.Lib.Models.Common.SearchContentValueModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SearchContentValueModel.Value
  fullName: Mix.Lib.Models.Common.SearchContentValueModel.Value
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchContentValueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Value
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchContentValueModel.cs
    startLine: 5
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public object Value { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Value As Object
  overload: Mix.Lib.Models.Common.SearchContentValueModel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod
  commentId: P:Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod
  id: SearchMethod
  parent: Mix.Lib.Models.Common.SearchContentValueModel
  langs:
  - csharp
  - vb
  name: SearchMethod
  nameWithType: SearchContentValueModel.SearchMethod
  fullName: Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchContentValueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SearchMethod
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchContentValueModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public ExpressionMethod SearchMethod { get; set; }
    parameters: []
    return:
      type: ExpressionMethod
    content.vb: Public Property SearchMethod As ExpressionMethod
  overload: Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Models.Common
  commentId: N:Mix.Lib.Models.Common
  name: Mix.Lib.Models.Common
  nameWithType: Mix.Lib.Models.Common
  fullName: Mix.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.Common.SearchContentValueModel.ColumnName*
  commentId: Overload:Mix.Lib.Models.Common.SearchContentValueModel.ColumnName
  name: ColumnName
  nameWithType: SearchContentValueModel.ColumnName
  fullName: Mix.Lib.Models.Common.SearchContentValueModel.ColumnName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Models.Common.SearchContentValueModel.Value*
  commentId: Overload:Mix.Lib.Models.Common.SearchContentValueModel.Value
  name: Value
  nameWithType: SearchContentValueModel.Value
  fullName: Mix.Lib.Models.Common.SearchContentValueModel.Value
- uid: Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod*
  commentId: Overload:Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod
  name: SearchMethod
  nameWithType: SearchContentValueModel.SearchMethod
  fullName: Mix.Lib.Models.Common.SearchContentValueModel.SearchMethod
- uid: ExpressionMethod
  commentId: '!:ExpressionMethod'
  isExternal: true
  name: ExpressionMethod
  nameWithType: ExpressionMethod
  fullName: ExpressionMethod
