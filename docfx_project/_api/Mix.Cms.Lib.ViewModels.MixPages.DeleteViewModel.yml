### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  id: DeleteViewModel
  parent: Mix.Cms.Lib.ViewModels.MixPages
  children:
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View
  - Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views
  langs:
  - csharp
  - vb
  name: DeleteViewModel
  nameWithType: DeleteViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeleteViewModel
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: 'public class DeleteViewModel : ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>, ISerializable'
    content.vb: >-
      Public Class DeleteViewModel

          Inherits ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel)

          Implements ISerializable
  inheritance:
  - System.Object
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Repository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ModelRepository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitModel
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitContext
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetPropValue(System.Object,System.String)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GenerateCache(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.AddToCache(Mix.Cms.Lib.Models.Cms.MixPage,System.Object,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveCache(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.IsCache
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Model
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Errors
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.IsValid
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id
  id: Id
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: DeleteViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture
  id: Specificulture
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: DeleteViewModel.Specificulture
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 28
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("specificulture")]

      public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("specificulture")>

      Public Property Specificulture As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: specificulture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority
  id: Priority
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: DeleteViewModel.Priority
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Priority
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 30
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("priority")]

      public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("priority")>

      Public Property Priority As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures
  id: Cultures
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Cultures
  nameWithType: DeleteViewModel.Cultures
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Cultures
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 32
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("cultures")]

      public List<SupportedCulture> Cultures { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture}
    content.vb: >-
      <JsonProperty("cultures")>

      Public Property Cultures As List(Of SupportedCulture)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cultures
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template
  id: Template
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: DeleteViewModel.Template
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Template
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 35
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("template")]

      public string Template { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("template")>

      Public Property Template As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: template
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail
  id: Thumbnail
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Thumbnail
  nameWithType: DeleteViewModel.Thumbnail
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Thumbnail
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 38
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("thumbnail")]

      public string Thumbnail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("thumbnail")>

      Public Property Thumbnail As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: thumbnail
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image
  id: Image
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: DeleteViewModel.Image
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Image
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 41
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("image")]

      public string Image { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("image")>

      Public Property Image As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: image
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon
  id: Icon
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: DeleteViewModel.Icon
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 44
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("icon")]

      public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("icon")>

      Public Property Icon As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: icon
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass
  id: CssClass
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: CssClass
  nameWithType: DeleteViewModel.CssClass
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CssClass
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 47
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("cssClass")]

      public string CssClass { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("cssClass")>

      Public Property CssClass As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cssClass
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout
  id: Layout
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: DeleteViewModel.Layout
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Layout
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 50
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("layout")]

      public string Layout { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("layout")>

      Public Property Layout As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: layout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title
  id: Title
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: DeleteViewModel.Title
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 53
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [Required]

      [JsonProperty("title")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <JsonProperty("title")>

      Public Property Title As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt
  id: Excerpt
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Excerpt
  nameWithType: DeleteViewModel.Excerpt
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Excerpt
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 57
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("excerpt")]

      public string Excerpt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("excerpt")>

      Public Property Excerpt As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: excerpt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content
  id: Content
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: DeleteViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 60
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("content")]

      public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("content")>

      Public Property Content As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: content
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName
  id: SeoName
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: SeoName
  nameWithType: DeleteViewModel.SeoName
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoName
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 63
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("seoName")]

      public string SeoName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("seoName")>

      Public Property SeoName As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seoName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle
  id: SeoTitle
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: SeoTitle
  nameWithType: DeleteViewModel.SeoTitle
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoTitle
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 66
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("seoTitle")]

      public string SeoTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("seoTitle")>

      Public Property SeoTitle As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seoTitle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription
  id: SeoDescription
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: SeoDescription
  nameWithType: DeleteViewModel.SeoDescription
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoDescription
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 69
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("seoDescription")]

      public string SeoDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("seoDescription")>

      Public Property SeoDescription As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seoDescription
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords
  id: SeoKeywords
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: SeoKeywords
  nameWithType: DeleteViewModel.SeoKeywords
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoKeywords
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 72
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("seoKeywords")]

      public string SeoKeywords { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("seoKeywords")>

      Public Property SeoKeywords As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: seoKeywords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source
  id: Source
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: DeleteViewModel.Source
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Source
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 75
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("source")]

      public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("source")>

      Public Property Source As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: source
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views
  id: Views
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Views
  nameWithType: DeleteViewModel.Views
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Views
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 78
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("views")]

      public int? Views { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("views")>

      Public Property Views As Integer?
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: views
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type
  id: Type
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: DeleteViewModel.Type
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 81
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("type")]

      public MixPageType Type { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixPageType
    content.vb: >-
      <JsonProperty("type")>

      Public Property Type As MixPageType
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status
  id: Status
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: DeleteViewModel.Status
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Status
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 84
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("status")]

      public MixContentStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixContentStatus
    content.vb: >-
      <JsonProperty("status")>

      Public Property Status As MixContentStatus
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: DeleteViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 87
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("createdDateTime")]

      public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("createdDateTime")>

      Public Property CreatedDateTime As Date
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdDateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime
  id: UpdatedDateTime
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: UpdatedDateTime
  nameWithType: DeleteViewModel.UpdatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UpdatedDateTime
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 90
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("updatedDateTime")]

      public DateTime? UpdatedDateTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("updatedDateTime")>

      Public Property UpdatedDateTime As Date?
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: updatedDateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy
  id: CreatedBy
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: DeleteViewModel.CreatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 93
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("createdBy")]

      public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("createdBy")>

      Public Property CreatedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags
  id: Tags
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: DeleteViewModel.Tags
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Tags
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 96
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("tags")]

      public string Tags { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("tags")>

      Public Property Tags As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl
  id: StaticUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: StaticUrl
  nameWithType: DeleteViewModel.StaticUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StaticUrl
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 99
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("staticUrl")]

      public string StaticUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("staticUrl")>

      Public Property StaticUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: staticUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level
  id: Level
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Level
  nameWithType: DeleteViewModel.Level
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Level
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 102
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("level")]

      public int? Level { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("level")>

      Public Property Level As Integer?
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: level
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified
  id: LastModified
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: DeleteViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 105
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("lastModified")]

      public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("lastModified")>

      Public Property LastModified As Date?
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy
  id: ModifiedBy
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: DeleteViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModifiedBy
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 108
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("modifiedBy")]

      public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("modifiedBy")>

      Public Property ModifiedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: modifiedBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize
  id: PageSize
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: DeleteViewModel.PageSize
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageSize
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 111
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("pageSize")]

      public int? PageSize { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: >-
      <JsonProperty("pageSize")>

      Public Property PageSize As Integer?
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pageSize
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl
  id: DetailsUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: DetailsUrl
  nameWithType: DeleteViewModel.DetailsUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DetailsUrl
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 118
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("detailsUrl")]

      public string DetailsUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("detailsUrl")>

      Public Property DetailsUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: detailsUrl
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs
  id: ModuleNavs
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ModuleNavs
  nameWithType: DeleteViewModel.ModuleNavs
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleNavs
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 121
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("moduleNavs")]

      public List<ReadMvcViewModel> ModuleNavs { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel}
    content.vb: >-
      <JsonProperty("moduleNavs")>

      Public Property ModuleNavs As List(Of ReadMvcViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: moduleNavs
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag
  id: ListTag
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ListTag
  nameWithType: DeleteViewModel.ListTag
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ListTag
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 124
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("listTag")]

      public JArray ListTag { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JArray
    content.vb: >-
      <JsonProperty("listTag")>

      Public Property ListTag As JArray
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: listTag
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream
  id: ImageFileStream
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ImageFileStream
  nameWithType: DeleteViewModel.ImageFileStream
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ImageFileStream
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 127
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("imageFileStream")]

      public FileStreamViewModel ImageFileStream { get; set; }
    parameters: []
    return:
      type: Mix.Domain.Core.ViewModels.FileStreamViewModel
    content.vb: >-
      <JsonProperty("imageFileStream")>

      Public Property ImageFileStream As FileStreamViewModel
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: imageFileStream
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain
  id: Domain
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: DeleteViewModel.Domain
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Domain
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 130
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("domain")]

      public string Domain { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("domain")>

      Public ReadOnly Property Domain As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: domain
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl
  id: ImageUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ImageUrl
  nameWithType: DeleteViewModel.ImageUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ImageUrl
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 133
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("imageUrl")]

      public string ImageUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("imageUrl")>

      Public ReadOnly Property ImageUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: imageUrl
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl
  id: ThumbnailUrl
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ThumbnailUrl
  nameWithType: DeleteViewModel.ThumbnailUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThumbnailUrl
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 151
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("thumbnailUrl")]

      public string ThumbnailUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("thumbnailUrl")>

      Public ReadOnly Property ThumbnailUrl As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: thumbnailUrl
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View
  id: View
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: View
  nameWithType: DeleteViewModel.View
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: View
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 171
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("view")]

      public UpdateViewModel View { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
    content.vb: >-
      <JsonProperty("view")>

      Public Property View As UpdateViewModel
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: view
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates
  id: Templates
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Templates
  nameWithType: DeleteViewModel.Templates
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Templates
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 174
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("templates")]

      public List<UpdateViewModel> Templates { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel}
    content.vb: >-
      <JsonProperty("templates")>

      Public Property Templates As List(Of UpdateViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: templates
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master
  id: Master
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Master
  nameWithType: DeleteViewModel.Master
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Master
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 177
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("master")]

      public UpdateViewModel Master { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
    content.vb: >-
      <JsonProperty("master")>

      Public Property Master As UpdateViewModel
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: master
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters
  id: Masters
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Masters
  nameWithType: DeleteViewModel.Masters
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Masters
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 180
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("masters")]

      public List<UpdateViewModel> Masters { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel}
    content.vb: >-
      <JsonProperty("masters")>

      Public Property Masters As List(Of UpdateViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: masters
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme
  id: ActivedTheme
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: ActivedTheme
  nameWithType: DeleteViewModel.ActivedTheme
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ActivedTheme
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 183
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonIgnore]

      public int ActivedTheme { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property ActivedTheme As Integer
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType
  id: TemplateFolderType
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: TemplateFolderType
  nameWithType: DeleteViewModel.TemplateFolderType
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateFolderType
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 192
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonIgnore]

      public string TemplateFolderType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property TemplateFolderType As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder
  id: TemplateFolder
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: TemplateFolder
  nameWithType: DeleteViewModel.TemplateFolder
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateFolder
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 201
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("templateFolder")]

      public string TemplateFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("templateFolder")>

      Public ReadOnly Property TemplateFolder As String
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: templateFolder
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases
  id: UrlAliases
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: UrlAliases
  nameWithType: DeleteViewModel.UrlAliases
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UrlAliases
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 218
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("urlAliases")]

      public List<UpdateViewModel> UrlAliases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel}
    content.vb: >-
      <JsonProperty("urlAliases")>

      Public Property UrlAliases As List(Of UpdateViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: urlAliases
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes
  id: Attributes
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: Attributes
  nameWithType: DeleteViewModel.Attributes
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Attributes
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 221
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("attributes")]

      public UpdateViewModel Attributes { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.ViewModels.MixAttributeSets.UpdateViewModel
    content.vb: >-
      <JsonProperty("attributes")>

      Public Property Attributes As UpdateViewModel
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData
  id: AttributeData
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: AttributeData
  nameWithType: DeleteViewModel.AttributeData
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeData
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 224
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("attributeData")]

      public UpdateViewModel AttributeData { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
    content.vb: >-
      <JsonProperty("attributeData")>

      Public Property AttributeData As UpdateViewModel
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributeData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories
  id: SysCategories
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: SysCategories
  nameWithType: DeleteViewModel.SysCategories
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SysCategories
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 227
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("sysCategories")]

      public List<UpdateViewModel> SysCategories { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel}
    content.vb: >-
      <JsonProperty("sysCategories")>

      Public Property SysCategories As List(Of UpdateViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sysCategories
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags
  commentId: P:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags
  id: SysTags
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: SysTags
  nameWithType: DeleteViewModel.SysTags
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SysTags
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 230
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: >-
      [JsonProperty("sysTags")]

      public List<UpdateViewModel> SysTags { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel}
    content.vb: >-
      <JsonProperty("sysTags")>

      Public Property SysTags As List(Of UpdateViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sysTags
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor
  commentId: M:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: DeleteViewModel()
  nameWithType: DeleteViewModel.DeleteViewModel()
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DeleteViewModel()
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 239
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public DeleteViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: DeleteViewModel(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: DeleteViewModel.DeleteViewModel(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DeleteViewModel(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 243
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public DeleteViewModel(MixPage model, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Mix.Cms.Lib.Models.Cms.MixPage
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As MixPage, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  langs:
  - csharp
  - vb
  name: RemoveRelatedModelsAsync(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: DeleteViewModel.RemoveRelatedModelsAsync(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RemoveRelatedModelsAsync
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixPages/DeleteViewModel.cs
    startLine: 253
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixPages
  syntax:
    content: public override Task<RepositoryResponse<bool>> RemoveRelatedModelsAsync(DeleteViewModel view, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: view
      type: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Overrides Function RemoveRelatedModelsAsync(view As DeleteViewModel, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of Boolean))
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.Cms.Lib.ViewModels.MixPages
  commentId: N:Mix.Cms.Lib.ViewModels.MixPages
  name: Mix.Cms.Lib.ViewModels.MixPages
  nameWithType: Mix.Cms.Lib.ViewModels.MixPages
  fullName: Mix.Cms.Lib.ViewModels.MixPages
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  parent: Mix.Domain.Data.ViewModels
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel)
  name.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Repository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ModelRepository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ModelRepository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  name: ModelRepository
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ModelRepository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ModelRepository
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ModelRepository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ModelRepository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitModel
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ParseModel(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ParseModel(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Validate(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Validate(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  name: UpdateFieldsAsync(JObject)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.UpdateFieldsAsync(JObject)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).UpdateFieldsAsync(JObject)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.CloneAsync(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).CloneAsync(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).CloneAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.CloneSubModelsAsync(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).CloneSubModelsAsync(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveRelatedModelsAsync(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveRelatedModelsAsync(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveSubModelsAsync(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveSubModelsAsync(MixPage, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixPage,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.InitView(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.InitView(Mix.Cms.Lib.Models.Cms.MixPage, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).InitView(MixPage, Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).InitView(Mix.Cms.Lib.Models.Cms.MixPage, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ExpandView(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Clone(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Clone(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Clone(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Clone(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixPage,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.CloneSubModels(MixPage, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).CloneSubModels(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).CloneSubModels(Mix.Cms.Lib.Models.Cms.MixPage, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(MixPage, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveRelatedModels(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveRelatedModels(DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveSubModels(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveSubModels(MixPage, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveSubModels(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitContext
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.InitContext
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.InitContext()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).InitContext()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).InitContext()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GetCachedKey(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GetCachedKey(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GetCachedKey(MixPage, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GetCachedKey(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetPropValue(System.Object,System.String)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GetPropValue(System.Object,System.String)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  name: GetPropValue(Object, String)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GetPropValue(Object, String)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GetPropValue(System.Object, System.String)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GetPropValue(Object, String)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GetPropValue(System.Object, System.String)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GenerateCache(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.GenerateCache(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GenerateCache(MixPage, DeleteViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GenerateCache(MixPage, DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GenerateCache(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GenerateCache(MixPage, DeleteViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GenerateCache(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
    name: DeleteViewModel
    nameWithType: DeleteViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.AddToCache(Mix.Cms.Lib.Models.Cms.MixPage,System.Object,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.AddToCache(Mix.Cms.Lib.Models.Cms.MixPage,System.Object,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: AddToCache(MixPage, Object, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.AddToCache(MixPage, Object, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.AddToCache(Mix.Cms.Lib.Models.Cms.MixPage, System.Object, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).AddToCache(MixPage, Object, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).AddToCache(Mix.Cms.Lib.Models.Cms.MixPage, System.Object, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveCache(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.RemoveCache(Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveCache(MixPage, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveCache(MixPage, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveCache(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveCache(MixPage, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveCache(Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Cms.Lib.Models.Cms.MixPage
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.IsCache
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.IsCache
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  name: IsCache
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.IsCache
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.IsCache
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).IsCache
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).IsCache
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Model
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Model
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.Errors
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}.IsValid
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixPage,Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<MixCmsContext, MixPage, DeleteViewModel>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixPage, DeleteViewModel).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixPage, Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel).IsValid
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels
  commentId: N:Mix.Domain.Data.ViewModels
  isExternal: true
  name: Mix.Domain.Data.ViewModels
  nameWithType: Mix.Domain.Data.ViewModels
  fullName: Mix.Domain.Data.ViewModels
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  isExternal: true
  name: ModelRepository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelRepository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelRepository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelRepository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelRepository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  isExternal: true
  name: UpdateFieldsAsync(JObject)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync(JObject)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync(JObject)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetCachedKey(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  isExternal: true
  name: GetPropValue(Object, String)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetPropValue(Object, String)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetPropValue(System.Object, System.String)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetPropValue(Object, String)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetPropValue(System.Object, System.String)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GenerateCache(TModel, TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GenerateCache(TModel, TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.AddToCache(TModel, System.Object, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).AddToCache(TModel, System.Object, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveCache(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveCache(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveCache(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveCache(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveCache(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  isExternal: true
  name: IsCache
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsCache
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsCache
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsCache
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsCache
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id
  name: Id
  nameWithType: DeleteViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture
  name: Specificulture
  nameWithType: DeleteViewModel.Specificulture
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Specificulture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority
  name: Priority
  nameWithType: DeleteViewModel.Priority
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Priority
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures
  name: Cultures
  nameWithType: DeleteViewModel.Cultures
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Cultures
- uid: System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture}
  commentId: T:System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SupportedCulture>
  nameWithType: List<SupportedCulture>
  fullName: System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>
  nameWithType.vb: List(Of SupportedCulture)
  fullName.vb: System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture)
  name.vb: List(Of SupportedCulture)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template
  name: Template
  nameWithType: DeleteViewModel.Template
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Template
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail
  name: Thumbnail
  nameWithType: DeleteViewModel.Thumbnail
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Thumbnail
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image
  name: Image
  nameWithType: DeleteViewModel.Image
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Image
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon
  name: Icon
  nameWithType: DeleteViewModel.Icon
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Icon
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass
  name: CssClass
  nameWithType: DeleteViewModel.CssClass
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CssClass
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout
  name: Layout
  nameWithType: DeleteViewModel.Layout
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Layout
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title
  name: Title
  nameWithType: DeleteViewModel.Title
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Title
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt
  name: Excerpt
  nameWithType: DeleteViewModel.Excerpt
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Excerpt
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content
  name: Content
  nameWithType: DeleteViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Content
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName
  name: SeoName
  nameWithType: DeleteViewModel.SeoName
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoName
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle
  name: SeoTitle
  nameWithType: DeleteViewModel.SeoTitle
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoTitle
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription
  name: SeoDescription
  nameWithType: DeleteViewModel.SeoDescription
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoDescription
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords
  name: SeoKeywords
  nameWithType: DeleteViewModel.SeoKeywords
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SeoKeywords
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source
  name: Source
  nameWithType: DeleteViewModel.Source
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Source
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views
  name: Views
  nameWithType: DeleteViewModel.Views
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Views
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type
  name: Type
  nameWithType: DeleteViewModel.Type
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Type
- uid: Mix.Cms.Lib.Enums.MixPageType
  commentId: T:Mix.Cms.Lib.Enums.MixPageType
  parent: Mix.Cms.Lib.Enums
  name: MixPageType
  nameWithType: MixPageType
  fullName: Mix.Cms.Lib.Enums.MixPageType
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status
  name: Status
  nameWithType: DeleteViewModel.Status
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Status
- uid: Mix.Cms.Lib.Enums.MixContentStatus
  commentId: T:Mix.Cms.Lib.Enums.MixContentStatus
  parent: Mix.Cms.Lib.Enums
  name: MixContentStatus
  nameWithType: MixContentStatus
  fullName: Mix.Cms.Lib.Enums.MixContentStatus
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime
  name: CreatedDateTime
  nameWithType: DeleteViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime
  name: UpdatedDateTime
  nameWithType: DeleteViewModel.UpdatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UpdatedDateTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy
  name: CreatedBy
  nameWithType: DeleteViewModel.CreatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.CreatedBy
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags
  name: Tags
  nameWithType: DeleteViewModel.Tags
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Tags
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl
  name: StaticUrl
  nameWithType: DeleteViewModel.StaticUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.StaticUrl
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level
  name: Level
  nameWithType: DeleteViewModel.Level
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Level
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified
  name: LastModified
  nameWithType: DeleteViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.LastModified
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy
  name: ModifiedBy
  nameWithType: DeleteViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModifiedBy
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize
  name: PageSize
  nameWithType: DeleteViewModel.PageSize
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.PageSize
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl
  name: DetailsUrl
  nameWithType: DeleteViewModel.DetailsUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DetailsUrl
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs
  name: ModuleNavs
  nameWithType: DeleteViewModel.ModuleNavs
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ModuleNavs
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ReadMvcViewModel>
  nameWithType: List<ReadMvcViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel>
  nameWithType.vb: List(Of ReadMvcViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel)
  name.vb: List(Of ReadMvcViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPageModules.ReadMvcViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag
  name: ListTag
  nameWithType: DeleteViewModel.ListTag
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ListTag
- uid: Newtonsoft.Json.Linq.JArray
  commentId: T:Newtonsoft.Json.Linq.JArray
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: Newtonsoft.Json.Linq.JArray
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream
  name: ImageFileStream
  nameWithType: DeleteViewModel.ImageFileStream
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageFileStream
- uid: Mix.Domain.Core.ViewModels.FileStreamViewModel
  commentId: T:Mix.Domain.Core.ViewModels.FileStreamViewModel
  parent: Mix.Domain.Core.ViewModels
  isExternal: true
  name: FileStreamViewModel
  nameWithType: FileStreamViewModel
  fullName: Mix.Domain.Core.ViewModels.FileStreamViewModel
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain
  name: Domain
  nameWithType: DeleteViewModel.Domain
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Domain
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl
  name: ImageUrl
  nameWithType: DeleteViewModel.ImageUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ImageUrl
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl
  name: ThumbnailUrl
  nameWithType: DeleteViewModel.ThumbnailUrl
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ThumbnailUrl
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View
  name: View
  nameWithType: DeleteViewModel.View
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.View
- uid: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
  parent: Mix.Cms.Lib.ViewModels.MixTemplates
  name: UpdateViewModel
  nameWithType: UpdateViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
- uid: Mix.Cms.Lib.ViewModels.MixTemplates
  commentId: N:Mix.Cms.Lib.ViewModels.MixTemplates
  name: Mix.Cms.Lib.ViewModels.MixTemplates
  nameWithType: Mix.Cms.Lib.ViewModels.MixTemplates
  fullName: Mix.Cms.Lib.ViewModels.MixTemplates
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates
  name: Templates
  nameWithType: DeleteViewModel.Templates
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Templates
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UpdateViewModel>
  nameWithType: List<UpdateViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel>
  nameWithType.vb: List(Of UpdateViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel)
  name.vb: List(Of UpdateViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
    name: UpdateViewModel
    nameWithType: UpdateViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
    name: UpdateViewModel
    nameWithType: UpdateViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.UpdateViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master
  name: Master
  nameWithType: DeleteViewModel.Master
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Master
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters
  name: Masters
  nameWithType: DeleteViewModel.Masters
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Masters
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme
  name: ActivedTheme
  nameWithType: DeleteViewModel.ActivedTheme
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.ActivedTheme
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType
  name: TemplateFolderType
  nameWithType: DeleteViewModel.TemplateFolderType
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolderType
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder
  name: TemplateFolder
  nameWithType: DeleteViewModel.TemplateFolder
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.TemplateFolder
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases
  name: UrlAliases
  nameWithType: DeleteViewModel.UrlAliases
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.UrlAliases
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UpdateViewModel>
  nameWithType: List<UpdateViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel>
  nameWithType.vb: List(Of UpdateViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel)
  name.vb: List(Of UpdateViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel
    name: UpdateViewModel
    nameWithType: UpdateViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel
    name: UpdateViewModel
    nameWithType: UpdateViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixUrlAliases.UpdateViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes
  name: Attributes
  nameWithType: DeleteViewModel.Attributes
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.Attributes
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSets.UpdateViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixAttributeSets.UpdateViewModel
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSets
  name: UpdateViewModel
  nameWithType: UpdateViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSets.UpdateViewModel
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSets
  commentId: N:Mix.Cms.Lib.ViewModels.MixAttributeSets
  name: Mix.Cms.Lib.ViewModels.MixAttributeSets
  nameWithType: Mix.Cms.Lib.ViewModels.MixAttributeSets
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSets
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData
  name: AttributeData
  nameWithType: DeleteViewModel.AttributeData
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.AttributeData
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas
  name: UpdateViewModel
  nameWithType: UpdateViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas
  commentId: N:Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas
  name: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas
  nameWithType: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories
  name: SysCategories
  nameWithType: DeleteViewModel.SysCategories
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysCategories
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<UpdateViewModel>
  nameWithType: List<UpdateViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel>
  nameWithType.vb: List(Of UpdateViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel)
  name.vb: List(Of UpdateViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
    name: UpdateViewModel
    nameWithType: UpdateViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
    name: UpdateViewModel
    nameWithType: UpdateViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeDatas.UpdateViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags
  name: SysTags
  nameWithType: DeleteViewModel.SysTags
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.SysTags
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.#ctor
  name: DeleteViewModel
  nameWithType: DeleteViewModel.DeleteViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.DeleteViewModel
- uid: Mix.Cms.Lib.Models.Cms.MixPage
  commentId: T:Mix.Cms.Lib.Models.Cms.MixPage
  parent: Mix.Cms.Lib.Models.Cms
  name: MixPage
  nameWithType: MixPage
  fullName: Mix.Cms.Lib.Models.Cms.MixPage
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync
  name: RemoveRelatedModelsAsync
  nameWithType: DeleteViewModel.RemoveRelatedModelsAsync
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel.RemoveRelatedModelsAsync
- uid: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
  parent: Mix.Cms.Lib.ViewModels.MixPages
  name: DeleteViewModel
  nameWithType: DeleteViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixPages.DeleteViewModel
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<Boolean>>
  nameWithType: Task<RepositoryResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>>
  nameWithType.vb: Task(Of RepositoryResponse(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean))
  name.vb: Task(Of RepositoryResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
