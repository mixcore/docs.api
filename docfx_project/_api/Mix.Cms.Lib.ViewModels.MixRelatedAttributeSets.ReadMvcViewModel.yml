### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  id: ReadMvcViewModel
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  children:
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority
  - Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status
  langs:
  - csharp
  - vb
  name: ReadMvcViewModel
  nameWithType: ReadMvcViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ReadMvcViewModel
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 9
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: 'public class ReadMvcViewModel : ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>, ISerializable'
    content.vb: >-
      Public Class ReadMvcViewModel

          Inherits ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel)

          Implements ISerializable
  inheritance:
  - System.Object
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Repository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ModelRepository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitModel
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitContext
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetPropValue(System.Object,System.String)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GenerateCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.AddToCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Object,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.IsCache
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Model
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Errors
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.IsValid
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: ReadMvcViewModel(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  nameWithType: ReadMvcViewModel.ReadMvcViewModel(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ReadMvcViewModel(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 12
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: public ReadMvcViewModel(MixRelatedAttributeSet model, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As MixRelatedAttributeSet, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor
  commentId: M:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: ReadMvcViewModel()
  nameWithType: ReadMvcViewModel.ReadMvcViewModel()
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ReadMvcViewModel()
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 17
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: public ReadMvcViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id
  id: Id
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: ReadMvcViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 22
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As Integer
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId
  id: AttributeSetId
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: AttributeSetId
  nameWithType: ReadMvcViewModel.AttributeSetId
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeSetId
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 24
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("attributeSetid")]

      public int AttributeSetId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("attributeSetid")>

      Public Property AttributeSetId As Integer
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributeSetid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId
  id: ParentId
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: ParentId
  nameWithType: ReadMvcViewModel.ParentId
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentId
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("parentId")]

      public int ParentId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("parentId")>

      Public Property ParentId As Integer
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parentId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType
  id: ParentType
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: ParentType
  nameWithType: ReadMvcViewModel.ParentType
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentType
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 28
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("parentType")]

      public MixDatabaseParentType ParentType { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixDatabaseParentType
    content.vb: >-
      <JsonProperty("parentType")>

      Public Property ParentType As MixDatabaseParentType
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: parentType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description
  id: Description
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: ReadMvcViewModel.Description
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 30
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("description")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description")>

      Public Property Description As String
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image
  id: Image
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: ReadMvcViewModel.Image
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Image
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 32
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("image")]

      public string Image { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("image")>

      Public Property Image As String
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: image
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy
  id: CreatedBy
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: ReadMvcViewModel.CreatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 34
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("createdBy")]

      public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("createdBy")>

      Public Property CreatedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: ReadMvcViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 36
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("createdDateTime")]

      public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("createdDateTime")>

      Public Property CreatedDateTime As Date
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdDateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy
  id: ModifiedBy
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: ReadMvcViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModifiedBy
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 38
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("modifiedBy")]

      public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("modifiedBy")>

      Public Property ModifiedBy As String
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: modifiedBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified
  id: LastModified
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: ReadMvcViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 40
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("lastModified")]

      public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("lastModified")>

      Public Property LastModified As Date?
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority
  id: Priority
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: ReadMvcViewModel.Priority
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Priority
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 42
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("priority")]

      public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("priority")>

      Public Property Priority As Integer
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status
  id: Status
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: ReadMvcViewModel.Status
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Status
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 44
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: >-
      [JsonProperty("status")]

      public MixContentStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixContentStatus
    content.vb: >-
      <JsonProperty("status")>

      Public Property Status As MixContentStatus
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet
  commentId: P:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet
  id: AttributeSet
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: AttributeSet
  nameWithType: ReadMvcViewModel.AttributeSet
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeSet
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 49
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: public ReadMvcViewModel AttributeSet { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadMvcViewModel
    content.vb: Public Property AttributeSet As ReadMvcViewModel
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  langs:
  - csharp
  - vb
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: ReadMvcViewModel.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixRelatedAttributeSets/ReadMvcViewModel.cs
    startLine: 58
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  syntax:
    content: public override void ExpandView(MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Overrides Sub ExpandView(_context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overridden: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  overload: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  commentId: N:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  name: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  nameWithType: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  parent: Mix.Domain.Data.ViewModels
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel)
  name.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Repository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ModelRepository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ModelRepository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  name: ModelRepository
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ModelRepository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ModelRepository
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ModelRepository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ModelRepository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitModel
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ParseModel(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ParseModel(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ParseModel(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Validate(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Validate(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Validate(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  name: UpdateFieldsAsync(JObject)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.UpdateFieldsAsync(JObject)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).UpdateFieldsAsync(JObject)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.CloneAsync(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.CloneAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).CloneAsync(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).CloneAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.CloneSubModelsAsync(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).CloneSubModelsAsync(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).CloneSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveRelatedModelsAsync(ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveRelatedModelsAsync(ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveRelatedModelsAsync(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveModelAsync(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveModelAsync(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveSubModelsAsync(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveSubModelsAsync(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveSubModelsAsync(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitView(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(MixRelatedAttributeSet, Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.InitView(MixRelatedAttributeSet, Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.InitView(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).InitView(MixRelatedAttributeSet, Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).InitView(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ParseView(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ParseView(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ParseView(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ExpandView(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ExpandView(MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ExpandView(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Clone(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Clone(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Clone(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Clone(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Clone(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.CloneSubModels(MixRelatedAttributeSet, List<SupportedCulture>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.CloneSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).CloneSubModels(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).CloneSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(MixRelatedAttributeSet, List(Of SupportedCulture), MixCmsContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveRelatedModels(ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveRelatedModels(ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveRelatedModels(Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveModel(System.Boolean,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveModel(Boolean, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveModel(System.Boolean, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveSubModels(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveSubModels(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveSubModels(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitContext
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.InitContext
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.InitContext()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).InitContext()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).InitContext()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GetCachedKey(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GetCachedKey(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GetCachedKey(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GetCachedKey(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GetCachedKey(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetPropValue(System.Object,System.String)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GetPropValue(System.Object,System.String)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  name: GetPropValue(Object, String)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GetPropValue(Object, String)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GetPropValue(System.Object, System.String)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GetPropValue(Object, String)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GetPropValue(System.Object, System.String)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GenerateCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.GenerateCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GenerateCache(MixRelatedAttributeSet, ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GenerateCache(MixRelatedAttributeSet, ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GenerateCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GenerateCache(MixRelatedAttributeSet, ReadMvcViewModel, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GenerateCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.AddToCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Object,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.AddToCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,System.Object,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: AddToCache(MixRelatedAttributeSet, Object, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.AddToCache(MixRelatedAttributeSet, Object, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.AddToCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Object, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).AddToCache(MixRelatedAttributeSet, Object, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).AddToCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, System.Object, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.RemoveCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveCache(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveCache(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveCache(MixRelatedAttributeSet, MixCmsContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveCache(Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
    name: MixRelatedAttributeSet
    nameWithType: MixRelatedAttributeSet
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.IsCache
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.IsCache
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  name: IsCache
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.IsCache
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.IsCache
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).IsCache
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).IsCache
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Model
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Model
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.Errors
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}.IsValid
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Lib.Models.Cms.MixCmsContext,Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet,Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of MixCmsContext, MixRelatedAttributeSet, ReadMvcViewModel).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Lib.Models.Cms.MixCmsContext, Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet, Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel).IsValid
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels
  commentId: N:Mix.Domain.Data.ViewModels
  isExternal: true
  name: Mix.Domain.Data.ViewModels
  nameWithType: Mix.Domain.Data.ViewModels
  fullName: Mix.Domain.Data.ViewModels
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  isExternal: true
  name: ModelRepository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelRepository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelRepository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelRepository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelRepository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  isExternal: true
  name: UpdateFieldsAsync(JObject)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync(JObject)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync(JObject)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetCachedKey(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  isExternal: true
  name: GetPropValue(Object, String)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetPropValue(Object, String)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetPropValue(System.Object, System.String)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetPropValue(Object, String)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetPropValue(System.Object, System.String)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GenerateCache(TModel, TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GenerateCache(TModel, TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.AddToCache(TModel, System.Object, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).AddToCache(TModel, System.Object, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveCache(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveCache(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveCache(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveCache(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveCache(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  isExternal: true
  name: IsCache
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsCache
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsCache
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsCache
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsCache
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.#ctor
  name: ReadMvcViewModel
  nameWithType: ReadMvcViewModel.ReadMvcViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ReadMvcViewModel
- uid: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  commentId: T:Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
  parent: Mix.Cms.Lib.Models.Cms
  name: MixRelatedAttributeSet
  nameWithType: MixRelatedAttributeSet
  fullName: Mix.Cms.Lib.Models.Cms.MixRelatedAttributeSet
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id
  name: Id
  nameWithType: ReadMvcViewModel.Id
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId
  name: AttributeSetId
  nameWithType: ReadMvcViewModel.AttributeSetId
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSetId
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId
  name: ParentId
  nameWithType: ReadMvcViewModel.ParentId
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentId
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType
  name: ParentType
  nameWithType: ReadMvcViewModel.ParentType
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ParentType
- uid: Mix.Cms.Lib.Enums.MixDatabaseParentType
  commentId: T:Mix.Cms.Lib.Enums.MixDatabaseParentType
  parent: Mix.Cms.Lib.Enums
  name: MixDatabaseParentType
  nameWithType: MixDatabaseParentType
  fullName: Mix.Cms.Lib.Enums.MixDatabaseParentType
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description
  name: Description
  nameWithType: ReadMvcViewModel.Description
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Description
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image
  name: Image
  nameWithType: ReadMvcViewModel.Image
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Image
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy
  name: CreatedBy
  nameWithType: ReadMvcViewModel.CreatedBy
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedBy
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime
  name: CreatedDateTime
  nameWithType: ReadMvcViewModel.CreatedDateTime
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy
  name: ModifiedBy
  nameWithType: ReadMvcViewModel.ModifiedBy
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ModifiedBy
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified
  name: LastModified
  nameWithType: ReadMvcViewModel.LastModified
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.LastModified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority
  name: Priority
  nameWithType: ReadMvcViewModel.Priority
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Priority
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status
  name: Status
  nameWithType: ReadMvcViewModel.Status
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.Status
- uid: Mix.Cms.Lib.Enums.MixContentStatus
  commentId: T:Mix.Cms.Lib.Enums.MixContentStatus
  parent: Mix.Cms.Lib.Enums
  name: MixContentStatus
  nameWithType: MixContentStatus
  fullName: Mix.Cms.Lib.Enums.MixContentStatus
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet
  name: AttributeSet
  nameWithType: ReadMvcViewModel.AttributeSet
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.AttributeSet
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadMvcViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadMvcViewModel
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSets
  name: ReadMvcViewModel
  nameWithType: ReadMvcViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadMvcViewModel
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSets
  commentId: N:Mix.Cms.Lib.ViewModels.MixAttributeSets
  name: Mix.Cms.Lib.ViewModels.MixAttributeSets
  nameWithType: Mix.Cms.Lib.ViewModels.MixAttributeSets
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSets
- uid: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView
  name: ExpandView
  nameWithType: ReadMvcViewModel.ExpandView
  fullName: Mix.Cms.Lib.ViewModels.MixRelatedAttributeSets.ReadMvcViewModel.ExpandView
