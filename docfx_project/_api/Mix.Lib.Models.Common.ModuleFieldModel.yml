### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.Common.ModuleFieldModel
  commentId: T:Mix.Lib.Models.Common.ModuleFieldModel
  id: ModuleFieldModel
  parent: Mix.Lib.Models.Common
  children:
  - Mix.Lib.Models.Common.ModuleFieldModel.DataType
  - Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue
  - Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay
  - Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy
  - Mix.Lib.Models.Common.ModuleFieldModel.IsRequired
  - Mix.Lib.Models.Common.ModuleFieldModel.IsSelect
  - Mix.Lib.Models.Common.ModuleFieldModel.IsUnique
  - Mix.Lib.Models.Common.ModuleFieldModel.Name
  - Mix.Lib.Models.Common.ModuleFieldModel.Options
  - Mix.Lib.Models.Common.ModuleFieldModel.Priority
  - Mix.Lib.Models.Common.ModuleFieldModel.Title
  - Mix.Lib.Models.Common.ModuleFieldModel.Width
  langs:
  - csharp
  - vb
  name: ModuleFieldModel
  nameWithType: ModuleFieldModel
  fullName: Mix.Lib.Models.Common.ModuleFieldModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleFieldModel
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public class ModuleFieldModel
    content.vb: Public Class ModuleFieldModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Name
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.Name
  id: Name
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: ModuleFieldModel.Name
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Name
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Lib.Models.Common.ModuleFieldModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Title
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.Title
  id: Title
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: ModuleFieldModel.Title
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Title
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Lib.Models.Common.ModuleFieldModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue
  id: DefaultValue
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: ModuleFieldModel.DefaultValue
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DefaultValue
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string DefaultValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultValue As String
  overload: Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Options
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.Options
  id: Options
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ModuleFieldModel.Options
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Options
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Options
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public JArray Options { get; set; }
    parameters: []
    return:
      type: JArray
    content.vb: Public Property Options As JArray
  overload: Mix.Lib.Models.Common.ModuleFieldModel.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Priority
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.Priority
  id: Priority
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: ModuleFieldModel.Priority
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Priority
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Priority
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Mix.Lib.Models.Common.ModuleFieldModel.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.DataType
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.DataType
  id: DataType
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: ModuleFieldModel.DataType
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.DataType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataType
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public MixDataType DataType { get; set; }
    parameters: []
    return:
      type: MixDataType
    content.vb: Public Property DataType As MixDataType
  overload: Mix.Lib.Models.Common.ModuleFieldModel.DataType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsUnique
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.IsUnique
  id: IsUnique
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: IsUnique
  nameWithType: ModuleFieldModel.IsUnique
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsUnique
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsUnique
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public bool IsUnique { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUnique As Boolean
  overload: Mix.Lib.Models.Common.ModuleFieldModel.IsUnique*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsRequired
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.IsRequired
  id: IsRequired
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: IsRequired
  nameWithType: ModuleFieldModel.IsRequired
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsRequired
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsRequired
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public bool IsRequired { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRequired As Boolean
  overload: Mix.Lib.Models.Common.ModuleFieldModel.IsRequired*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay
  id: IsDisplay
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: IsDisplay
  nameWithType: ModuleFieldModel.IsDisplay
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsDisplay
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public bool IsDisplay { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDisplay As Boolean
  overload: Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsSelect
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.IsSelect
  id: IsSelect
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: IsSelect
  nameWithType: ModuleFieldModel.IsSelect
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsSelect
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsSelect
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 22
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public bool IsSelect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSelect As Boolean
  overload: Mix.Lib.Models.Common.ModuleFieldModel.IsSelect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy
  id: IsGroupBy
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: IsGroupBy
  nameWithType: ModuleFieldModel.IsGroupBy
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsGroupBy
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public bool IsGroupBy { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsGroupBy As Boolean
  overload: Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Width
  commentId: P:Mix.Lib.Models.Common.ModuleFieldModel.Width
  id: Width
  parent: Mix.Lib.Models.Common.ModuleFieldModel
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: ModuleFieldModel.Width
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Width
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/ModuleFieldModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Width
    path: ../../mix.core/src/platform/mix.library/Models/Common/ModuleFieldModel.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public int Width { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Width As Integer
  overload: Mix.Lib.Models.Common.ModuleFieldModel.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Models.Common
  commentId: N:Mix.Lib.Models.Common
  name: Mix.Lib.Models.Common
  nameWithType: Mix.Lib.Models.Common
  fullName: Mix.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Name*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.Name
  name: Name
  nameWithType: ModuleFieldModel.Name
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Title*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.Title
  name: Title
  nameWithType: ModuleFieldModel.Title
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Title
- uid: Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue
  name: DefaultValue
  nameWithType: ModuleFieldModel.DefaultValue
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.DefaultValue
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Options*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.Options
  name: Options
  nameWithType: ModuleFieldModel.Options
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Options
- uid: JArray
  commentId: '!:JArray'
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: JArray
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Priority*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.Priority
  name: Priority
  nameWithType: ModuleFieldModel.Priority
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.Models.Common.ModuleFieldModel.DataType*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.DataType
  name: DataType
  nameWithType: ModuleFieldModel.DataType
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.DataType
- uid: MixDataType
  isExternal: true
  name: MixDataType
  nameWithType: MixDataType
  fullName: MixDataType
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsUnique*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.IsUnique
  name: IsUnique
  nameWithType: ModuleFieldModel.IsUnique
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsUnique
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsRequired*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.IsRequired
  name: IsRequired
  nameWithType: ModuleFieldModel.IsRequired
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsRequired
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay
  name: IsDisplay
  nameWithType: ModuleFieldModel.IsDisplay
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsDisplay
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsSelect*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.IsSelect
  name: IsSelect
  nameWithType: ModuleFieldModel.IsSelect
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsSelect
- uid: Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy
  name: IsGroupBy
  nameWithType: ModuleFieldModel.IsGroupBy
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.IsGroupBy
- uid: Mix.Lib.Models.Common.ModuleFieldModel.Width*
  commentId: Overload:Mix.Lib.Models.Common.ModuleFieldModel.Width
  name: Width
  nameWithType: ModuleFieldModel.Width
  fullName: Mix.Lib.Models.Common.ModuleFieldModel.Width
