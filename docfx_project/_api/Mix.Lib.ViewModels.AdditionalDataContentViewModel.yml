### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  commentId: T:Mix.Lib.ViewModels.AdditionalDataContentViewModel
  id: AdditionalDataContentViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor(MixDataContent,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property``1(System.String)
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync(MixDataContent)
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync
  - Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values
  langs:
  - csharp
  - vb
  name: AdditionalDataContentViewModel
  nameWithType: AdditionalDataContentViewModel
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AdditionalDataContentViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class AdditionalDataContentViewModel : HaveParentContentViewModelBase<MixCmsContext, MixDataContent, Guid, AdditionalDataContentViewModel>'
    content.vb: >-
      Public Class AdditionalDataContentViewModel
          Inherits HaveParentContentViewModelBase(Of MixCmsContext, MixDataContent, Guid, AdditionalDataContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: AdditionalDataContentViewModel()
  nameWithType: AdditionalDataContentViewModel.AdditionalDataContentViewModel()
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.AdditionalDataContentViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 7
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public AdditionalDataContentViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: AdditionalDataContentViewModel(UnitOfWorkInfo)
  nameWithType: AdditionalDataContentViewModel.AdditionalDataContentViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.AdditionalDataContentViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public AdditionalDataContentViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor(MixDataContent,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor(MixDataContent,UnitOfWorkInfo)
  id: '#ctor(MixDataContent,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: AdditionalDataContentViewModel(MixDataContent, UnitOfWorkInfo)
  nameWithType: AdditionalDataContentViewModel.AdditionalDataContentViewModel(MixDataContent, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.AdditionalDataContentViewModel(MixDataContent, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public AdditionalDataContentViewModel(MixDataContent entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixDataContent
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixDataContent, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId
  id: MixDatabaseId
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseId
  nameWithType: AdditionalDataContentViewModel.MixDatabaseId
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseId
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixDatabaseId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseId As Integer
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: AdditionalDataContentViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 25
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns
  id: Columns
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: AdditionalDataContentViewModel.Columns
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Columns
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDatabaseColumnViewModel> Columns { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.ViewModels.MixDatabaseColumnViewModel}
    content.vb: Public Property Columns As List(Of MixDatabaseColumnViewModel)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values
  id: Values
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: Values
  nameWithType: AdditionalDataContentViewModel.Values
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Values
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 27
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDataContentValueViewModel> Values { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.ViewModels.MixDataContentValueViewModel}
    content.vb: Public Property Values As List(Of MixDataContentValueViewModel)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data
  id: Data
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: AdditionalDataContentViewModel.Data
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public JObject Data { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property Data As JObject
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData
  id: ChildData
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: ChildData
  nameWithType: AdditionalDataContentViewModel.ChildData
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ChildData
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<AdditionalDataContentViewModel> ChildData { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.ViewModels.AdditionalDataContentViewModel}
    content.vb: Public Property ChildData As List(Of AdditionalDataContentViewModel)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData
  id: RelatedData
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: RelatedData
  nameWithType: AdditionalDataContentViewModel.RelatedData
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RelatedData
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 31
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDataContentAssociationViewModel> RelatedData { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.ViewModels.MixDataContentAssociationViewModel}
    content.vb: Public Property RelatedData As List(Of MixDataContentAssociationViewModel)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId
  id: GuidParentId
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: GuidParentId
  nameWithType: AdditionalDataContentViewModel.GuidParentId
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GuidParentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 33
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid? GuidParentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public Property GuidParentId As Guid?
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId
  id: IntParentId
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: IntParentId
  nameWithType: AdditionalDataContentViewModel.IntParentId
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IntParentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 34
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int? IntParentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IntParentId As Integer?
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType
  commentId: P:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType
  id: ParentType
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: ParentType
  nameWithType: AdditionalDataContentViewModel.ParentType
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentType
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 35
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixDatabaseParentType ParentType { get; set; }
    parameters: []
    return:
      type: MixDatabaseParentType
    content.vb: Public Property ParentType As MixDatabaseParentType
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView
  id: ExpandView
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: AdditionalDataContentViewModel.ExpandView()
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 40
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: AdditionalDataContentViewModel.ParseEntity()
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 52
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<MixDataContent> ParseEntity()
    return:
      type: Task{MixDataContent}
    content.vb: Public Overrides Function ParseEntity As Task(Of MixDataContent)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync
  id: SaveHandlerAsync
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: SaveHandlerAsync()
  nameWithType: AdditionalDataContentViewModel.SaveHandlerAsync()
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveHandlerAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 74
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: protected override Task<MixDataContent> SaveHandlerAsync()
    return:
      type: Task{MixDataContent}
    content.vb: Protected Overrides Function SaveHandlerAsync As Task(Of MixDataContent)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync(MixDataContent)
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync(MixDataContent)
  id: SaveEntityRelationshipAsync(MixDataContent)
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: SaveEntityRelationshipAsync(MixDataContent)
  nameWithType: AdditionalDataContentViewModel.SaveEntityRelationshipAsync(MixDataContent)
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync(MixDataContent)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveEntityRelationshipAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 118
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: protected override Task SaveEntityRelationshipAsync(MixDataContent parentEntity)
    parameters:
    - id: parentEntity
      type: MixDataContent
    return:
      type: Task
    content.vb: Protected Overrides Function SaveEntityRelationshipAsync(parentEntity As MixDataContent) As Task
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync
  id: CreateParentAsync
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: CreateParentAsync()
  nameWithType: AdditionalDataContentViewModel.CreateParentAsync()
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreateParentAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 136
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<Guid> CreateParentAsync()
    return:
      type: Task{Guid}
    content.vb: Public Overrides Function CreateParentAsync As Task(Of Guid)
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property``1(System.String)
  commentId: M:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property``1(System.String)
  id: Property``1(System.String)
  parent: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  langs:
  - csharp
  - vb
  name: Property<T>(String)
  nameWithType: AdditionalDataContentViewModel.Property<T>(String)
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property<T>(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/platform/mix.library/ViewModels/AdditionalDataContentViewModel.cs
    startLine: 154
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public T Property<T>(string propertyName)
    parameters:
    - id: propertyName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Property(Of T)(propertyName As String) As T
  overload: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property*
  nameWithType.vb: AdditionalDataContentViewModel.Property(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property(Of T)(System.String)
  name.vb: Property(Of T)(String)
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.#ctor
  name: AdditionalDataContentViewModel
  nameWithType: AdditionalDataContentViewModel.AdditionalDataContentViewModel
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.AdditionalDataContentViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: MixDataContent
  isExternal: true
  name: MixDataContent
  nameWithType: MixDataContent
  fullName: MixDataContent
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId
  name: MixDatabaseId
  nameWithType: AdditionalDataContentViewModel.MixDatabaseId
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName
  name: MixDatabaseName
  nameWithType: AdditionalDataContentViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.MixDatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns
  name: Columns
  nameWithType: AdditionalDataContentViewModel.Columns
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Columns
- uid: List{Mix.Lib.ViewModels.MixDatabaseColumnViewModel}
  commentId: '!:List{Mix.Lib.ViewModels.MixDatabaseColumnViewModel}'
  definition: List`1
  name: List<MixDatabaseColumnViewModel>
  nameWithType: List<MixDatabaseColumnViewModel>
  fullName: List<Mix.Lib.ViewModels.MixDatabaseColumnViewModel>
  nameWithType.vb: List(Of MixDatabaseColumnViewModel)
  fullName.vb: List(Of Mix.Lib.ViewModels.MixDatabaseColumnViewModel)
  name.vb: List(Of MixDatabaseColumnViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
    name: MixDatabaseColumnViewModel
    nameWithType: MixDatabaseColumnViewModel
    fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
    name: MixDatabaseColumnViewModel
    nameWithType: MixDatabaseColumnViewModel
    fullName: Mix.Lib.ViewModels.MixDatabaseColumnViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values
  name: Values
  nameWithType: AdditionalDataContentViewModel.Values
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Values
- uid: List{Mix.Lib.ViewModels.MixDataContentValueViewModel}
  commentId: '!:List{Mix.Lib.ViewModels.MixDataContentValueViewModel}'
  definition: List`1
  name: List<MixDataContentValueViewModel>
  nameWithType: List<MixDataContentValueViewModel>
  fullName: List<Mix.Lib.ViewModels.MixDataContentValueViewModel>
  nameWithType.vb: List(Of MixDataContentValueViewModel)
  fullName.vb: List(Of Mix.Lib.ViewModels.MixDataContentValueViewModel)
  name.vb: List(Of MixDataContentValueViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixDataContentValueViewModel
    name: MixDataContentValueViewModel
    nameWithType: MixDataContentValueViewModel
    fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixDataContentValueViewModel
    name: MixDataContentValueViewModel
    nameWithType: MixDataContentValueViewModel
    fullName: Mix.Lib.ViewModels.MixDataContentValueViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data
  name: Data
  nameWithType: AdditionalDataContentViewModel.Data
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Data
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData
  name: ChildData
  nameWithType: AdditionalDataContentViewModel.ChildData
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ChildData
- uid: List{Mix.Lib.ViewModels.AdditionalDataContentViewModel}
  commentId: '!:List{Mix.Lib.ViewModels.AdditionalDataContentViewModel}'
  definition: List`1
  name: List<AdditionalDataContentViewModel>
  nameWithType: List<AdditionalDataContentViewModel>
  fullName: List<Mix.Lib.ViewModels.AdditionalDataContentViewModel>
  nameWithType.vb: List(Of AdditionalDataContentViewModel)
  fullName.vb: List(Of Mix.Lib.ViewModels.AdditionalDataContentViewModel)
  name.vb: List(Of AdditionalDataContentViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel
    name: AdditionalDataContentViewModel
    nameWithType: AdditionalDataContentViewModel
    fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel
    name: AdditionalDataContentViewModel
    nameWithType: AdditionalDataContentViewModel
    fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData
  name: RelatedData
  nameWithType: AdditionalDataContentViewModel.RelatedData
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.RelatedData
- uid: List{Mix.Lib.ViewModels.MixDataContentAssociationViewModel}
  commentId: '!:List{Mix.Lib.ViewModels.MixDataContentAssociationViewModel}'
  definition: List`1
  name: List<MixDataContentAssociationViewModel>
  nameWithType: List<MixDataContentAssociationViewModel>
  fullName: List<Mix.Lib.ViewModels.MixDataContentAssociationViewModel>
  nameWithType.vb: List(Of MixDataContentAssociationViewModel)
  fullName.vb: List(Of Mix.Lib.ViewModels.MixDataContentAssociationViewModel)
  name.vb: List(Of MixDataContentAssociationViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixDataContentAssociationViewModel
    name: MixDataContentAssociationViewModel
    nameWithType: MixDataContentAssociationViewModel
    fullName: Mix.Lib.ViewModels.MixDataContentAssociationViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixDataContentAssociationViewModel
    name: MixDataContentAssociationViewModel
    nameWithType: MixDataContentAssociationViewModel
    fullName: Mix.Lib.ViewModels.MixDataContentAssociationViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId
  name: GuidParentId
  nameWithType: AdditionalDataContentViewModel.GuidParentId
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.GuidParentId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId
  name: IntParentId
  nameWithType: AdditionalDataContentViewModel.IntParentId
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.IntParentId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType
  name: ParentType
  nameWithType: AdditionalDataContentViewModel.ParentType
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParentType
- uid: MixDatabaseParentType
  isExternal: true
  name: MixDatabaseParentType
  nameWithType: MixDatabaseParentType
  fullName: MixDatabaseParentType
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView
  name: ExpandView
  nameWithType: AdditionalDataContentViewModel.ExpandView
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity
  name: ParseEntity
  nameWithType: AdditionalDataContentViewModel.ParseEntity
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.ParseEntity
- uid: Task{MixDataContent}
  commentId: '!:Task{MixDataContent}'
  definition: Task`1
  name: Task<MixDataContent>
  nameWithType: Task<MixDataContent>
  fullName: Task<MixDataContent>
  nameWithType.vb: Task(Of MixDataContent)
  fullName.vb: Task(Of MixDataContent)
  name.vb: Task(Of MixDataContent)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDataContent
    name: MixDataContent
    nameWithType: MixDataContent
    fullName: MixDataContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDataContent
    name: MixDataContent
    nameWithType: MixDataContent
    fullName: MixDataContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync
  name: SaveHandlerAsync
  nameWithType: AdditionalDataContentViewModel.SaveHandlerAsync
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveHandlerAsync
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync
  name: SaveEntityRelationshipAsync
  nameWithType: AdditionalDataContentViewModel.SaveEntityRelationshipAsync
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.SaveEntityRelationshipAsync
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync
  name: CreateParentAsync
  nameWithType: AdditionalDataContentViewModel.CreateParentAsync
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.CreateParentAsync
- uid: Task{Guid}
  commentId: '!:Task{Guid}'
  definition: Task`1
  name: Task<Guid>
  nameWithType: Task<Guid>
  fullName: Task<Guid>
  nameWithType.vb: Task(Of Guid)
  fullName.vb: Task(Of Guid)
  name.vb: Task(Of Guid)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property*
  commentId: Overload:Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property
  name: Property
  nameWithType: AdditionalDataContentViewModel.Property
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel.Property
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
