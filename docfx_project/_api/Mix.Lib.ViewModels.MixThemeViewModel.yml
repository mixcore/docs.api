### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixThemeViewModel
  commentId: T:Mix.Lib.ViewModels.MixThemeViewModel
  id: MixThemeViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixThemeViewModel.#ctor
  - Mix.Lib.ViewModels.MixThemeViewModel.#ctor(MixTheme,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixThemeViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder
  - Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName
  - Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId
  - Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity
  - Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl
  - Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync(MixTheme)
  - Mix.Lib.ViewModels.MixThemeViewModel.SystemName
  - Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder
  - Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder
  langs:
  - csharp
  - vb
  name: MixThemeViewModel
  nameWithType: MixThemeViewModel
  fullName: Mix.Lib.ViewModels.MixThemeViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixThemeViewModel : TenantDataViewModelBase<MixCmsContext, MixTheme, int, MixThemeViewModel>'
    content.vb: >-
      Public Class MixThemeViewModel
          Inherits TenantDataViewModelBase(Of MixCmsContext, MixTheme, Integer, MixThemeViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixThemeViewModel.SystemName
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.SystemName
  id: SystemName
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MixThemeViewModel.SystemName
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.SystemName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 7
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Lib.ViewModels.MixThemeViewModel.SystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl
  id: PreviewUrl
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: PreviewUrl
  nameWithType: MixThemeViewModel.PreviewUrl
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PreviewUrl
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string PreviewUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PreviewUrl As String
  overload: Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: MixThemeViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId
  id: MixDataContentId
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: MixDataContentId
  nameWithType: MixThemeViewModel.MixDataContentId
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDataContentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid? MixDataContentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public Property MixDataContentId As Guid?
  overload: Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder
  id: AssetFolder
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: AssetFolder
  nameWithType: MixThemeViewModel.AssetFolder
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AssetFolder
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string AssetFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property AssetFolder As String
  overload: Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder
  id: UploadsFolder
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: UploadsFolder
  nameWithType: MixThemeViewModel.UploadsFolder
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UploadsFolder
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string UploadsFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UploadsFolder As String
  overload: Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder
  commentId: P:Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder
  id: TemplateFolder
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: TemplateFolder
  nameWithType: MixThemeViewModel.TemplateFolder
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateFolder
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string TemplateFolder { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property TemplateFolder As String
  overload: Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.ViewModels.MixThemeViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixThemeViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: MixThemeViewModel()
  nameWithType: MixThemeViewModel.MixThemeViewModel()
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixThemeViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 39
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixThemeViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixThemeViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.#ctor(MixTheme,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixThemeViewModel.#ctor(MixTheme,UnitOfWorkInfo)
  id: '#ctor(MixTheme,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: MixThemeViewModel(MixTheme, UnitOfWorkInfo)
  nameWithType: MixThemeViewModel.MixThemeViewModel(MixTheme, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixThemeViewModel(MixTheme, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 43
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixThemeViewModel(MixTheme entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixTheme
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixTheme, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixThemeViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixThemeViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: MixThemeViewModel(UnitOfWorkInfo)
  nameWithType: MixThemeViewModel.MixThemeViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixThemeViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 50
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixThemeViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixThemeViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity
  commentId: M:Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: MixThemeViewModel.ParseEntity()
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 58
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<MixTheme> ParseEntity()
    return:
      type: Task{MixTheme}
    content.vb: Public Overrides Function ParseEntity As Task(Of MixTheme)
  overload: Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync(MixTheme)
  commentId: M:Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync(MixTheme)
  id: SaveEntityRelationshipAsync(MixTheme)
  parent: Mix.Lib.ViewModels.MixThemeViewModel
  langs:
  - csharp
  - vb
  name: SaveEntityRelationshipAsync(MixTheme)
  nameWithType: MixThemeViewModel.SaveEntityRelationshipAsync(MixTheme)
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync(MixTheme)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixThemeViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveEntityRelationshipAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixThemeViewModel.cs
    startLine: 67
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: protected override Task SaveEntityRelationshipAsync(MixTheme parentEntity)
    parameters:
    - id: parentEntity
      type: MixTheme
    return:
      type: Task
    content.vb: Protected Overrides Function SaveEntityRelationshipAsync(parentEntity As MixTheme) As Task
  overload: Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixThemeViewModel.SystemName*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.SystemName
  name: SystemName
  nameWithType: MixThemeViewModel.SystemName
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.SystemName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl
  name: PreviewUrl
  nameWithType: MixThemeViewModel.PreviewUrl
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.PreviewUrl
- uid: Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName
  name: MixDatabaseName
  nameWithType: MixThemeViewModel.MixDatabaseName
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixDatabaseName
- uid: Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId
  name: MixDataContentId
  nameWithType: MixThemeViewModel.MixDataContentId
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixDataContentId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder
  name: AssetFolder
  nameWithType: MixThemeViewModel.AssetFolder
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.AssetFolder
- uid: Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder
  name: UploadsFolder
  nameWithType: MixThemeViewModel.UploadsFolder
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.UploadsFolder
- uid: Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder
  name: TemplateFolder
  nameWithType: MixThemeViewModel.TemplateFolder
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.TemplateFolder
- uid: Mix.Lib.ViewModels.MixThemeViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.#ctor
  name: MixThemeViewModel
  nameWithType: MixThemeViewModel.MixThemeViewModel
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.MixThemeViewModel
- uid: MixTheme
  isExternal: true
  name: MixTheme
  nameWithType: MixTheme
  fullName: MixTheme
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity
  name: ParseEntity
  nameWithType: MixThemeViewModel.ParseEntity
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.ParseEntity
- uid: Task{MixTheme}
  commentId: '!:Task{MixTheme}'
  definition: Task`1
  name: Task<MixTheme>
  nameWithType: Task<MixTheme>
  fullName: Task<MixTheme>
  nameWithType.vb: Task(Of MixTheme)
  fullName.vb: Task(Of MixTheme)
  name.vb: Task(Of MixTheme)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync
  name: SaveEntityRelationshipAsync
  nameWithType: MixThemeViewModel.SaveEntityRelationshipAsync
  fullName: Mix.Lib.ViewModels.MixThemeViewModel.SaveEntityRelationshipAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
