### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.TemplateViewModel
  id: TemplateViewModel
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.Content
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts
  - Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles
  langs:
  - csharp
  - vb
  name: TemplateViewModel
  nameWithType: TemplateViewModel
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateViewModel
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 133
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public class TemplateViewModel
    content.vb: Public Class TemplateViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder
  id: FileFolder
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: FileFolder
  nameWithType: TemplateViewModel.FileFolder
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileFolder
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 135
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string FileFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileFolder As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename
  id: Filename
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: TemplateViewModel.Filename
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Filename
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 137
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [Required]

      public string Filename { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Filename As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension
  id: Extension
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: TemplateViewModel.Extension
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Extension
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 140
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Extension { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Extension As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Content
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.Content
  id: Content
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: TemplateViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Content
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 141
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts
  id: Scripts
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Scripts
  nameWithType: TemplateViewModel.Scripts
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Scripts
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 142
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Scripts { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scripts As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles
  id: Styles
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Styles
  nameWithType: TemplateViewModel.Styles
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Styles
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 143
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string Styles { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Styles As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream
  commentId: P:Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream
  id: FileStream
  parent: Mix.Cms.Lib.ViewModels.TemplateViewModel
  langs:
  - csharp
  - vb
  name: FileStream
  nameWithType: TemplateViewModel.FileStream
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileStream
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 144
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public string FileStream { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileStream As String
  overload: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder
  name: FileFolder
  nameWithType: TemplateViewModel.FileFolder
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename
  name: Filename
  nameWithType: TemplateViewModel.Filename
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Filename
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension
  name: Extension
  nameWithType: TemplateViewModel.Extension
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Extension
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Content*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.Content
  name: Content
  nameWithType: TemplateViewModel.Content
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Content
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts
  name: Scripts
  nameWithType: TemplateViewModel.Scripts
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Scripts
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles
  name: Styles
  nameWithType: TemplateViewModel.Styles
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.Styles
- uid: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream*
  commentId: Overload:Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream
  name: FileStream
  nameWithType: TemplateViewModel.FileStream
  fullName: Mix.Cms.Lib.ViewModels.TemplateViewModel.FileStream
