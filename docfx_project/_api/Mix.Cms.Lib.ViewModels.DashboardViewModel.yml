### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.DashboardViewModel
  id: DashboardViewModel
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.DashboardViewModel.#ctor(System.String)
  - Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule
  - Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage
  - Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost
  - Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct
  - Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser
  langs:
  - csharp
  - vb
  name: DashboardViewModel
  nameWithType: DashboardViewModel
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DashboardViewModel
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 6
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public class DashboardViewModel
    content.vb: Public Class DashboardViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage
  commentId: P:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage
  id: TotalPage
  parent: Mix.Cms.Lib.ViewModels.DashboardViewModel
  langs:
  - csharp
  - vb
  name: TotalPage
  nameWithType: DashboardViewModel.TotalPage
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TotalPage
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 8
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("totalPage")]

      public int TotalPage { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("totalPage")>

      Public Property TotalPage As Integer
  overload: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalPage
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost
  commentId: P:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost
  id: TotalPost
  parent: Mix.Cms.Lib.ViewModels.DashboardViewModel
  langs:
  - csharp
  - vb
  name: TotalPost
  nameWithType: DashboardViewModel.TotalPost
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TotalPost
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("totalPost")]

      public int TotalPost { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("totalPost")>

      Public Property TotalPost As Integer
  overload: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalPost
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct
  commentId: P:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct
  id: TotalProduct
  parent: Mix.Cms.Lib.ViewModels.DashboardViewModel
  langs:
  - csharp
  - vb
  name: TotalProduct
  nameWithType: DashboardViewModel.TotalProduct
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TotalProduct
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 14
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("totalProduct")]

      public int TotalProduct { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("totalProduct")>

      Public Property TotalProduct As Integer
  overload: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalProduct
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule
  commentId: P:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule
  id: TotalModule
  parent: Mix.Cms.Lib.ViewModels.DashboardViewModel
  langs:
  - csharp
  - vb
  name: TotalModule
  nameWithType: DashboardViewModel.TotalModule
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TotalModule
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 17
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("totalModule")]

      public int TotalModule { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("totalModule")>

      Public Property TotalModule As Integer
  overload: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalModule
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser
  commentId: P:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser
  id: TotalUser
  parent: Mix.Cms.Lib.ViewModels.DashboardViewModel
  langs:
  - csharp
  - vb
  name: TotalUser
  nameWithType: DashboardViewModel.TotalUser
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TotalUser
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 20
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("totalUser")]

      public int TotalUser { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("totalUser")>

      Public Property TotalUser As Integer
  overload: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalUser
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.#ctor(System.String)
  commentId: M:Mix.Cms.Lib.ViewModels.DashboardViewModel.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Mix.Cms.Lib.ViewModels.DashboardViewModel
  langs:
  - csharp
  - vb
  name: DashboardViewModel(String)
  nameWithType: DashboardViewModel.DashboardViewModel(String)
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.DashboardViewModel(System.String)
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/DashboardViewModel.cs
    startLine: 23
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public DashboardViewModel(string culture)
    parameters:
    - id: culture
      type: System.String
    content.vb: Public Sub New(culture As String)
  overload: Mix.Cms.Lib.ViewModels.DashboardViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage*
  commentId: Overload:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage
  name: TotalPage
  nameWithType: DashboardViewModel.TotalPage
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPage
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost*
  commentId: Overload:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost
  name: TotalPost
  nameWithType: DashboardViewModel.TotalPost
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalPost
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct*
  commentId: Overload:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct
  name: TotalProduct
  nameWithType: DashboardViewModel.TotalProduct
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalProduct
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule*
  commentId: Overload:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule
  name: TotalModule
  nameWithType: DashboardViewModel.TotalModule
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalModule
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser*
  commentId: Overload:Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser
  name: TotalUser
  nameWithType: DashboardViewModel.TotalUser
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.TotalUser
- uid: Mix.Cms.Lib.ViewModels.DashboardViewModel.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.DashboardViewModel.#ctor
  name: DashboardViewModel
  nameWithType: DashboardViewModel.DashboardViewModel
  fullName: Mix.Cms.Lib.ViewModels.DashboardViewModel.DashboardViewModel
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
