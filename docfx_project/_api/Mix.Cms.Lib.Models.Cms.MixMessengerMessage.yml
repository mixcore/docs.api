### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  commentId: T:Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  id: MixMessengerMessage
  parent: Mix.Cms.Lib.Models.Cms
  children:
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User
  - Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId
  langs:
  - csharp
  - vb
  name: MixMessengerMessage
  nameWithType: MixMessengerMessage
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixMessengerMessage
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 5
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public class MixMessengerMessage
    content.vb: Public Class MixMessengerMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MixMessengerMessage.Id
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 7
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: System.Guid
    content.vb: Public Property Id As Guid
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content
  id: Content
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MixMessengerMessage.Content
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 8
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate
  id: CreatedDate
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: MixMessengerMessage.CreatedDate
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDate
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 9
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDate As Date
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId
  id: RoomId
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: RoomId
  nameWithType: MixMessengerMessage.RoomId
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RoomId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 10
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public Guid? RoomId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Guid}
    content.vb: Public Property RoomId As Guid?
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId
  id: TeamId
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: TeamId
  nameWithType: MixMessengerMessage.TeamId
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TeamId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int? TeamId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TeamId As Integer?
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId
  id: UserId
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: MixMessengerMessage.UserId
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 12
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserId As String
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room
  id: Room
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: MixMessengerMessage.Room
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Room
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 14
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual MixMessengerHubRoom Room { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Cms.MixMessengerHubRoom
    content.vb: Public Overridable Property Room As MixMessengerHubRoom
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team
  id: Team
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: Team
  nameWithType: MixMessengerMessage.Team
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Team
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 15
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual MixMessengerTeam Team { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Cms.MixMessengerTeam
    content.vb: Public Overridable Property Team As MixMessengerTeam
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User
  commentId: P:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User
  id: User
  parent: Mix.Cms.Lib.Models.Cms.MixMessengerMessage
  langs:
  - csharp
  - vb
  name: User
  nameWithType: MixMessengerMessage.User
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: User
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixMessengerMessage.cs
    startLine: 16
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual MixMessengerUser User { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Cms.MixMessengerUser
    content.vb: Public Overridable Property User As MixMessengerUser
  overload: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id
  name: Id
  nameWithType: MixMessengerMessage.Id
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Id
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content
  name: Content
  nameWithType: MixMessengerMessage.Content
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Content
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate
  name: CreatedDate
  nameWithType: MixMessengerMessage.CreatedDate
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId
  name: RoomId
  nameWithType: MixMessengerMessage.RoomId
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.RoomId
- uid: System.Nullable{System.Guid}
  commentId: T:System.Nullable{System.Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<System.Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of System.Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId
  name: TeamId
  nameWithType: MixMessengerMessage.TeamId
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.TeamId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId
  name: UserId
  nameWithType: MixMessengerMessage.UserId
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.UserId
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room
  name: Room
  nameWithType: MixMessengerMessage.Room
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Room
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerHubRoom
  commentId: T:Mix.Cms.Lib.Models.Cms.MixMessengerHubRoom
  parent: Mix.Cms.Lib.Models.Cms
  name: MixMessengerHubRoom
  nameWithType: MixMessengerHubRoom
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerHubRoom
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team
  name: Team
  nameWithType: MixMessengerMessage.Team
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.Team
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerTeam
  commentId: T:Mix.Cms.Lib.Models.Cms.MixMessengerTeam
  parent: Mix.Cms.Lib.Models.Cms
  name: MixMessengerTeam
  nameWithType: MixMessengerTeam
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerTeam
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User
  name: User
  nameWithType: MixMessengerMessage.User
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerMessage.User
- uid: Mix.Cms.Lib.Models.Cms.MixMessengerUser
  commentId: T:Mix.Cms.Lib.Models.Cms.MixMessengerUser
  parent: Mix.Cms.Lib.Models.Cms
  name: MixMessengerUser
  nameWithType: MixMessengerUser
  fullName: Mix.Cms.Lib.Models.Cms.MixMessengerUser
