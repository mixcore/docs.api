### YamlMime:ManagedReference
items:
- uid: Mix.SignalR.Models.SignalRMessageModel
  commentId: T:Mix.SignalR.Models.SignalRMessageModel
  id: SignalRMessageModel
  parent: Mix.SignalR.Models
  children:
  - Mix.SignalR.Models.SignalRMessageModel.#ctor
  - Mix.SignalR.Models.SignalRMessageModel.#ctor(System.Object)
  - Mix.SignalR.Models.SignalRMessageModel.Action
  - Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime
  - Mix.SignalR.Models.SignalRMessageModel.Data
  - Mix.SignalR.Models.SignalRMessageModel.From
  - Mix.SignalR.Models.SignalRMessageModel.Message
  - Mix.SignalR.Models.SignalRMessageModel.Title
  - Mix.SignalR.Models.SignalRMessageModel.ToString
  - Mix.SignalR.Models.SignalRMessageModel.Type
  langs:
  - csharp
  - vb
  name: SignalRMessageModel
  nameWithType: SignalRMessageModel
  fullName: Mix.SignalR.Models.SignalRMessageModel
  type: Class
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SignalRMessageModel
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 7
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public class SignalRMessageModel
    content.vb: Public Class SignalRMessageModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.SignalR.Models.SignalRMessageModel.#ctor
  commentId: M:Mix.SignalR.Models.SignalRMessageModel.#ctor
  id: '#ctor'
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: SignalRMessageModel()
  nameWithType: SignalRMessageModel.SignalRMessageModel()
  fullName: Mix.SignalR.Models.SignalRMessageModel.SignalRMessageModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 9
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public SignalRMessageModel()
    content.vb: Public Sub New
  overload: Mix.SignalR.Models.SignalRMessageModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.#ctor(System.Object)
  commentId: M:Mix.SignalR.Models.SignalRMessageModel.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: SignalRMessageModel(Object)
  nameWithType: SignalRMessageModel.SignalRMessageModel(Object)
  fullName: Mix.SignalR.Models.SignalRMessageModel.SignalRMessageModel(System.Object)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 12
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public SignalRMessageModel(object data)
    parameters:
    - id: data
      type: System.Object
    content.vb: Public Sub New(data As Object)
  overload: Mix.SignalR.Models.SignalRMessageModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.From
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.From
  id: From
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: From
  nameWithType: SignalRMessageModel.From
  fullName: Mix.SignalR.Models.SignalRMessageModel.From
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: From
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 16
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public HubUserModel From { get; set; }
    parameters: []
    return:
      type: Mix.SignalR.Models.HubUserModel
    content.vb: Public Property From As HubUserModel
  overload: Mix.SignalR.Models.SignalRMessageModel.From*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.Title
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.Title
  id: Title
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: SignalRMessageModel.Title
  fullName: Mix.SignalR.Models.SignalRMessageModel.Title
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 17
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.SignalR.Models.SignalRMessageModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.Message
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.Message
  id: Message
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: SignalRMessageModel.Message
  fullName: Mix.SignalR.Models.SignalRMessageModel.Message
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Message
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 18
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: Mix.SignalR.Models.SignalRMessageModel.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.Action
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.Action
  id: Action
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: SignalRMessageModel.Action
  fullName: Mix.SignalR.Models.SignalRMessageModel.Action
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Action
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 19
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public MessageAction Action { get; set; }
    parameters: []
    return:
      type: Mix.SignalR.Enums.MessageAction
    content.vb: Public Property Action As MessageAction
  overload: Mix.SignalR.Models.SignalRMessageModel.Action*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.Type
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.Type
  id: Type
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: SignalRMessageModel.Type
  fullName: Mix.SignalR.Models.SignalRMessageModel.Type
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 20
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public MessageType Type { get; set; }
    parameters: []
    return:
      type: Mix.SignalR.Enums.MessageType
    content.vb: Public Property Type As MessageType
  overload: Mix.SignalR.Models.SignalRMessageModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.Data
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.Data
  id: Data
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: SignalRMessageModel.Data
  fullName: Mix.SignalR.Models.SignalRMessageModel.Data
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 21
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public dynamic Data { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: Public Property Data As Object
  overload: Mix.SignalR.Models.SignalRMessageModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime
  commentId: P:Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: SignalRMessageModel.CreatedDateTime
  fullName: Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 22
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public DateTime CreatedDateTime { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property CreatedDateTime As Date
  overload: Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.SignalR.Models.SignalRMessageModel.ToString
  commentId: M:Mix.SignalR.Models.SignalRMessageModel.ToString
  id: ToString
  parent: Mix.SignalR.Models.SignalRMessageModel
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SignalRMessageModel.ToString()
  fullName: Mix.SignalR.Models.SignalRMessageModel.ToString()
  type: Method
  source:
    remote:
      path: src/platform/mix.signalr/Models/SignalRMessageModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ToString
    path: ../../mix.core/src/platform/mix.signalr/Models/SignalRMessageModel.cs
    startLine: 23
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Models
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Mix.SignalR.Models.SignalRMessageModel.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.SignalR.Models
  commentId: N:Mix.SignalR.Models
  name: Mix.SignalR.Models
  nameWithType: Mix.SignalR.Models
  fullName: Mix.SignalR.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.SignalR.Models.SignalRMessageModel.#ctor*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.#ctor
  name: SignalRMessageModel
  nameWithType: SignalRMessageModel.SignalRMessageModel
  fullName: Mix.SignalR.Models.SignalRMessageModel.SignalRMessageModel
- uid: Mix.SignalR.Models.SignalRMessageModel.From*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.From
  name: From
  nameWithType: SignalRMessageModel.From
  fullName: Mix.SignalR.Models.SignalRMessageModel.From
- uid: Mix.SignalR.Models.HubUserModel
  commentId: T:Mix.SignalR.Models.HubUserModel
  parent: Mix.SignalR.Models
  name: HubUserModel
  nameWithType: HubUserModel
  fullName: Mix.SignalR.Models.HubUserModel
- uid: Mix.SignalR.Models.SignalRMessageModel.Title*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.Title
  name: Title
  nameWithType: SignalRMessageModel.Title
  fullName: Mix.SignalR.Models.SignalRMessageModel.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.SignalR.Models.SignalRMessageModel.Message*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.Message
  name: Message
  nameWithType: SignalRMessageModel.Message
  fullName: Mix.SignalR.Models.SignalRMessageModel.Message
- uid: Mix.SignalR.Models.SignalRMessageModel.Action*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.Action
  name: Action
  nameWithType: SignalRMessageModel.Action
  fullName: Mix.SignalR.Models.SignalRMessageModel.Action
- uid: Mix.SignalR.Enums.MessageAction
  commentId: T:Mix.SignalR.Enums.MessageAction
  parent: Mix.SignalR.Enums
  name: MessageAction
  nameWithType: MessageAction
  fullName: Mix.SignalR.Enums.MessageAction
- uid: Mix.SignalR.Enums
  commentId: N:Mix.SignalR.Enums
  name: Mix.SignalR.Enums
  nameWithType: Mix.SignalR.Enums
  fullName: Mix.SignalR.Enums
- uid: Mix.SignalR.Models.SignalRMessageModel.Type*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.Type
  name: Type
  nameWithType: SignalRMessageModel.Type
  fullName: Mix.SignalR.Models.SignalRMessageModel.Type
- uid: Mix.SignalR.Enums.MessageType
  commentId: T:Mix.SignalR.Enums.MessageType
  parent: Mix.SignalR.Enums
  name: MessageType
  nameWithType: MessageType
  fullName: Mix.SignalR.Enums.MessageType
- uid: Mix.SignalR.Models.SignalRMessageModel.Data*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.Data
  name: Data
  nameWithType: SignalRMessageModel.Data
  fullName: Mix.SignalR.Models.SignalRMessageModel.Data
- uid: Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime
  name: CreatedDateTime
  nameWithType: SignalRMessageModel.CreatedDateTime
  fullName: Mix.SignalR.Models.SignalRMessageModel.CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.SignalR.Models.SignalRMessageModel.ToString*
  commentId: Overload:Mix.SignalR.Models.SignalRMessageModel.ToString
  name: ToString
  nameWithType: SignalRMessageModel.ToString
  fullName: Mix.SignalR.Models.SignalRMessageModel.ToString
