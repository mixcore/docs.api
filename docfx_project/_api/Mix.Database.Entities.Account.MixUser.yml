### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Account.MixUser
  commentId: T:Mix.Database.Entities.Account.MixUser
  id: MixUser
  parent: Mix.Database.Entities.Account
  children:
  - Mix.Database.Entities.Account.MixUser.#ctor
  - Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser
  - Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser
  - Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser
  - Mix.Database.Entities.Account.MixUser.AspNetUserTokens
  - Mix.Database.Entities.Account.MixUser.Avatar
  - Mix.Database.Entities.Account.MixUser.Claims
  - Mix.Database.Entities.Account.MixUser.CreatedDateTime
  - Mix.Database.Entities.Account.MixUser.DOB
  - Mix.Database.Entities.Account.MixUser.FirstName
  - Mix.Database.Entities.Account.MixUser.Gender
  - Mix.Database.Entities.Account.MixUser.IsActived
  - Mix.Database.Entities.Account.MixUser.LastModified
  - Mix.Database.Entities.Account.MixUser.LastName
  - Mix.Database.Entities.Account.MixUser.LockoutEnd
  - Mix.Database.Entities.Account.MixUser.ModifiedBy
  - Mix.Database.Entities.Account.MixUser.NickName
  - Mix.Database.Entities.Account.MixUser.RegisterType
  langs:
  - csharp
  - vb
  name: MixUser
  nameWithType: MixUser
  fullName: Mix.Database.Entities.Account.MixUser
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUser
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: 'public class MixUser : IdentityUser<Guid>, IEntity<Guid>'
    content.vb: >-
      Public Class MixUser
          Inherits IdentityUser(Of Guid)
          Implements IEntity(Of Guid)
  inheritance:
  - System.Object
  implements:
  - IEntity{Guid}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Account.MixUser.#ctor
  commentId: M:Mix.Database.Entities.Account.MixUser.#ctor
  id: '#ctor'
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: MixUser()
  nameWithType: MixUser.MixUser()
  fullName: Mix.Database.Entities.Account.MixUser.MixUser()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public MixUser()
    content.vb: Public Sub New
  overload: Mix.Database.Entities.Account.MixUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.Avatar
  commentId: P:Mix.Database.Entities.Account.MixUser.Avatar
  id: Avatar
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: MixUser.Avatar
  fullName: Mix.Database.Entities.Account.MixUser.Avatar
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Avatar
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 14
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string Avatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Avatar As String
  overload: Mix.Database.Entities.Account.MixUser.Avatar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.NickName
  commentId: P:Mix.Database.Entities.Account.MixUser.NickName
  id: NickName
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: NickName
  nameWithType: MixUser.NickName
  fullName: Mix.Database.Entities.Account.MixUser.NickName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NickName
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 15
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string NickName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NickName As String
  overload: Mix.Database.Entities.Account.MixUser.NickName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.FirstName
  commentId: P:Mix.Database.Entities.Account.MixUser.FirstName
  id: FirstName
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: MixUser.FirstName
  fullName: Mix.Database.Entities.Account.MixUser.FirstName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FirstName
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 16
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: Mix.Database.Entities.Account.MixUser.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.LastName
  commentId: P:Mix.Database.Entities.Account.MixUser.LastName
  id: LastName
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: MixUser.LastName
  fullName: Mix.Database.Entities.Account.MixUser.LastName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastName
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 17
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastName As String
  overload: Mix.Database.Entities.Account.MixUser.LastName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.Gender
  commentId: P:Mix.Database.Entities.Account.MixUser.Gender
  id: Gender
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: Gender
  nameWithType: MixUser.Gender
  fullName: Mix.Database.Entities.Account.MixUser.Gender
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Gender
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 18
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string Gender { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Gender As String
  overload: Mix.Database.Entities.Account.MixUser.Gender*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.DOB
  commentId: P:Mix.Database.Entities.Account.MixUser.DOB
  id: DOB
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: DOB
  nameWithType: MixUser.DOB
  fullName: Mix.Database.Entities.Account.MixUser.DOB
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DOB
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 19
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public DateTime? DOB { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property DOB As DateTime?
  overload: Mix.Database.Entities.Account.MixUser.DOB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.CreatedDateTime
  commentId: P:Mix.Database.Entities.Account.MixUser.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: MixUser.CreatedDateTime
  fullName: Mix.Database.Entities.Account.MixUser.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 20
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property CreatedDateTime As DateTime
  overload: Mix.Database.Entities.Account.MixUser.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.IsActived
  commentId: P:Mix.Database.Entities.Account.MixUser.IsActived
  id: IsActived
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: IsActived
  nameWithType: MixUser.IsActived
  fullName: Mix.Database.Entities.Account.MixUser.IsActived
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsActived
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 21
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public bool IsActived { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActived As Boolean
  overload: Mix.Database.Entities.Account.MixUser.IsActived*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.LastModified
  commentId: P:Mix.Database.Entities.Account.MixUser.LastModified
  id: LastModified
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: MixUser.LastModified
  fullName: Mix.Database.Entities.Account.MixUser.LastModified
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 22
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property LastModified As DateTime?
  overload: Mix.Database.Entities.Account.MixUser.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.ModifiedBy
  commentId: P:Mix.Database.Entities.Account.MixUser.ModifiedBy
  id: ModifiedBy
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: MixUser.ModifiedBy
  fullName: Mix.Database.Entities.Account.MixUser.ModifiedBy
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModifiedBy
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 23
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Database.Entities.Account.MixUser.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.RegisterType
  commentId: P:Mix.Database.Entities.Account.MixUser.RegisterType
  id: RegisterType
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: RegisterType
  nameWithType: MixUser.RegisterType
  fullName: Mix.Database.Entities.Account.MixUser.RegisterType
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RegisterType
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 24
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public string RegisterType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RegisterType As String
  overload: Mix.Database.Entities.Account.MixUser.RegisterType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.LockoutEnd
  commentId: P:Mix.Database.Entities.Account.MixUser.LockoutEnd
  id: LockoutEnd
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: LockoutEnd
  nameWithType: MixUser.LockoutEnd
  fullName: Mix.Database.Entities.Account.MixUser.LockoutEnd
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LockoutEnd
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 25
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public DateTime? LockoutEnd { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property LockoutEnd As DateTime?
  overload: Mix.Database.Entities.Account.MixUser.LockoutEnd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixUser.Claims
  commentId: P:Mix.Database.Entities.Account.MixUser.Claims
  id: Claims
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: Claims
  nameWithType: MixUser.Claims
  fullName: Mix.Database.Entities.Account.MixUser.Claims
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Claims
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 27
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetUserClaims> Claims { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserClaims}
    content.vb: Public Overridable Property Claims As ICollection(Of AspNetUserClaims)
  overload: Mix.Database.Entities.Account.MixUser.Claims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser
  commentId: P:Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser
  id: AspNetUserClaimsUser
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: AspNetUserClaimsUser
  nameWithType: MixUser.AspNetUserClaimsUser
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserClaimsUser
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 28
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetUserClaims> AspNetUserClaimsUser { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserClaims}
    content.vb: Public Overridable Property AspNetUserClaimsUser As ICollection(Of AspNetUserClaims)
  overload: Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser
  commentId: P:Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser
  id: AspNetUserLoginsUser
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: AspNetUserLoginsUser
  nameWithType: MixUser.AspNetUserLoginsUser
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserLoginsUser
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 29
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetUserLogins> AspNetUserLoginsUser { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserLogins}
    content.vb: Public Overridable Property AspNetUserLoginsUser As ICollection(Of AspNetUserLogins)
  overload: Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser
  commentId: P:Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser
  id: AspNetUserRolesUser
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: AspNetUserRolesUser
  nameWithType: MixUser.AspNetUserRolesUser
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserRolesUser
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 30
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetUserRoles> AspNetUserRolesUser { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserRoles}
    content.vb: Public Overridable Property AspNetUserRolesUser As ICollection(Of AspNetUserRoles)
  overload: Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserTokens
  commentId: P:Mix.Database.Entities.Account.MixUser.AspNetUserTokens
  id: AspNetUserTokens
  parent: Mix.Database.Entities.Account.MixUser
  langs:
  - csharp
  - vb
  name: AspNetUserTokens
  nameWithType: MixUser.AspNetUserTokens
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserTokens
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserTokens
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixUser.cs
    startLine: 31
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetUserTokens> AspNetUserTokens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserTokens}
    content.vb: Public Overridable Property AspNetUserTokens As ICollection(Of AspNetUserTokens)
  overload: Mix.Database.Entities.Account.MixUser.AspNetUserTokens*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IEntity{Guid}
  commentId: '!:IEntity{Guid}'
  definition: IEntity`1
  name: IEntity<Guid>
  nameWithType: IEntity<Guid>
  fullName: IEntity<Guid>
  nameWithType.vb: IEntity(Of Guid)
  fullName.vb: IEntity(Of Guid)
  name.vb: IEntity(Of Guid)
  spec.csharp:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IEntity`1
  isExternal: true
  name: IEntity<>
  nameWithType: IEntity<>
  fullName: IEntity<>
  nameWithType.vb: IEntity(Of )
  fullName.vb: IEntity(Of )
  name.vb: IEntity(Of )
  spec.csharp:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixUser.#ctor*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.#ctor
  name: MixUser
  nameWithType: MixUser.MixUser
  fullName: Mix.Database.Entities.Account.MixUser.MixUser
- uid: Mix.Database.Entities.Account.MixUser.Avatar*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.Avatar
  name: Avatar
  nameWithType: MixUser.Avatar
  fullName: Mix.Database.Entities.Account.MixUser.Avatar
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Account.MixUser.NickName*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.NickName
  name: NickName
  nameWithType: MixUser.NickName
  fullName: Mix.Database.Entities.Account.MixUser.NickName
- uid: Mix.Database.Entities.Account.MixUser.FirstName*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.FirstName
  name: FirstName
  nameWithType: MixUser.FirstName
  fullName: Mix.Database.Entities.Account.MixUser.FirstName
- uid: Mix.Database.Entities.Account.MixUser.LastName*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.LastName
  name: LastName
  nameWithType: MixUser.LastName
  fullName: Mix.Database.Entities.Account.MixUser.LastName
- uid: Mix.Database.Entities.Account.MixUser.Gender*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.Gender
  name: Gender
  nameWithType: MixUser.Gender
  fullName: Mix.Database.Entities.Account.MixUser.Gender
- uid: Mix.Database.Entities.Account.MixUser.DOB*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.DOB
  name: DOB
  nameWithType: MixUser.DOB
  fullName: Mix.Database.Entities.Account.MixUser.DOB
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixUser.CreatedDateTime*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.CreatedDateTime
  name: CreatedDateTime
  nameWithType: MixUser.CreatedDateTime
  fullName: Mix.Database.Entities.Account.MixUser.CreatedDateTime
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Mix.Database.Entities.Account.MixUser.IsActived*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.IsActived
  name: IsActived
  nameWithType: MixUser.IsActived
  fullName: Mix.Database.Entities.Account.MixUser.IsActived
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Database.Entities.Account.MixUser.LastModified*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.LastModified
  name: LastModified
  nameWithType: MixUser.LastModified
  fullName: Mix.Database.Entities.Account.MixUser.LastModified
- uid: Mix.Database.Entities.Account.MixUser.ModifiedBy*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.ModifiedBy
  name: ModifiedBy
  nameWithType: MixUser.ModifiedBy
  fullName: Mix.Database.Entities.Account.MixUser.ModifiedBy
- uid: Mix.Database.Entities.Account.MixUser.RegisterType*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.RegisterType
  name: RegisterType
  nameWithType: MixUser.RegisterType
  fullName: Mix.Database.Entities.Account.MixUser.RegisterType
- uid: Mix.Database.Entities.Account.MixUser.LockoutEnd*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.LockoutEnd
  name: LockoutEnd
  nameWithType: MixUser.LockoutEnd
  fullName: Mix.Database.Entities.Account.MixUser.LockoutEnd
- uid: Mix.Database.Entities.Account.MixUser.Claims*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.Claims
  name: Claims
  nameWithType: MixUser.Claims
  fullName: Mix.Database.Entities.Account.MixUser.Claims
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserClaims}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserClaims}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetUserClaims>
  nameWithType: ICollection<AspNetUserClaims>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Account.AspNetUserClaims>
  nameWithType.vb: ICollection(Of AspNetUserClaims)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Account.AspNetUserClaims)
  name.vb: ICollection(Of AspNetUserClaims)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser
  name: AspNetUserClaimsUser
  nameWithType: MixUser.AspNetUserClaimsUser
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserClaimsUser
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser
  name: AspNetUserLoginsUser
  nameWithType: MixUser.AspNetUserLoginsUser
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserLoginsUser
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserLogins}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserLogins}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetUserLogins>
  nameWithType: ICollection<AspNetUserLogins>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Account.AspNetUserLogins>
  nameWithType.vb: ICollection(Of AspNetUserLogins)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Account.AspNetUserLogins)
  name.vb: ICollection(Of AspNetUserLogins)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser
  name: AspNetUserRolesUser
  nameWithType: MixUser.AspNetUserRolesUser
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserRolesUser
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserRoles}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserRoles}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetUserRoles>
  nameWithType: ICollection<AspNetUserRoles>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Account.AspNetUserRoles>
  nameWithType.vb: ICollection(Of AspNetUserRoles)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Account.AspNetUserRoles)
  name.vb: ICollection(Of AspNetUserRoles)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixUser.AspNetUserTokens*
  commentId: Overload:Mix.Database.Entities.Account.MixUser.AspNetUserTokens
  name: AspNetUserTokens
  nameWithType: MixUser.AspNetUserTokens
  fullName: Mix.Database.Entities.Account.MixUser.AspNetUserTokens
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserTokens}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserTokens}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetUserTokens>
  nameWithType: ICollection<AspNetUserTokens>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Account.AspNetUserTokens>
  nameWithType.vb: ICollection(Of AspNetUserTokens)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Account.AspNetUserTokens)
  name.vb: ICollection(Of AspNetUserTokens)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
