### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1
  commentId: T:Mix.Cms.Service.SignalR.Models.HubRequest`1
  id: HubRequest`1
  parent: Mix.Cms.Service.SignalR.Models
  children:
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.Action
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.AttributeSetName
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.Connection
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.Data
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.From
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.IsMySelf
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.IsSave
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.RequestDate
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.Room
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.Specificulture
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.To
  - Mix.Cms.Service.SignalR.Models.HubRequest`1.Uid
  langs:
  - csharp
  - vb
  name: HubRequest<T>
  nameWithType: HubRequest<T>
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: HubRequest
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 5
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: public class HubRequest<T>
    typeParameters:
    - id: T
    content.vb: Public Class HubRequest(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: HubRequest(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T)
  name.vb: HubRequest(Of T)
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Uid
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.Uid
  id: Uid
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: Uid
  nameWithType: HubRequest<T>.Uid
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Uid
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Uid
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 7
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("uid")]

      public string Uid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("uid")>

      Public Property Uid As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.Uid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: uid
  nameWithType.vb: HubRequest(Of T).Uid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Uid
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Connection
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.Connection
  id: Connection
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: HubRequest<T>.Connection
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Connection
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Connection
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 9
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("connection")]

      public MessengerConnection Connection { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Service.SignalR.Models.MessengerConnection
    content.vb: >-
      <JsonProperty("connection")>

      Public Property Connection As MessengerConnection
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.Connection*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connection
  nameWithType.vb: HubRequest(Of T).Connection
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Connection
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.From
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.From
  id: From
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: From
  nameWithType: HubRequest<T>.From
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.From
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: From
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("from")]

      public string From { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("from")>

      Public Property From As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.From*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: from
  nameWithType.vb: HubRequest(Of T).From
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).From
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.To
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.To
  id: To
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: To
  nameWithType: HubRequest<T>.To
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.To
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: To
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 13
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("to")]

      public string To { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("to")>

      Public Property To As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.To*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: to
  nameWithType.vb: HubRequest(Of T).To
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).To
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.AttributeSetName
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.AttributeSetName
  id: AttributeSetName
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: AttributeSetName
  nameWithType: HubRequest<T>.AttributeSetName
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.AttributeSetName
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeSetName
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 16
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("attributeSetName")]

      public string AttributeSetName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("attributeSetName")>

      Public Property AttributeSetName As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.AttributeSetName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributeSetName
  nameWithType.vb: HubRequest(Of T).AttributeSetName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).AttributeSetName
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Action
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.Action
  id: Action
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: HubRequest<T>.Action
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Action
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Action
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("action")]

      public string Action { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("action")>

      Public Property Action As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.Action*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: action
  nameWithType.vb: HubRequest(Of T).Action
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Action
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Data
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.Data
  id: Data
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: HubRequest<T>.Data
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Data
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 22
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("data")]

      public T Data { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: >-
      <JsonProperty("data")>

      Public Property Data As T
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.Data*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: data
  nameWithType.vb: HubRequest(Of T).Data
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Data
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.RequestDate
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.RequestDate
  id: RequestDate
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: RequestDate
  nameWithType: HubRequest<T>.RequestDate
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.RequestDate
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RequestDate
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 25
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("requestDate")]

      public DateTime RequestDate { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("requestDate")>

      Public ReadOnly Property RequestDate As Date
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.RequestDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: requestDate
  nameWithType.vb: HubRequest(Of T).RequestDate
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).RequestDate
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Room
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.Room
  id: Room
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: Room
  nameWithType: HubRequest<T>.Room
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Room
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Room
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 28
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("room")]

      public string Room { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("room")>

      Public Property Room As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.Room*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: room
  nameWithType.vb: HubRequest(Of T).Room
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Room
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.IsMySelf
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.IsMySelf
  id: IsMySelf
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: IsMySelf
  nameWithType: HubRequest<T>.IsMySelf
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.IsMySelf
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsMySelf
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 31
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("isMyself")]

      public bool IsMySelf { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isMyself")>

      Public Property IsMySelf As Boolean
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.IsMySelf*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isMyself
  nameWithType.vb: HubRequest(Of T).IsMySelf
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).IsMySelf
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.IsSave
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.IsSave
  id: IsSave
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: IsSave
  nameWithType: HubRequest<T>.IsSave
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.IsSave
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsSave
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 33
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("isSave")]

      public bool IsSave { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isSave")>

      Public Property IsSave As Boolean
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.IsSave*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isSave
  nameWithType.vb: HubRequest(Of T).IsSave
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).IsSave
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Specificulture
  commentId: P:Mix.Cms.Service.SignalR.Models.HubRequest`1.Specificulture
  id: Specificulture
  parent: Mix.Cms.Service.SignalR.Models.HubRequest`1
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: HubRequest<T>.Specificulture
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Specificulture
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubRequest.cs
    startLine: 36
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("specificulture")]

      public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("specificulture")>

      Public Property Specificulture As String
  overload: Mix.Cms.Service.SignalR.Models.HubRequest`1.Specificulture*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: specificulture
  nameWithType.vb: HubRequest(Of T).Specificulture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Specificulture
references:
- uid: Mix.Cms.Service.SignalR.Models
  commentId: N:Mix.Cms.Service.SignalR.Models
  name: Mix.Cms.Service.SignalR.Models
  nameWithType: Mix.Cms.Service.SignalR.Models
  fullName: Mix.Cms.Service.SignalR.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Uid*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.Uid
  name: Uid
  nameWithType: HubRequest<T>.Uid
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Uid
  nameWithType.vb: HubRequest(Of T).Uid
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Uid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Connection*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.Connection
  name: Connection
  nameWithType: HubRequest<T>.Connection
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Connection
  nameWithType.vb: HubRequest(Of T).Connection
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Connection
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection
  commentId: T:Mix.Cms.Service.SignalR.Models.MessengerConnection
  parent: Mix.Cms.Service.SignalR.Models
  name: MessengerConnection
  nameWithType: MessengerConnection
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.From*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.From
  name: From
  nameWithType: HubRequest<T>.From
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.From
  nameWithType.vb: HubRequest(Of T).From
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).From
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.To*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.To
  name: To
  nameWithType: HubRequest<T>.To
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.To
  nameWithType.vb: HubRequest(Of T).To
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).To
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.AttributeSetName*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.AttributeSetName
  name: AttributeSetName
  nameWithType: HubRequest<T>.AttributeSetName
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.AttributeSetName
  nameWithType.vb: HubRequest(Of T).AttributeSetName
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).AttributeSetName
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Action*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.Action
  name: Action
  nameWithType: HubRequest<T>.Action
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Action
  nameWithType.vb: HubRequest(Of T).Action
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Action
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Data*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.Data
  name: Data
  nameWithType: HubRequest<T>.Data
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Data
  nameWithType.vb: HubRequest(Of T).Data
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Data
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.RequestDate*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.RequestDate
  name: RequestDate
  nameWithType: HubRequest<T>.RequestDate
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.RequestDate
  nameWithType.vb: HubRequest(Of T).RequestDate
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).RequestDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Room*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.Room
  name: Room
  nameWithType: HubRequest<T>.Room
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Room
  nameWithType.vb: HubRequest(Of T).Room
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Room
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.IsMySelf*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.IsMySelf
  name: IsMySelf
  nameWithType: HubRequest<T>.IsMySelf
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.IsMySelf
  nameWithType.vb: HubRequest(Of T).IsMySelf
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).IsMySelf
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.IsSave*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.IsSave
  name: IsSave
  nameWithType: HubRequest<T>.IsSave
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.IsSave
  nameWithType.vb: HubRequest(Of T).IsSave
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).IsSave
- uid: Mix.Cms.Service.SignalR.Models.HubRequest`1.Specificulture*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubRequest`1.Specificulture
  name: Specificulture
  nameWithType: HubRequest<T>.Specificulture
  fullName: Mix.Cms.Service.SignalR.Models.HubRequest<T>.Specificulture
  nameWithType.vb: HubRequest(Of T).Specificulture
  fullName.vb: Mix.Cms.Service.SignalR.Models.HubRequest(Of T).Specificulture
