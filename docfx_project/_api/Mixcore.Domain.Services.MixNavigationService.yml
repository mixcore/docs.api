### YamlMime:ManagedReference
items:
- uid: Mixcore.Domain.Services.MixNavigationService
  commentId: T:Mixcore.Domain.Services.MixNavigationService
  id: MixNavigationService
  parent: Mixcore.Domain.Services
  children:
  - Mixcore.Domain.Services.MixNavigationService.#ctor(MixCmsContext)
  - Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  langs:
  - csharp
  - vb
  name: MixNavigationService
  nameWithType: MixNavigationService
  fullName: Mixcore.Domain.Services.MixNavigationService
  type: Class
  source:
    remote:
      path: src/applications/Mixcore/Domain/Services/MixNavigationService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixNavigationService
    path: ../../mix.core/src/applications/Mixcore/Domain/Services/MixNavigationService.cs
    startLine: 5
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Services
  syntax:
    content: public class MixNavigationService
    content.vb: Public Class MixNavigationService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixcore.Domain.Services.MixNavigationService.#ctor(MixCmsContext)
  commentId: M:Mixcore.Domain.Services.MixNavigationService.#ctor(MixCmsContext)
  id: '#ctor(MixCmsContext)'
  parent: Mixcore.Domain.Services.MixNavigationService
  langs:
  - csharp
  - vb
  name: MixNavigationService(MixCmsContext)
  nameWithType: MixNavigationService.MixNavigationService(MixCmsContext)
  fullName: Mixcore.Domain.Services.MixNavigationService.MixNavigationService(MixCmsContext)
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/Services/MixNavigationService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/Services/MixNavigationService.cs
    startLine: 9
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Services
  syntax:
    content: public MixNavigationService(MixCmsContext context)
    parameters:
    - id: context
      type: MixCmsContext
    content.vb: Public Sub New(context As MixCmsContext)
  overload: Mixcore.Domain.Services.MixNavigationService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  commentId: M:Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  id: GetNavigationAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  parent: Mixcore.Domain.Services.MixNavigationService
  langs:
  - csharp
  - vb
  name: GetNavigationAsync(String, String, IUrlHelper)
  nameWithType: MixNavigationService.GetNavigationAsync(String, String, IUrlHelper)
  fullName: Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync(System.String, System.String, Microsoft.AspNetCore.Mvc.IUrlHelper)
  type: Method
  source:
    remote:
      path: src/applications/Mixcore/Domain/Services/MixNavigationService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetNavigationAsync
    path: ../../mix.core/src/applications/Mixcore/Domain/Services/MixNavigationService.cs
    startLine: 15
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Services
  syntax:
    content: public Task<MixNavigation> GetNavigationAsync(string name, string culture, IUrlHelper Url)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    - id: Url
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
    return:
      type: Task{MixNavigation}
    content.vb: Public Function GetNavigationAsync(name As String, culture As String, Url As IUrlHelper) As Task(Of MixNavigation)
  overload: Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mixcore.Domain.Services
  commentId: N:Mixcore.Domain.Services
  name: Mixcore.Domain.Services
  nameWithType: Mixcore.Domain.Services
  fullName: Mixcore.Domain.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mixcore.Domain.Services.MixNavigationService.#ctor*
  commentId: Overload:Mixcore.Domain.Services.MixNavigationService.#ctor
  name: MixNavigationService
  nameWithType: MixNavigationService.MixNavigationService
  fullName: Mixcore.Domain.Services.MixNavigationService.MixNavigationService
- uid: MixCmsContext
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: MixCmsContext
- uid: Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync*
  commentId: Overload:Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync
  name: GetNavigationAsync
  nameWithType: MixNavigationService.GetNavigationAsync
  fullName: Mixcore.Domain.Services.MixNavigationService.GetNavigationAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.IUrlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.IUrlHelper
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: IUrlHelper
  nameWithType: IUrlHelper
  fullName: Microsoft.AspNetCore.Mvc.IUrlHelper
- uid: Task{MixNavigation}
  commentId: '!:Task{MixNavigation}'
  definition: Task`1
  name: Task<MixNavigation>
  nameWithType: Task<MixNavigation>
  fullName: Task<MixNavigation>
  nameWithType.vb: Task(Of MixNavigation)
  fullName.vb: Task(Of MixNavigation)
  name.vb: Task(Of MixNavigation)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixNavigation
    name: MixNavigation
    nameWithType: MixNavigation
    fullName: MixNavigation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixNavigation
    name: MixNavigation
    nameWithType: MixNavigation
    fullName: MixNavigation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
