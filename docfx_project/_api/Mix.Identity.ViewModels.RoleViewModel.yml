### YamlMime:ManagedReference
items:
- uid: Mix.Identity.ViewModels.RoleViewModel
  commentId: T:Mix.Identity.ViewModels.RoleViewModel
  id: RoleViewModel
  parent: Mix.Identity.ViewModels
  children:
  - Mix.Identity.ViewModels.RoleViewModel.#ctor
  - Mix.Identity.ViewModels.RoleViewModel.#ctor(Mix.Database.Entities.Account.AspNetRoles,UnitOfWorkInfo)
  - Mix.Identity.ViewModels.RoleViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp
  - Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Identity.ViewModels.RoleViewModel.Name
  - Mix.Identity.ViewModels.RoleViewModel.NormalizedName
  - Mix.Identity.ViewModels.RoleViewModel.ParseEntity
  langs:
  - csharp
  - vb
  name: RoleViewModel
  nameWithType: RoleViewModel
  fullName: Mix.Identity.ViewModels.RoleViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RoleViewModel
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 6
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: 'public class RoleViewModel : ViewModelBase<MixCmsAccountContext, AspNetRoles, Guid, RoleViewModel>'
    content.vb: >-
      Public Class RoleViewModel
          Inherits ViewModelBase(Of MixCmsAccountContext, AspNetRoles, Guid, RoleViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.ViewModels.RoleViewModel.#ctor
  commentId: M:Mix.Identity.ViewModels.RoleViewModel.#ctor
  id: '#ctor'
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: RoleViewModel()
  nameWithType: RoleViewModel.RoleViewModel()
  fullName: Mix.Identity.ViewModels.RoleViewModel.RoleViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 9
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public RoleViewModel()
    content.vb: Public Sub New
  overload: Mix.Identity.ViewModels.RoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.ViewModels.RoleViewModel.#ctor(Mix.Database.Entities.Account.AspNetRoles,UnitOfWorkInfo)
  commentId: M:Mix.Identity.ViewModels.RoleViewModel.#ctor(Mix.Database.Entities.Account.AspNetRoles,UnitOfWorkInfo)
  id: '#ctor(Mix.Database.Entities.Account.AspNetRoles,UnitOfWorkInfo)'
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: RoleViewModel(AspNetRoles, UnitOfWorkInfo)
  nameWithType: RoleViewModel.RoleViewModel(AspNetRoles, UnitOfWorkInfo)
  fullName: Mix.Identity.ViewModels.RoleViewModel.RoleViewModel(Mix.Database.Entities.Account.AspNetRoles, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 13
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public RoleViewModel(AspNetRoles entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: Mix.Database.Entities.Account.AspNetRoles
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As AspNetRoles, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Identity.ViewModels.RoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.ViewModels.RoleViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Identity.ViewModels.RoleViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: RoleViewModel(UnitOfWorkInfo)
  nameWithType: RoleViewModel.RoleViewModel(UnitOfWorkInfo)
  fullName: Mix.Identity.ViewModels.RoleViewModel.RoleViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 20
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public RoleViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Identity.ViewModels.RoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp
  commentId: P:Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: RoleViewModel.ConcurrencyStamp
  fullName: Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConcurrencyStamp
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 28
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public string ConcurrencyStamp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConcurrencyStamp As String
  overload: Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.ViewModels.RoleViewModel.Name
  commentId: P:Mix.Identity.ViewModels.RoleViewModel.Name
  id: Name
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: RoleViewModel.Name
  fullName: Mix.Identity.ViewModels.RoleViewModel.Name
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 30
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Identity.ViewModels.RoleViewModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.ViewModels.RoleViewModel.NormalizedName
  commentId: P:Mix.Identity.ViewModels.RoleViewModel.NormalizedName
  id: NormalizedName
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: RoleViewModel.NormalizedName
  fullName: Mix.Identity.ViewModels.RoleViewModel.NormalizedName
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NormalizedName
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 32
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public string NormalizedName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NormalizedName As String
  overload: Mix.Identity.ViewModels.RoleViewModel.NormalizedName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.ViewModels.RoleViewModel.ParseEntity
  commentId: M:Mix.Identity.ViewModels.RoleViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: RoleViewModel.ParseEntity()
  fullName: Mix.Identity.ViewModels.RoleViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 42
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public override Task<AspNetRoles> ParseEntity()
    return:
      type: System.Threading.Tasks.Task{Mix.Database.Entities.Account.AspNetRoles}
    content.vb: Public Overrides Function ParseEntity As Task(Of AspNetRoles)
  overload: Mix.Identity.ViewModels.RoleViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  id: InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Identity.ViewModels.RoleViewModel
  langs:
  - csharp
  - vb
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: RoleViewModel.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/platform/mix.identity/ViewModels/RoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDefaultValues
    path: ../../mix.core/src/platform/mix.identity/ViewModels/RoleViewModel.cs
    startLine: 51
  assemblies:
  - mix.identity
  namespace: Mix.Identity.ViewModels
  syntax:
    content: public override void InitDefaultValues(string language = null, int? cultureId = default(int? ))
    parameters:
    - id: language
      type: System.String
    - id: cultureId
      type: System.Nullable{System.Int32}
    content.vb: Public Overrides Sub InitDefaultValues(language As String = Nothing, cultureId As Integer? = Nothing)
  overload: Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues*
  nameWithType.vb: RoleViewModel.InitDefaultValues(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
references:
- uid: Mix.Identity.ViewModels
  commentId: N:Mix.Identity.ViewModels
  name: Mix.Identity.ViewModels
  nameWithType: Mix.Identity.ViewModels
  fullName: Mix.Identity.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.ViewModels.RoleViewModel.#ctor*
  commentId: Overload:Mix.Identity.ViewModels.RoleViewModel.#ctor
  name: RoleViewModel
  nameWithType: RoleViewModel.RoleViewModel
  fullName: Mix.Identity.ViewModels.RoleViewModel.RoleViewModel
- uid: Mix.Database.Entities.Account.AspNetRoles
  commentId: T:Mix.Database.Entities.Account.AspNetRoles
  parent: Mix.Database.Entities.Account
  name: AspNetRoles
  nameWithType: AspNetRoles
  fullName: Mix.Database.Entities.Account.AspNetRoles
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp*
  commentId: Overload:Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp
  name: ConcurrencyStamp
  nameWithType: RoleViewModel.ConcurrencyStamp
  fullName: Mix.Identity.ViewModels.RoleViewModel.ConcurrencyStamp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.ViewModels.RoleViewModel.Name*
  commentId: Overload:Mix.Identity.ViewModels.RoleViewModel.Name
  name: Name
  nameWithType: RoleViewModel.Name
  fullName: Mix.Identity.ViewModels.RoleViewModel.Name
- uid: Mix.Identity.ViewModels.RoleViewModel.NormalizedName*
  commentId: Overload:Mix.Identity.ViewModels.RoleViewModel.NormalizedName
  name: NormalizedName
  nameWithType: RoleViewModel.NormalizedName
  fullName: Mix.Identity.ViewModels.RoleViewModel.NormalizedName
- uid: Mix.Identity.ViewModels.RoleViewModel.ParseEntity*
  commentId: Overload:Mix.Identity.ViewModels.RoleViewModel.ParseEntity
  name: ParseEntity
  nameWithType: RoleViewModel.ParseEntity
  fullName: Mix.Identity.ViewModels.RoleViewModel.ParseEntity
- uid: System.Threading.Tasks.Task{Mix.Database.Entities.Account.AspNetRoles}
  commentId: T:System.Threading.Tasks.Task{Mix.Database.Entities.Account.AspNetRoles}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<AspNetRoles>
  nameWithType: Task<AspNetRoles>
  fullName: System.Threading.Tasks.Task<Mix.Database.Entities.Account.AspNetRoles>
  nameWithType.vb: Task(Of AspNetRoles)
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Database.Entities.Account.AspNetRoles)
  name.vb: Task(Of AspNetRoles)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Mix.Database.Entities.Account.AspNetRoles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetRoles
    name: AspNetRoles
    nameWithType: AspNetRoles
    fullName: Mix.Database.Entities.Account.AspNetRoles
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues*
  commentId: Overload:Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues
  name: InitDefaultValues
  nameWithType: RoleViewModel.InitDefaultValues
  fullName: Mix.Identity.ViewModels.RoleViewModel.InitDefaultValues
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
