### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  commentId: T:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  id: MultilingualSEOContentViewModelBase`4
  parent: Mix.Lib.Base
  children:
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor(`1,UnitOfWorkInfo)
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor(UnitOfWorkInfo)
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Content
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Excerpt
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ExpandView
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Image
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.IsClone
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Layout
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.LayoutId
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ParseEntity
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.PublishedDateTime
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoDescription
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoKeywords
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoName
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoTitle
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Source
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Template
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.TemplateId
  - Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Title
  langs:
  - csharp
  - vb
  name: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MultilingualSEOContentViewModelBase
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: 'public abstract class MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView> : MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView> where TDbContext : MixCmsContext where TEntity : MultilingualContentBase<TPrimaryKey> where TPrimaryKey : IComparable where TView : MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>'
    typeParameters:
    - id: TDbContext
    - id: TEntity
    - id: TPrimaryKey
    - id: TView
    content.vb: >-
      Public MustInherit Class MultilingualSEOContentViewModelBase(Of TDbContext As MixCmsContext, TEntity As MultilingualContentBase(Of TPrimaryKey), TPrimaryKey As IComparable, TView As MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView))
          Inherits MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  inheritance:
  - System.Object
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  derivedClasses:
  - Mix.Lib.Base.HaveParentContentViewModelBase`4
  inheritedMembers:
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixTenantId
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Icon
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.IsPublic
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Specificulture
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParentId
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixCultureId
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Contributors
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParseEntity
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor
  commentId: M:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor
  id: '#ctor'
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: MultilingualSEOContentViewModelBase()
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase()
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public MultilingualSEOContentViewModelBase()
    content.vb: Public Sub New
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase()
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: MultilingualSEOContentViewModelBase(UnitOfWorkInfo)
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase(UnitOfWorkInfo)
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: protected MultilingualSEOContentViewModelBase(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Protected Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase(UnitOfWorkInfo)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase(UnitOfWorkInfo)
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor(`1,UnitOfWorkInfo)
  commentId: M:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor(`1,UnitOfWorkInfo)
  id: '#ctor(`1,UnitOfWorkInfo)'
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: MultilingualSEOContentViewModelBase(TEntity, UnitOfWorkInfo)
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase(TEntity, UnitOfWorkInfo)
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase(TEntity, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 22
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: protected MultilingualSEOContentViewModelBase(TEntity entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: '{TEntity}'
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Protected Sub New(entity As TEntity, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase(TEntity, UnitOfWorkInfo)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase(TEntity, UnitOfWorkInfo)
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Title
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Title
  id: Title
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Title
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Title
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Title*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Title
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Excerpt
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Excerpt
  id: Excerpt
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Excerpt
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Excerpt
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Excerpt
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Excerpt
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 31
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Excerpt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Excerpt As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Excerpt*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Excerpt
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Excerpt
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Content
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Content
  id: Content
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Content*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.LayoutId
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.LayoutId
  id: LayoutId
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: LayoutId
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LayoutId
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LayoutId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LayoutId
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 33
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public int? LayoutId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property LayoutId As Integer?
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.LayoutId*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LayoutId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LayoutId
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.TemplateId
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.TemplateId
  id: TemplateId
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: TemplateId
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.TemplateId
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.TemplateId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateId
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 34
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public int? TemplateId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property TemplateId As Integer?
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.TemplateId*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).TemplateId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).TemplateId
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Layout
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Layout
  id: Layout
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Layout
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Layout
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Layout
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Layout
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 35
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public TemplateViewModel Layout { get; set; }
    parameters: []
    return:
      type: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
    content.vb: Public Property Layout As TemplateViewModel
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Layout*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Layout
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Layout
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Template
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Template
  id: Template
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Template
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Template
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Template
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 36
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public TemplateViewModel Template { get; set; }
    parameters: []
    return:
      type: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
    content.vb: Public Property Template As TemplateViewModel
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Template*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Template
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Template
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Image
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Image
  id: Image
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Image
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Image
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Image
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 37
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Image { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Image As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Image*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Image
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Image
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Source
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Source
  id: Source
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Source
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Source
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Source
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 38
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Source As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Source*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Source
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Source
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoDescription
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoDescription
  id: SeoDescription
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: SeoDescription
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoDescription
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoDescription
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoDescription
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 39
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string SeoDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoDescription As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoDescription*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoDescription
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoDescription
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoKeywords
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoKeywords
  id: SeoKeywords
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: SeoKeywords
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoKeywords
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoKeywords
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoKeywords
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 40
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string SeoKeywords { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoKeywords As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoKeywords*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoKeywords
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoKeywords
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoName
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoName
  id: SeoName
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: SeoName
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoName
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoName
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 41
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string SeoName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoName As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoName*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoName
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoTitle
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoTitle
  id: SeoTitle
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: SeoTitle
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoTitle
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoTitle
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoTitle
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 42
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string SeoTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoTitle As String
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoTitle*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoTitle
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoTitle
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.PublishedDateTime
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.PublishedDateTime
  id: PublishedDateTime
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: PublishedDateTime
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.PublishedDateTime
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.PublishedDateTime
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PublishedDateTime
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 43
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public DateTime? PublishedDateTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property PublishedDateTime As DateTime?
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.PublishedDateTime*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).PublishedDateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).PublishedDateTime
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.IsClone
  commentId: P:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.IsClone
  id: IsClone
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: IsClone
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsClone
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsClone
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsClone
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 47
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public bool? IsClone { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsClone As Boolean?
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.IsClone*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsClone
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsClone
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ParseEntity
  commentId: M:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ParseEntity
  id: ParseEntity
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 54
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public override Task<TEntity> ParseEntity()
    return:
      type: Task{{TEntity}}
    content.vb: Public Overrides Function ParseEntity As Task(Of TEntity)
  overridden: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParseEntity
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ParseEntity*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ExpandView
  commentId: M:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ExpandView
  id: ExpandView
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ExpandView()
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 59
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ExpandView*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ExpandView()
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ExpandView()
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  id: InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDefaultValues
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualSEOContentViewModelBase.cs
    startLine: 72
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public override void InitDefaultValues(string language = null, int? cultureId = default(int? ))
    parameters:
    - id: language
      type: System.String
    - id: cultureId
      type: System.Nullable{System.Int32}
    content.vb: Public Overrides Sub InitDefaultValues(language As String = Nothing, cultureId As Integer? = Nothing)
  overridden: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  overload: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.InitDefaultValues*
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
references:
- uid: Mix.Lib.Base
  commentId: N:Mix.Lib.Base
  name: Mix.Lib.Base
  nameWithType: Mix.Lib.Base
  fullName: Mix.Lib.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  commentId: T:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}
  parent: Mix.Lib.Base
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4
  name: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixTenantId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.MixTenantId
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixTenantId
  name: MixTenantId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Icon
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.Icon
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.Icon
  name: Icon
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.IsPublic
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.IsPublic
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.IsPublic
  name: IsPublic
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Specificulture
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.Specificulture
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.Specificulture
  name: Specificulture
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParentId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.ParentId
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParentId
  name: ParentId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixCultureId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.MixCultureId
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixCultureId
  name: MixCultureId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Contributors
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.Contributors
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.Contributors
  name: Contributors
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParseEntity
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.ParseEntity
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
  name: ParseEntity()
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(String, Nullable(Of Int32))
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  name: LoadContributorsAsync(MixContentType, MixIdentityService)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
  commentId: T:Mix.Lib.Base.MultilingualContentViewModelBase`4
  name: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixTenantId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.MixTenantId
  name: MixTenantId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.Icon
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.Icon
  name: Icon
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.IsPublic
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.IsPublic
  name: IsPublic
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.Specificulture
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.Specificulture
  name: Specificulture
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParentId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.ParentId
  name: ParentId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixCultureId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.MixCultureId
  name: MixCultureId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.Contributors
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.Contributors
  name: Contributors
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
  name: ParseEntity()
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  isExternal: true
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(String, Nullable(Of Int32))
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  isExternal: true
  name: LoadContributorsAsync(MixContentType, MixIdentityService)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.#ctor
  name: MultilingualSEOContentViewModelBase
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualSEOContentViewModelBase
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualSEOContentViewModelBase
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Title*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Title
  name: Title
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Title
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Title
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Title
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Excerpt*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Excerpt
  name: Excerpt
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Excerpt
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Excerpt
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Excerpt
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Excerpt
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Content*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Content
  name: Content
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.LayoutId*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.LayoutId
  name: LayoutId
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LayoutId
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LayoutId
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LayoutId
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LayoutId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.TemplateId*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.TemplateId
  name: TemplateId
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.TemplateId
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.TemplateId
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).TemplateId
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).TemplateId
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Layout*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Layout
  name: Layout
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Layout
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Layout
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Layout
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Layout
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  commentId: T:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  parent: Mix.Lib.ViewModels.ReadOnly
  name: TemplateViewModel
  nameWithType: TemplateViewModel
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
- uid: Mix.Lib.ViewModels.ReadOnly
  commentId: N:Mix.Lib.ViewModels.ReadOnly
  name: Mix.Lib.ViewModels.ReadOnly
  nameWithType: Mix.Lib.ViewModels.ReadOnly
  fullName: Mix.Lib.ViewModels.ReadOnly
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Template*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Template
  name: Template
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Template
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Template
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Template
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Template
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Image*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Image
  name: Image
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Image
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Image
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Image
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Image
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Source*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.Source
  name: Source
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Source
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Source
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Source
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Source
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoDescription*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoDescription
  name: SeoDescription
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoDescription
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoDescription
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoDescription
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoDescription
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoKeywords*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoKeywords
  name: SeoKeywords
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoKeywords
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoKeywords
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoKeywords
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoKeywords
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoName*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoName
  name: SeoName
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoName
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoName
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoName
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoName
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoTitle*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.SeoTitle
  name: SeoTitle
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoTitle
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SeoTitle
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoTitle
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SeoTitle
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.PublishedDateTime*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.PublishedDateTime
  name: PublishedDateTime
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.PublishedDateTime
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.PublishedDateTime
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).PublishedDateTime
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).PublishedDateTime
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.IsClone*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.IsClone
  name: IsClone
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsClone
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsClone
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsClone
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsClone
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ParseEntity*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ParseEntity
  name: ParseEntity
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
- uid: Task{{TEntity}}
  commentId: '!:Task{`1}'
  definition: Task`1
  name: Task<TEntity>
  nameWithType: Task<TEntity>
  fullName: Task<TEntity>
  nameWithType.vb: Task(Of TEntity)
  fullName.vb: Task(Of TEntity)
  name.vb: Task(Of TEntity)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ExpandView*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.ExpandView
  name: ExpandView
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ExpandView
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ExpandView
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ExpandView
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.InitDefaultValues*
  commentId: Overload:Mix.Lib.Base.MultilingualSEOContentViewModelBase`4.InitDefaultValues
  name: InitDefaultValues
  nameWithType: MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  fullName: Mix.Lib.Base.MultilingualSEOContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  nameWithType.vb: MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
  fullName.vb: Mix.Lib.Base.MultilingualSEOContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
