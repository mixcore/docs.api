### YamlMime:ManagedReference
items:
- uid: Mixcore.Domain.Constants.InitRoutePath
  commentId: T:Mixcore.Domain.Constants.InitRoutePath
  id: InitRoutePath
  parent: Mixcore.Domain.Constants
  children:
  - Mixcore.Domain.Constants.InitRoutePath.Default
  - Mixcore.Domain.Constants.InitRoutePath.Step2
  - Mixcore.Domain.Constants.InitRoutePath.Step3
  - Mixcore.Domain.Constants.InitRoutePath.Step4
  langs:
  - csharp
  - vb
  name: InitRoutePath
  nameWithType: InitRoutePath
  fullName: Mixcore.Domain.Constants.InitRoutePath
  type: Class
  source:
    remote:
      path: src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitRoutePath
    path: ../../mix.core/src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
    startLine: 2
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Constants
  syntax:
    content: public class InitRoutePath
    content.vb: Public Class InitRoutePath
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixcore.Domain.Constants.InitRoutePath.Default
  commentId: F:Mixcore.Domain.Constants.InitRoutePath.Default
  id: Default
  parent: Mixcore.Domain.Constants.InitRoutePath
  langs:
  - csharp
  - vb
  name: Default
  nameWithType: InitRoutePath.Default
  fullName: Mixcore.Domain.Constants.InitRoutePath.Default
  type: Field
  source:
    remote:
      path: src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Default
    path: ../../mix.core/src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
    startLine: 4
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Constants
  syntax:
    content: public const string Default = "/init"
    return:
      type: System.String
    content.vb: Public Const Default As String = "/init"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mixcore.Domain.Constants.InitRoutePath.Step2
  commentId: F:Mixcore.Domain.Constants.InitRoutePath.Step2
  id: Step2
  parent: Mixcore.Domain.Constants.InitRoutePath
  langs:
  - csharp
  - vb
  name: Step2
  nameWithType: InitRoutePath.Step2
  fullName: Mixcore.Domain.Constants.InitRoutePath.Step2
  type: Field
  source:
    remote:
      path: src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Step2
    path: ../../mix.core/src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
    startLine: 5
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Constants
  syntax:
    content: public const string Step2 = "/init/step2"
    return:
      type: System.String
    content.vb: Public Const Step2 As String = "/init/step2"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mixcore.Domain.Constants.InitRoutePath.Step3
  commentId: F:Mixcore.Domain.Constants.InitRoutePath.Step3
  id: Step3
  parent: Mixcore.Domain.Constants.InitRoutePath
  langs:
  - csharp
  - vb
  name: Step3
  nameWithType: InitRoutePath.Step3
  fullName: Mixcore.Domain.Constants.InitRoutePath.Step3
  type: Field
  source:
    remote:
      path: src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Step3
    path: ../../mix.core/src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
    startLine: 6
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Constants
  syntax:
    content: public const string Step3 = "/init/step3"
    return:
      type: System.String
    content.vb: Public Const Step3 As String = "/init/step3"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mixcore.Domain.Constants.InitRoutePath.Step4
  commentId: F:Mixcore.Domain.Constants.InitRoutePath.Step4
  id: Step4
  parent: Mixcore.Domain.Constants.InitRoutePath
  langs:
  - csharp
  - vb
  name: Step4
  nameWithType: InitRoutePath.Step4
  fullName: Mixcore.Domain.Constants.InitRoutePath.Step4
  type: Field
  source:
    remote:
      path: src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Step4
    path: ../../mix.core/src/applications/Mixcore/Domain/Constants/InitRoutePath.cs
    startLine: 7
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.Constants
  syntax:
    content: public const string Step4 = "/init/step4"
    return:
      type: System.String
    content.vb: Public Const Step4 As String = "/init/step4"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mixcore.Domain.Constants
  commentId: N:Mixcore.Domain.Constants
  name: Mixcore.Domain.Constants
  nameWithType: Mixcore.Domain.Constants
  fullName: Mixcore.Domain.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
