### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  commentId: T:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  id: TemplateViewModel
  parent: Mix.Lib.ViewModels.ReadOnly
  children:
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor(MixTemplate,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts
  - Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles
  langs:
  - csharp
  - vb
  name: TemplateViewModel
  nameWithType: TemplateViewModel
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: 'public class TemplateViewModel : ViewModelBase<MixCmsContext, MixTemplate, int, TemplateViewModel>'
    content.vb: >-
      Public Class TemplateViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixTemplate, Integer, TemplateViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension
  id: Extension
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: TemplateViewModel.Extension
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Extension
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string Extension { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Extension As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder
  id: FileFolder
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: FileFolder
  nameWithType: TemplateViewModel.FileFolder
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileFolder
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 7
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string FileFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileFolder As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName
  id: FileName
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: TemplateViewModel.FileName
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileName
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string FileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileName As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType
  id: FolderType
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: FolderType
  nameWithType: TemplateViewModel.FolderType
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FolderType
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public MixTemplateFolderType FolderType { get; set; }
    parameters: []
    return:
      type: MixTemplateFolderType
    content.vb: Public Property FolderType As MixTemplateFolderType
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts
  id: Scripts
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Scripts
  nameWithType: TemplateViewModel.Scripts
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Scripts
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string Scripts { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scripts As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles
  id: Styles
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: Styles
  nameWithType: TemplateViewModel.Styles
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Styles
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string Styles { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Styles As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName
  id: MixThemeName
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: MixThemeName
  nameWithType: TemplateViewModel.MixThemeName
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeName
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string MixThemeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixThemeName As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId
  id: MixThemeId
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: MixThemeId
  nameWithType: TemplateViewModel.MixThemeId
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeId
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public int MixThemeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixThemeId As Integer
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath
  commentId: P:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath
  id: FilePath
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: TemplateViewModel.FilePath
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FilePath
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FilePath As String
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: TemplateViewModel()
  nameWithType: TemplateViewModel.TemplateViewModel()
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.TemplateViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 21
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public TemplateViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor(MixTemplate,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor(MixTemplate,UnitOfWorkInfo)
  id: '#ctor(MixTemplate,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: TemplateViewModel(MixTemplate, UnitOfWorkInfo)
  nameWithType: TemplateViewModel.TemplateViewModel(MixTemplate, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.TemplateViewModel(MixTemplate, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 25
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public TemplateViewModel(MixTemplate entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixTemplate
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixTemplate, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: TemplateViewModel(UnitOfWorkInfo)
  nameWithType: TemplateViewModel.TemplateViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.TemplateViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public TemplateViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView
  commentId: M:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView
  id: ExpandView
  parent: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: TemplateViewModel.ExpandView()
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/ViewModels/ReadOnly/TemplateViewModel.cs
    startLine: 40
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels.ReadOnly
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.Lib.ViewModels.ReadOnly
  commentId: N:Mix.Lib.ViewModels.ReadOnly
  name: Mix.Lib.ViewModels.ReadOnly
  nameWithType: Mix.Lib.ViewModels.ReadOnly
  fullName: Mix.Lib.ViewModels.ReadOnly
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension
  name: Extension
  nameWithType: TemplateViewModel.Extension
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Extension
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder
  name: FileFolder
  nameWithType: TemplateViewModel.FileFolder
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileFolder
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName
  name: FileName
  nameWithType: TemplateViewModel.FileName
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FileName
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType
  name: FolderType
  nameWithType: TemplateViewModel.FolderType
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FolderType
- uid: MixTemplateFolderType
  isExternal: true
  name: MixTemplateFolderType
  nameWithType: MixTemplateFolderType
  fullName: MixTemplateFolderType
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts
  name: Scripts
  nameWithType: TemplateViewModel.Scripts
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Scripts
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles
  name: Styles
  nameWithType: TemplateViewModel.Styles
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.Styles
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName
  name: MixThemeName
  nameWithType: TemplateViewModel.MixThemeName
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeName
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId
  name: MixThemeId
  nameWithType: TemplateViewModel.MixThemeId
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.MixThemeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath
  name: FilePath
  nameWithType: TemplateViewModel.FilePath
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.FilePath
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.#ctor
  name: TemplateViewModel
  nameWithType: TemplateViewModel.TemplateViewModel
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.TemplateViewModel
- uid: MixTemplate
  isExternal: true
  name: MixTemplate
  nameWithType: MixTemplate
  fullName: MixTemplate
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView*
  commentId: Overload:Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView
  name: ExpandView
  nameWithType: TemplateViewModel.ExpandView
  fullName: Mix.Lib.ViewModels.ReadOnly.TemplateViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
