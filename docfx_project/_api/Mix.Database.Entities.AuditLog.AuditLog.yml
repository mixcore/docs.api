### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.AuditLog.AuditLog
  commentId: T:Mix.Database.Entities.AuditLog.AuditLog
  id: AuditLog
  parent: Mix.Database.Entities.AuditLog
  children:
  - Mix.Database.Entities.AuditLog.AuditLog.Body
  - Mix.Database.Entities.AuditLog.AuditLog.CreatedBy
  - Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime
  - Mix.Database.Entities.AuditLog.AuditLog.Endpoint
  - Mix.Database.Entities.AuditLog.AuditLog.Exception
  - Mix.Database.Entities.AuditLog.AuditLog.Id
  - Mix.Database.Entities.AuditLog.AuditLog.Method
  - Mix.Database.Entities.AuditLog.AuditLog.RequestIp
  - Mix.Database.Entities.AuditLog.AuditLog.Success
  langs:
  - csharp
  - vb
  name: AuditLog
  nameWithType: AuditLog
  fullName: Mix.Database.Entities.AuditLog.AuditLog
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AuditLog
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 2
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public class AuditLog
    content.vb: Public Class AuditLog
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.AuditLog.AuditLog.Id
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.Id
  id: Id
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AuditLog.Id
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Id
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property Id As Guid
  overload: Mix.Database.Entities.AuditLog.AuditLog.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.RequestIp
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.RequestIp
  id: RequestIp
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: RequestIp
  nameWithType: AuditLog.RequestIp
  fullName: Mix.Database.Entities.AuditLog.AuditLog.RequestIp
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RequestIp
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public string RequestIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RequestIp As String
  overload: Mix.Database.Entities.AuditLog.AuditLog.RequestIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.Endpoint
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.Endpoint
  id: Endpoint
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: Endpoint
  nameWithType: AuditLog.Endpoint
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Endpoint
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Endpoint
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public string Endpoint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Endpoint As String
  overload: Mix.Database.Entities.AuditLog.AuditLog.Endpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.Method
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.Method
  id: Method
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: AuditLog.Method
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Method
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Method
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public string Method { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Method As String
  overload: Mix.Database.Entities.AuditLog.AuditLog.Method*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.Body
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.Body
  id: Body
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: AuditLog.Body
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Body
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Body
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public string Body { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Body As String
  overload: Mix.Database.Entities.AuditLog.AuditLog.Body*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.Success
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.Success
  id: Success
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: AuditLog.Success
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Success
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Success
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 9
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public bool Success { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Success As Boolean
  overload: Mix.Database.Entities.AuditLog.AuditLog.Success*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.Exception
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.Exception
  id: Exception
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: AuditLog.Exception
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Exception
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Exception
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 10
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public string Exception { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Exception As String
  overload: Mix.Database.Entities.AuditLog.AuditLog.Exception*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.CreatedBy
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.CreatedBy
  id: CreatedBy
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: AuditLog.CreatedBy
  fullName: Mix.Database.Entities.AuditLog.AuditLog.CreatedBy
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 11
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Database.Entities.AuditLog.AuditLog.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime
  commentId: P:Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Database.Entities.AuditLog.AuditLog
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: AuditLog.CreatedDateTime
  fullName: Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/AuditLog.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/AuditLog.cs
    startLine: 12
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property CreatedDateTime As DateTime
  overload: Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Database.Entities.AuditLog
  commentId: N:Mix.Database.Entities.AuditLog
  name: Mix.Database.Entities.AuditLog
  nameWithType: Mix.Database.Entities.AuditLog
  fullName: Mix.Database.Entities.AuditLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.AuditLog.AuditLog.Id*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.Id
  name: Id
  nameWithType: AuditLog.Id
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Id
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Mix.Database.Entities.AuditLog.AuditLog.RequestIp*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.RequestIp
  name: RequestIp
  nameWithType: AuditLog.RequestIp
  fullName: Mix.Database.Entities.AuditLog.AuditLog.RequestIp
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.AuditLog.AuditLog.Endpoint*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.Endpoint
  name: Endpoint
  nameWithType: AuditLog.Endpoint
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Endpoint
- uid: Mix.Database.Entities.AuditLog.AuditLog.Method*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.Method
  name: Method
  nameWithType: AuditLog.Method
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Method
- uid: Mix.Database.Entities.AuditLog.AuditLog.Body*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.Body
  name: Body
  nameWithType: AuditLog.Body
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Body
- uid: Mix.Database.Entities.AuditLog.AuditLog.Success*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.Success
  name: Success
  nameWithType: AuditLog.Success
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Success
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Database.Entities.AuditLog.AuditLog.Exception*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.Exception
  name: Exception
  nameWithType: AuditLog.Exception
  fullName: Mix.Database.Entities.AuditLog.AuditLog.Exception
- uid: Mix.Database.Entities.AuditLog.AuditLog.CreatedBy*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.CreatedBy
  name: CreatedBy
  nameWithType: AuditLog.CreatedBy
  fullName: Mix.Database.Entities.AuditLog.AuditLog.CreatedBy
- uid: Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime
  name: CreatedDateTime
  nameWithType: AuditLog.CreatedDateTime
  fullName: Mix.Database.Entities.AuditLog.AuditLog.CreatedDateTime
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
