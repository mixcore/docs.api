### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Common.MenuItem
  commentId: T:Mix.Cms.Lib.Models.Common.MenuItem
  id: MenuItem
  parent: Mix.Cms.Lib.Models.Common
  children:
  - Mix.Cms.Lib.Models.Common.MenuItem.Classes
  - Mix.Cms.Lib.Models.Common.MenuItem.Description
  - Mix.Cms.Lib.Models.Common.MenuItem.Href
  - Mix.Cms.Lib.Models.Common.MenuItem.Icon
  - Mix.Cms.Lib.Models.Common.MenuItem.Id
  - Mix.Cms.Lib.Models.Common.MenuItem.IsActive
  - Mix.Cms.Lib.Models.Common.MenuItem.MenuItems
  - Mix.Cms.Lib.Models.Common.MenuItem.Obj
  - Mix.Cms.Lib.Models.Common.MenuItem.Property``1(System.String)
  - Mix.Cms.Lib.Models.Common.MenuItem.Target
  - Mix.Cms.Lib.Models.Common.MenuItem.TargetId
  - Mix.Cms.Lib.Models.Common.MenuItem.Title
  - Mix.Cms.Lib.Models.Common.MenuItem.Type
  - Mix.Cms.Lib.Models.Common.MenuItem.Uri
  langs:
  - csharp
  - vb
  name: MenuItem
  nameWithType: MenuItem
  fullName: Mix.Cms.Lib.Models.Common.MenuItem
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MenuItem
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 9
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: public class MenuItem
    content.vb: Public Class MenuItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Obj
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Obj
  id: Obj
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Obj
  nameWithType: MenuItem.Obj
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Obj
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Obj
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonIgnore]

      [JsonProperty("obj")]

      public JObject Obj { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: >-
      <JsonIgnore>

      <JsonProperty("obj")>

      Public Property Obj As JObject
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Obj*
  attributes:
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: obj
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Id
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MenuItem.Id
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 15
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Title
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Title
  id: Title
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MenuItem.Title
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Title
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 18
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("title")]

      public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("title")>

      Public Property Title As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Title*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: title
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Uri
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Uri
  id: Uri
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: MenuItem.Uri
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Uri
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Uri
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 21
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("uri")]

      public string Uri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("uri")>

      Public Property Uri As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Uri*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: uri
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Href
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Href
  id: Href
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Href
  nameWithType: MenuItem.Href
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Href
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Href
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 24
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("href")]

      public string Href { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("href")>

      Public ReadOnly Property Href As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Href*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: href
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Icon
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Icon
  id: Icon
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: MenuItem.Icon
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Icon
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 32
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("icon")]

      public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("icon")>

      Public Property Icon As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Icon*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: icon
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Type
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Type
  id: Type
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MenuItem.Type
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Type
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 35
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("type")]

      public MixMenuItemType Type { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixMenuItemType
    content.vb: >-
      <JsonProperty("type")>

      Public Property Type As MixMenuItemType
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Type*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: type
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Target
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Target
  id: Target
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: MenuItem.Target
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Target
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Target
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 38
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("target")]

      public string Target { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("target")>

      Public Property Target As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Target*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: target
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Classes
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Classes
  id: Classes
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Classes
  nameWithType: MenuItem.Classes
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Classes
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Classes
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 41
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("classes")]

      public string Classes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("classes")>

      Public Property Classes As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Classes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: classes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Description
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.Description
  id: Description
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MenuItem.Description
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Description
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 44
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("description")]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description")>

      Public Property Description As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.TargetId
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.TargetId
  id: TargetId
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: TargetId
  nameWithType: MenuItem.TargetId
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.TargetId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TargetId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 47
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("target_id")]

      public string TargetId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("target_id")>

      Public Property TargetId As String
  overload: Mix.Cms.Lib.Models.Common.MenuItem.TargetId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: target_id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.IsActive
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.IsActive
  id: IsActive
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: MenuItem.IsActive
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.IsActive
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsActive
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 50
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("isActive")]

      public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isActive")>

      Public Property IsActive As Boolean
  overload: Mix.Cms.Lib.Models.Common.MenuItem.IsActive*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isActive
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.MenuItems
  commentId: P:Mix.Cms.Lib.Models.Common.MenuItem.MenuItems
  id: MenuItems
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: MenuItems
  nameWithType: MenuItem.MenuItems
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.MenuItems
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MenuItems
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 53
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: >-
      [JsonProperty("menu_items")]

      public List<MenuItem> MenuItems { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.Models.Common.MenuItem}
    content.vb: >-
      <JsonProperty("menu_items")>

      Public Property MenuItems As List(Of MenuItem)
  overload: Mix.Cms.Lib.Models.Common.MenuItem.MenuItems*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: menu_items
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Property``1(System.String)
  commentId: M:Mix.Cms.Lib.Models.Common.MenuItem.Property``1(System.String)
  id: Property``1(System.String)
  parent: Mix.Cms.Lib.Models.Common.MenuItem
  langs:
  - csharp
  - vb
  name: Property<T>(String)
  nameWithType: MenuItem.Property<T>(String)
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Property<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Common/MenuItem.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Common/MenuItem.cs
    startLine: 56
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Common
  syntax:
    content: public T Property<T>(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Property(Of T)(fieldName As String) As T
  overload: Mix.Cms.Lib.Models.Common.MenuItem.Property*
  nameWithType.vb: MenuItem.Property(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Lib.Models.Common.MenuItem.Property(Of T)(System.String)
  name.vb: Property(Of T)(String)
references:
- uid: Mix.Cms.Lib.Models.Common
  commentId: N:Mix.Cms.Lib.Models.Common
  name: Mix.Cms.Lib.Models.Common
  nameWithType: Mix.Cms.Lib.Models.Common
  fullName: Mix.Cms.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Obj*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Obj
  name: Obj
  nameWithType: MenuItem.Obj
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Obj
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Id
  name: Id
  nameWithType: MenuItem.Id
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Title*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Title
  name: Title
  nameWithType: MenuItem.Title
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Title
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Uri*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Uri
  name: Uri
  nameWithType: MenuItem.Uri
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Uri
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Href*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Href
  name: Href
  nameWithType: MenuItem.Href
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Href
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Icon*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Icon
  name: Icon
  nameWithType: MenuItem.Icon
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Icon
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Type*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Type
  name: Type
  nameWithType: MenuItem.Type
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Type
- uid: Mix.Cms.Lib.Enums.MixMenuItemType
  commentId: T:Mix.Cms.Lib.Enums.MixMenuItemType
  parent: Mix.Cms.Lib.Enums
  name: MixMenuItemType
  nameWithType: MixMenuItemType
  fullName: Mix.Cms.Lib.Enums.MixMenuItemType
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Target*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Target
  name: Target
  nameWithType: MenuItem.Target
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Target
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Classes*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Classes
  name: Classes
  nameWithType: MenuItem.Classes
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Classes
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Description*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Description
  name: Description
  nameWithType: MenuItem.Description
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Description
- uid: Mix.Cms.Lib.Models.Common.MenuItem.TargetId*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.TargetId
  name: TargetId
  nameWithType: MenuItem.TargetId
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.TargetId
- uid: Mix.Cms.Lib.Models.Common.MenuItem.IsActive*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.IsActive
  name: IsActive
  nameWithType: MenuItem.IsActive
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.Models.Common.MenuItem.MenuItems*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.MenuItems
  name: MenuItems
  nameWithType: MenuItem.MenuItems
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.MenuItems
- uid: System.Collections.Generic.List{Mix.Cms.Lib.Models.Common.MenuItem}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.Models.Common.MenuItem}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MenuItem>
  nameWithType: List<MenuItem>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.Models.Common.MenuItem>
  nameWithType.vb: List(Of MenuItem)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.Models.Common.MenuItem)
  name.vb: List(Of MenuItem)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Common.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: Mix.Cms.Lib.Models.Common.MenuItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Common.MenuItem
    name: MenuItem
    nameWithType: MenuItem
    fullName: Mix.Cms.Lib.Models.Common.MenuItem
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.Models.Common.MenuItem.Property*
  commentId: Overload:Mix.Cms.Lib.Models.Common.MenuItem.Property
  name: Property
  nameWithType: MenuItem.Property
  fullName: Mix.Cms.Lib.Models.Common.MenuItem.Property
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
