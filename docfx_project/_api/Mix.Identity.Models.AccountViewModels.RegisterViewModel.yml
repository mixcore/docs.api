### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  commentId: T:Mix.Identity.Models.AccountViewModels.RegisterViewModel
  id: RegisterViewModel
  parent: Mix.Identity.Models.AccountViewModels
  children:
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey
  - Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName
  langs:
  - csharp
  - vb
  name: RegisterViewModel
  nameWithType: RegisterViewModel
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RegisterViewModel
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 10
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public class RegisterViewModel
    content.vb: Public Class RegisterViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName
  id: UserName
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: RegisterViewModel.UserName
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserName
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 12
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [Required]

      public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property UserName As String
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email
  id: Email
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: RegisterViewModel.Email
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Email
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 14
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber
  id: PhoneNumber
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: RegisterViewModel.PhoneNumber
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PhoneNumber
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 15
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneNumber As String
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider
  id: Provider
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: RegisterViewModel.Provider
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Provider
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 16
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public MixExternalLoginProviders? Provider { get; set; }
    parameters: []
    return:
      type: System.Nullable{Mix.Identity.Constants.MixExternalLoginProviders}
    content.vb: Public Property Provider As MixExternalLoginProviders?
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey
  id: ProviderKey
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: ProviderKey
  nameWithType: RegisterViewModel.ProviderKey
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ProviderKey
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 17
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string ProviderKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ProviderKey As String
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password
  id: Password
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Password
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 18
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  id: ConfirmPassword
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConfirmPassword
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 19
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [DataType(DataType.Password)]

      public string ConfirmPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataType(DataType.Password)>

      Public Property ConfirmPassword As String
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data
  commentId: P:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data
  id: Data
  parent: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: RegisterViewModel.Data
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/platform/mix.identity/Models/AccountViewModels/RegisterViewModel.cs
    startLine: 22
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public JObject Data { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Property Data As JObject
  overload: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Models.AccountViewModels
  commentId: N:Mix.Identity.Models.AccountViewModels
  name: Mix.Identity.Models.AccountViewModels
  nameWithType: Mix.Identity.Models.AccountViewModels
  fullName: Mix.Identity.Models.AccountViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName
  name: UserName
  nameWithType: RegisterViewModel.UserName
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.UserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email
  name: Email
  nameWithType: RegisterViewModel.Email
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Email
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber
  name: PhoneNumber
  nameWithType: RegisterViewModel.PhoneNumber
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.PhoneNumber
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider
  name: Provider
  nameWithType: RegisterViewModel.Provider
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Provider
- uid: System.Nullable{Mix.Identity.Constants.MixExternalLoginProviders}
  commentId: T:System.Nullable{Mix.Identity.Constants.MixExternalLoginProviders}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MixExternalLoginProviders>
  nameWithType: Nullable<MixExternalLoginProviders>
  fullName: System.Nullable<Mix.Identity.Constants.MixExternalLoginProviders>
  nameWithType.vb: Nullable(Of MixExternalLoginProviders)
  fullName.vb: System.Nullable(Of Mix.Identity.Constants.MixExternalLoginProviders)
  name.vb: Nullable(Of MixExternalLoginProviders)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Identity.Constants.MixExternalLoginProviders
    name: MixExternalLoginProviders
    nameWithType: MixExternalLoginProviders
    fullName: Mix.Identity.Constants.MixExternalLoginProviders
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Identity.Constants.MixExternalLoginProviders
    name: MixExternalLoginProviders
    nameWithType: MixExternalLoginProviders
    fullName: Mix.Identity.Constants.MixExternalLoginProviders
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey
  name: ProviderKey
  nameWithType: RegisterViewModel.ProviderKey
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ProviderKey
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password
  name: Password
  nameWithType: RegisterViewModel.Password
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Password
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
  name: ConfirmPassword
  nameWithType: RegisterViewModel.ConfirmPassword
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.ConfirmPassword
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data
  name: Data
  nameWithType: RegisterViewModel.Data
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel.Data
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
