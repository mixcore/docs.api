### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixDataViewModel
  id: MixDataViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(MixData,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(System.String,System.Int32,System.String,JObject)
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName
  - Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent
  langs:
  - csharp
  - vb
  name: MixDataViewModel
  nameWithType: MixDataViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDataViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixDataViewModel : SiteDataWithContentViewModelBase<MixCmsContext, MixData, Guid, MixDataViewModel, MixDataContent, MixDataContentViewModel>'
    content.vb: >-
      Public Class MixDataViewModel
          Inherits SiteDataWithContentViewModelBase(Of MixCmsContext, MixData, Guid, MixDataViewModel, MixDataContent, MixDataContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId
  commentId: P:Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId
  id: MixDatabaseId
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseId
  nameWithType: MixDataViewModel.MixDatabaseId
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseId
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 6
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public int MixDatabaseId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseId As Integer
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName
  commentId: P:Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: MixDataViewModel.MixDatabaseName
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 7
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent
  commentId: P:Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent
  id: SaveDataContent
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: SaveDataContent
  nameWithType: MixDataViewModel.SaveDataContent
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveDataContent
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 9
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixDataContentViewModel SaveDataContent { get; set; }
    parameters: []
    return:
      type: MixDataContentViewModel
    content.vb: Public Property SaveDataContent As MixDataContentViewModel
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: MixDataViewModel()
  nameWithType: MixDataViewModel.MixDataViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDataViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 14
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixDataViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: MixDataViewModel(UnitOfWorkInfo)
  nameWithType: MixDataViewModel.MixDataViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDataViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 19
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixDataViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(System.String,System.Int32,System.String,JObject)
  commentId: M:Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(System.String,System.Int32,System.String,JObject)
  id: '#ctor(System.String,System.Int32,System.String,JObject)'
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: MixDataViewModel(String, Int32, String, JObject)
  nameWithType: MixDataViewModel.MixDataViewModel(String, Int32, String, JObject)
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDataViewModel(System.String, System.Int32, System.String, JObject)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 23
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixDataViewModel(string lang, int cultureId, string databaseName, JObject data)
    parameters:
    - id: lang
      type: System.String
    - id: cultureId
      type: System.Int32
    - id: databaseName
      type: System.String
    - id: data
      type: JObject
    content.vb: Public Sub New(lang As String, cultureId As Integer, databaseName As String, data As JObject)
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(MixData,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor(MixData,UnitOfWorkInfo)
  id: '#ctor(MixData,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: MixDataViewModel(MixData, UnitOfWorkInfo)
  nameWithType: MixDataViewModel.MixDataViewModel(MixData, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDataViewModel(MixData, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 29
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixDataViewModel(MixData entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixData
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixData, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView
  commentId: M:Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView
  id: ExpandView
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixDataViewModel.ExpandView()
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 39
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  id: InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Portal.Domain.ViewModels.MixDataViewModel
  langs:
  - csharp
  - vb
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MixDataViewModel.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDefaultValues
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixDataViewModel.cs
    startLine: 45
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public override void InitDefaultValues(string language = null, int? cultureId = default(int? ))
    parameters:
    - id: language
      type: System.String
    - id: cultureId
      type: System.Nullable{System.Int32}
    content.vb: Public Overrides Sub InitDefaultValues(language As String = Nothing, cultureId As Integer? = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues*
  nameWithType.vb: MixDataViewModel.InitDefaultValues(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId
  name: MixDatabaseId
  nameWithType: MixDataViewModel.MixDatabaseId
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName
  name: MixDatabaseName
  nameWithType: MixDataViewModel.MixDatabaseName
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent
  name: SaveDataContent
  nameWithType: MixDataViewModel.SaveDataContent
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.SaveDataContent
- uid: MixDataContentViewModel
  commentId: '!:MixDataContentViewModel'
  isExternal: true
  name: MixDataContentViewModel
  nameWithType: MixDataContentViewModel
  fullName: MixDataContentViewModel
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixDataViewModel.#ctor
  name: MixDataViewModel
  nameWithType: MixDataViewModel.MixDataViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.MixDataViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: MixData
  isExternal: true
  name: MixData
  nameWithType: MixData
  fullName: MixData
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView
  name: ExpandView
  nameWithType: MixDataViewModel.ExpandView
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues
  name: InitDefaultValues
  nameWithType: MixDataViewModel.InitDefaultValues
  fullName: Mix.Portal.Domain.ViewModels.MixDataViewModel.InitDefaultValues
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
