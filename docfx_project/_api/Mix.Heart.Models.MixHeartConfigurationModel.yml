### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Models.MixHeartConfigurationModel
  commentId: T:Mix.Heart.Models.MixHeartConfigurationModel
  id: MixHeartConfigurationModel
  parent: Mix.Heart.Models
  children:
  - Mix.Heart.Models.MixHeartConfigurationModel.#ctor
  - Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection
  - Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder
  - Mix.Heart.Models.MixHeartConfigurationModel.CacheMode
  - Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider
  - Mix.Heart.Models.MixHeartConfigurationModel.IsCache
  langs:
  - csharp
  - vb
  name: MixHeartConfigurationModel
  nameWithType: MixHeartConfigurationModel
  fullName: Mix.Heart.Models.MixHeartConfigurationModel
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: MixHeartConfigurationModel
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 4
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public class MixHeartConfigurationModel
    content.vb: Public Class MixHeartConfigurationModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection
  commentId: P:Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection
  id: CacheConnection
  parent: Mix.Heart.Models.MixHeartConfigurationModel
  langs:
  - csharp
  - vb
  name: CacheConnection
  nameWithType: MixHeartConfigurationModel.CacheConnection
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: CacheConnection
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 6
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public string CacheConnection { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CacheConnection As String
  overload: Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.MixHeartConfigurationModel.IsCache
  commentId: P:Mix.Heart.Models.MixHeartConfigurationModel.IsCache
  id: IsCache
  parent: Mix.Heart.Models.MixHeartConfigurationModel
  langs:
  - csharp
  - vb
  name: IsCache
  nameWithType: MixHeartConfigurationModel.IsCache
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.IsCache
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: IsCache
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 7
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public bool IsCache { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCache As Boolean
  overload: Mix.Heart.Models.MixHeartConfigurationModel.IsCache*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.MixHeartConfigurationModel.CacheMode
  commentId: P:Mix.Heart.Models.MixHeartConfigurationModel.CacheMode
  id: CacheMode
  parent: Mix.Heart.Models.MixHeartConfigurationModel
  langs:
  - csharp
  - vb
  name: CacheMode
  nameWithType: MixHeartConfigurationModel.CacheMode
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.CacheMode
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: CacheMode
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 8
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public MixCacheMode CacheMode { get; set; }
    parameters: []
    return:
      type: Mix.Heart.Enums.MixCacheMode
    content.vb: Public Property CacheMode As MixCacheMode
  overload: Mix.Heart.Models.MixHeartConfigurationModel.CacheMode*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider
  commentId: P:Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider
  id: DatabaseProvider
  parent: Mix.Heart.Models.MixHeartConfigurationModel
  langs:
  - csharp
  - vb
  name: DatabaseProvider
  nameWithType: MixHeartConfigurationModel.DatabaseProvider
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: DatabaseProvider
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 9
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public MixDatabaseProvider DatabaseProvider { get; set; }
    parameters: []
    return:
      type: Mix.Heart.Enums.MixDatabaseProvider
    content.vb: Public Property DatabaseProvider As MixDatabaseProvider
  overload: Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder
  commentId: P:Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder
  id: CacheFolder
  parent: Mix.Heart.Models.MixHeartConfigurationModel
  langs:
  - csharp
  - vb
  name: CacheFolder
  nameWithType: MixHeartConfigurationModel.CacheFolder
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: CacheFolder
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public string CacheFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CacheFolder As String
  overload: Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.MixHeartConfigurationModel.#ctor
  commentId: M:Mix.Heart.Models.MixHeartConfigurationModel.#ctor
  id: '#ctor'
  parent: Mix.Heart.Models.MixHeartConfigurationModel
  langs:
  - csharp
  - vb
  name: MixHeartConfigurationModel()
  nameWithType: MixHeartConfigurationModel.MixHeartConfigurationModel()
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.MixHeartConfigurationModel()
  type: Constructor
  source:
    remote:
      path: src/Mix.Heart/Model/MixHeartConfigurationModel.cs
      branch: f1bc78bfdfbe944f6c2070f069bbcc6ed9c06436
      repo: https://github.com/mixcore/mix.heart.git
    id: .ctor
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/MixHeartConfigurationModel.cs
    startLine: 11
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public MixHeartConfigurationModel()
    content.vb: Public Sub New
  overload: Mix.Heart.Models.MixHeartConfigurationModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Heart.Models
  commentId: N:Mix.Heart.Models
  name: Mix.Heart.Models
  nameWithType: Mix.Heart.Models
  fullName: Mix.Heart.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection*
  commentId: Overload:Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection
  name: CacheConnection
  nameWithType: MixHeartConfigurationModel.CacheConnection
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.CacheConnection
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Models.MixHeartConfigurationModel.IsCache*
  commentId: Overload:Mix.Heart.Models.MixHeartConfigurationModel.IsCache
  name: IsCache
  nameWithType: MixHeartConfigurationModel.IsCache
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.IsCache
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Heart.Models.MixHeartConfigurationModel.CacheMode*
  commentId: Overload:Mix.Heart.Models.MixHeartConfigurationModel.CacheMode
  name: CacheMode
  nameWithType: MixHeartConfigurationModel.CacheMode
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.CacheMode
- uid: Mix.Heart.Enums.MixCacheMode
  commentId: T:Mix.Heart.Enums.MixCacheMode
  parent: Mix.Heart.Enums
  name: MixCacheMode
  nameWithType: MixCacheMode
  fullName: Mix.Heart.Enums.MixCacheMode
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
- uid: Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider*
  commentId: Overload:Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider
  name: DatabaseProvider
  nameWithType: MixHeartConfigurationModel.DatabaseProvider
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.DatabaseProvider
- uid: Mix.Heart.Enums.MixDatabaseProvider
  commentId: T:Mix.Heart.Enums.MixDatabaseProvider
  parent: Mix.Heart.Enums
  name: MixDatabaseProvider
  nameWithType: MixDatabaseProvider
  fullName: Mix.Heart.Enums.MixDatabaseProvider
- uid: Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder*
  commentId: Overload:Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder
  name: CacheFolder
  nameWithType: MixHeartConfigurationModel.CacheFolder
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.CacheFolder
- uid: Mix.Heart.Models.MixHeartConfigurationModel.#ctor*
  commentId: Overload:Mix.Heart.Models.MixHeartConfigurationModel.#ctor
  name: MixHeartConfigurationModel
  nameWithType: MixHeartConfigurationModel.MixHeartConfigurationModel
  fullName: Mix.Heart.Models.MixHeartConfigurationModel.MixHeartConfigurationModel
