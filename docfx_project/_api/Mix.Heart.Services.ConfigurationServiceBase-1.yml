### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Services.ConfigurationServiceBase`1
  commentId: T:Mix.Heart.Services.ConfigurationServiceBase`1
  id: ConfigurationServiceBase`1
  parent: Mix.Heart.Services
  children:
  - Mix.Heart.Services.ConfigurationServiceBase`1.#ctor(System.String)
  - Mix.Heart.Services.ConfigurationServiceBase`1.#ctor(System.String,System.Boolean)
  - Mix.Heart.Services.ConfigurationServiceBase`1._isEncrypt
  - Mix.Heart.Services.ConfigurationServiceBase`1.AesKey
  - Mix.Heart.Services.ConfigurationServiceBase`1.AppSettings
  - Mix.Heart.Services.ConfigurationServiceBase`1.FilePath
  - Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig``1(System.String,``0)
  - Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig``1(System.String,System.String,``0)
  - Mix.Heart.Services.ConfigurationServiceBase`1.GetEnumConfig``1(System.String)
  - Mix.Heart.Services.ConfigurationServiceBase`1.LoadAppSettings
  - Mix.Heart.Services.ConfigurationServiceBase`1.SaveSettings
  - Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig``1(System.String,``0)
  - Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig``1(System.String,System.String,``0)
  - Mix.Heart.Services.ConfigurationServiceBase`1.watcher
  - Mix.Heart.Services.ConfigurationServiceBase`1.WatchFile
  langs:
  - csharp
  - vb
  name: ConfigurationServiceBase<T>
  nameWithType: ConfigurationServiceBase<T>
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: ConfigurationServiceBase
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public class ConfigurationServiceBase<T>
    typeParameters:
    - id: T
    content.vb: Public Class ConfigurationServiceBase(Of T)
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Database.Services.DatabaseService
  - Mix.Shared.Services.MixHeartConfigService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ConfigurationServiceBase(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T)
  name.vb: ConfigurationServiceBase(Of T)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1._isEncrypt
  commentId: F:Mix.Heart.Services.ConfigurationServiceBase`1._isEncrypt
  id: _isEncrypt
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: _isEncrypt
  nameWithType: ConfigurationServiceBase<T>._isEncrypt
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>._isEncrypt
  type: Field
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: _isEncrypt
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 14
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: protected bool _isEncrypt
    return:
      type: System.Boolean
    content.vb: Protected _isEncrypt As Boolean
  nameWithType.vb: ConfigurationServiceBase(Of T)._isEncrypt
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T)._isEncrypt
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.AesKey
  commentId: P:Mix.Heart.Services.ConfigurationServiceBase`1.AesKey
  id: AesKey
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: AesKey
  nameWithType: ConfigurationServiceBase<T>.AesKey
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.AesKey
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: AesKey
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 15
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public string AesKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AesKey As String
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.AesKey*
  nameWithType.vb: ConfigurationServiceBase(Of T).AesKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).AesKey
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.AppSettings
  commentId: P:Mix.Heart.Services.ConfigurationServiceBase`1.AppSettings
  id: AppSettings
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: AppSettings
  nameWithType: ConfigurationServiceBase<T>.AppSettings
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.AppSettings
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: AppSettings
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 16
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public T AppSettings { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property AppSettings As T
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.AppSettings*
  nameWithType.vb: ConfigurationServiceBase(Of T).AppSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).AppSettings
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.FilePath
  commentId: P:Mix.Heart.Services.ConfigurationServiceBase`1.FilePath
  id: FilePath
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: ConfigurationServiceBase<T>.FilePath
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.FilePath
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: FilePath
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 17
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: protected string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property FilePath As String
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.FilePath*
  nameWithType.vb: ConfigurationServiceBase(Of T).FilePath
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).FilePath
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.watcher
  commentId: F:Mix.Heart.Services.ConfigurationServiceBase`1.watcher
  id: watcher
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: watcher
  nameWithType: ConfigurationServiceBase<T>.watcher
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.watcher
  type: Field
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: watcher
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 19
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: protected readonly FileSystemWatcher watcher
    return:
      type: System.IO.FileSystemWatcher
    content.vb: Protected ReadOnly watcher As FileSystemWatcher
  nameWithType.vb: ConfigurationServiceBase(Of T).watcher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).watcher
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.#ctor(System.String)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: ConfigurationServiceBase(String)
  nameWithType: ConfigurationServiceBase<T>.ConfigurationServiceBase(String)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.ConfigurationServiceBase(System.String)
  type: Constructor
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: .ctor
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 21
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public ConfigurationServiceBase(string filePath)
    parameters:
    - id: filePath
      type: System.String
    content.vb: Public Sub New(filePath As String)
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.#ctor*
  nameWithType.vb: ConfigurationServiceBase(Of T).ConfigurationServiceBase(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).ConfigurationServiceBase(System.String)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.#ctor(System.String,System.Boolean)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: ConfigurationServiceBase(String, Boolean)
  nameWithType: ConfigurationServiceBase<T>.ConfigurationServiceBase(String, Boolean)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.ConfigurationServiceBase(System.String, System.Boolean)
  type: Constructor
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: .ctor
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 27
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public ConfigurationServiceBase(string filePath, bool isEncrypt)
    parameters:
    - id: filePath
      type: System.String
    - id: isEncrypt
      type: System.Boolean
    content.vb: Public Sub New(filePath As String, isEncrypt As Boolean)
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.#ctor*
  nameWithType.vb: ConfigurationServiceBase(Of T).ConfigurationServiceBase(String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).ConfigurationServiceBase(System.String, System.Boolean)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig``1(System.String,``0)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig``1(System.String,``0)
  id: GetConfig``1(System.String,``0)
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: GetConfig<TValue>(String, TValue)
  nameWithType: ConfigurationServiceBase<T>.GetConfig<TValue>(String, TValue)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.GetConfig<TValue>(System.String, TValue)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: GetConfig
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 35
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public TValue GetConfig<TValue>(string name, TValue defaultValue = null)
    parameters:
    - id: name
      type: System.String
    - id: defaultValue
      type: '{TValue}'
    typeParameters:
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Function GetConfig(Of TValue)(name As String, defaultValue As TValue = Nothing) As TValue
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig*
  nameWithType.vb: ConfigurationServiceBase(Of T).GetConfig(Of TValue)(String, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).GetConfig(Of TValue)(System.String, TValue)
  name.vb: GetConfig(Of TValue)(String, TValue)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig``1(System.String,System.String,``0)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig``1(System.String,System.String,``0)
  id: GetConfig``1(System.String,System.String,``0)
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: GetConfig<TValue>(String, String, TValue)
  nameWithType: ConfigurationServiceBase<T>.GetConfig<TValue>(String, String, TValue)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.GetConfig<TValue>(System.String, System.String, TValue)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: GetConfig
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 41
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public TValue GetConfig<TValue>(string culture, string name, TValue defaultValue = null)
    parameters:
    - id: culture
      type: System.String
    - id: name
      type: System.String
    - id: defaultValue
      type: '{TValue}'
    typeParameters:
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Function GetConfig(Of TValue)(culture As String, name As String, defaultValue As TValue = Nothing) As TValue
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig*
  nameWithType.vb: ConfigurationServiceBase(Of T).GetConfig(Of TValue)(String, String, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).GetConfig(Of TValue)(System.String, System.String, TValue)
  name.vb: GetConfig(Of TValue)(String, String, TValue)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.GetEnumConfig``1(System.String)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.GetEnumConfig``1(System.String)
  id: GetEnumConfig``1(System.String)
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: GetEnumConfig<TValue>(String)
  nameWithType: ConfigurationServiceBase<T>.GetEnumConfig<TValue>(String)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.GetEnumConfig<TValue>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: GetEnumConfig
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 51
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public TValue GetEnumConfig<TValue>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: TValue
    return:
      type: '{TValue}'
    content.vb: Public Function GetEnumConfig(Of TValue)(name As String) As TValue
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.GetEnumConfig*
  nameWithType.vb: ConfigurationServiceBase(Of T).GetEnumConfig(Of TValue)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).GetEnumConfig(Of TValue)(System.String)
  name.vb: GetEnumConfig(Of TValue)(String)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig``1(System.String,``0)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig``1(System.String,``0)
  id: SetConfig``1(System.String,``0)
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: SetConfig<TValue>(String, TValue)
  nameWithType: ConfigurationServiceBase<T>.SetConfig<TValue>(String, TValue)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.SetConfig<TValue>(System.String, TValue)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: SetConfig
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 57
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public void SetConfig<TValue>(string name, TValue value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{TValue}'
    typeParameters:
    - id: TValue
    content.vb: Public Sub SetConfig(Of TValue)(name As String, value As TValue)
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig*
  nameWithType.vb: ConfigurationServiceBase(Of T).SetConfig(Of TValue)(String, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).SetConfig(Of TValue)(System.String, TValue)
  name.vb: SetConfig(Of TValue)(String, TValue)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig``1(System.String,System.String,``0)
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig``1(System.String,System.String,``0)
  id: SetConfig``1(System.String,System.String,``0)
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: SetConfig<TValue>(String, String, TValue)
  nameWithType: ConfigurationServiceBase<T>.SetConfig<TValue>(String, String, TValue)
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.SetConfig<TValue>(System.String, System.String, TValue)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: SetConfig
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 64
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public void SetConfig<TValue>(string culture, string name, TValue value)
    parameters:
    - id: culture
      type: System.String
    - id: name
      type: System.String
    - id: value
      type: '{TValue}'
    typeParameters:
    - id: TValue
    content.vb: Public Sub SetConfig(Of TValue)(culture As String, name As String, value As TValue)
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig*
  nameWithType.vb: ConfigurationServiceBase(Of T).SetConfig(Of TValue)(String, String, TValue)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).SetConfig(Of TValue)(System.String, System.String, TValue)
  name.vb: SetConfig(Of TValue)(String, String, TValue)
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.SaveSettings
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.SaveSettings
  id: SaveSettings
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: SaveSettings()
  nameWithType: ConfigurationServiceBase<T>.SaveSettings()
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.SaveSettings()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: SaveSettings
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 71
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: public bool SaveSettings()
    return:
      type: System.Boolean
    content.vb: Public Function SaveSettings As Boolean
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.SaveSettings*
  nameWithType.vb: ConfigurationServiceBase(Of T).SaveSettings()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).SaveSettings()
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.WatchFile
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.WatchFile
  id: WatchFile
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: WatchFile()
  nameWithType: ConfigurationServiceBase<T>.WatchFile()
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.WatchFile()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: WatchFile
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 89
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: protected void WatchFile()
    content.vb: Protected Sub WatchFile
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.WatchFile*
  nameWithType.vb: ConfigurationServiceBase(Of T).WatchFile()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).WatchFile()
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.LoadAppSettings
  commentId: M:Mix.Heart.Services.ConfigurationServiceBase`1.LoadAppSettings
  id: LoadAppSettings
  parent: Mix.Heart.Services.ConfigurationServiceBase`1
  langs:
  - csharp
  - vb
  name: LoadAppSettings()
  nameWithType: ConfigurationServiceBase<T>.LoadAppSettings()
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.LoadAppSettings()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Services/ConfigurationServiceBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: LoadAppSettings
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Services/ConfigurationServiceBase.cs
    startLine: 103
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Services
  syntax:
    content: protected virtual void LoadAppSettings()
    content.vb: Protected Overridable Sub LoadAppSettings
  overload: Mix.Heart.Services.ConfigurationServiceBase`1.LoadAppSettings*
  nameWithType.vb: ConfigurationServiceBase(Of T).LoadAppSettings()
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).LoadAppSettings()
references:
- uid: Mix.Heart.Services
  commentId: N:Mix.Heart.Services
  name: Mix.Heart.Services
  nameWithType: Mix.Heart.Services
  fullName: Mix.Heart.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.AesKey*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.AesKey
  name: AesKey
  nameWithType: ConfigurationServiceBase<T>.AesKey
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.AesKey
  nameWithType.vb: ConfigurationServiceBase(Of T).AesKey
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).AesKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.AppSettings*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.AppSettings
  name: AppSettings
  nameWithType: ConfigurationServiceBase<T>.AppSettings
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.AppSettings
  nameWithType.vb: ConfigurationServiceBase(Of T).AppSettings
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).AppSettings
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.FilePath*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.FilePath
  name: FilePath
  nameWithType: ConfigurationServiceBase<T>.FilePath
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.FilePath
  nameWithType.vb: ConfigurationServiceBase(Of T).FilePath
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).FilePath
- uid: System.IO.FileSystemWatcher
  commentId: T:System.IO.FileSystemWatcher
  parent: System.IO
  isExternal: true
  name: FileSystemWatcher
  nameWithType: FileSystemWatcher
  fullName: System.IO.FileSystemWatcher
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.#ctor*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.#ctor
  name: ConfigurationServiceBase
  nameWithType: ConfigurationServiceBase<T>.ConfigurationServiceBase
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.ConfigurationServiceBase
  nameWithType.vb: ConfigurationServiceBase(Of T).ConfigurationServiceBase
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).ConfigurationServiceBase
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.GetConfig
  name: GetConfig
  nameWithType: ConfigurationServiceBase<T>.GetConfig
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.GetConfig
  nameWithType.vb: ConfigurationServiceBase(Of T).GetConfig
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).GetConfig
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.GetEnumConfig*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.GetEnumConfig
  name: GetEnumConfig
  nameWithType: ConfigurationServiceBase<T>.GetEnumConfig
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.GetEnumConfig
  nameWithType.vb: ConfigurationServiceBase(Of T).GetEnumConfig
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).GetEnumConfig
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.SetConfig
  name: SetConfig
  nameWithType: ConfigurationServiceBase<T>.SetConfig
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.SetConfig
  nameWithType.vb: ConfigurationServiceBase(Of T).SetConfig
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).SetConfig
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.SaveSettings*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.SaveSettings
  name: SaveSettings
  nameWithType: ConfigurationServiceBase<T>.SaveSettings
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.SaveSettings
  nameWithType.vb: ConfigurationServiceBase(Of T).SaveSettings
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).SaveSettings
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.WatchFile*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.WatchFile
  name: WatchFile
  nameWithType: ConfigurationServiceBase<T>.WatchFile
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.WatchFile
  nameWithType.vb: ConfigurationServiceBase(Of T).WatchFile
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).WatchFile
- uid: Mix.Heart.Services.ConfigurationServiceBase`1.LoadAppSettings*
  commentId: Overload:Mix.Heart.Services.ConfigurationServiceBase`1.LoadAppSettings
  name: LoadAppSettings
  nameWithType: ConfigurationServiceBase<T>.LoadAppSettings
  fullName: Mix.Heart.Services.ConfigurationServiceBase<T>.LoadAppSettings
  nameWithType.vb: ConfigurationServiceBase(Of T).LoadAppSettings
  fullName.vb: Mix.Heart.Services.ConfigurationServiceBase(Of T).LoadAppSettings
