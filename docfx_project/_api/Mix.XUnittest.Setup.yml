### YamlMime:ManagedReference
items:
- uid: Mix.XUnittest.Setup
  commentId: T:Mix.XUnittest.Setup
  id: Setup
  parent: Mix.XUnittest
  children:
  - Mix.XUnittest.Setup.Configuration
  - Mix.XUnittest.Setup.Configure
  langs:
  - csharp
  - vb
  name: Setup
  nameWithType: Setup
  fullName: Mix.XUnittest.Setup
  type: Class
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Setup.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Setup
    path: ../../mix.core/src/test/mix.xunittest/Domain/Setup.cs
    startLine: 11
  assemblies:
  - mix.xunittest
  namespace: Mix.XUnittest
  syntax:
    content: 'public class Setup : Setup'
    content.vb: >-
      Public Class Setup
          Inherits Setup
  inheritance:
  - System.Object
  - Xunit.Di.Setup
  inheritedMembers:
  - Xunit.Di.Setup.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})
  - Xunit.Di.Setup.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})
  - Xunit.Di.Setup.Services
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.XUnittest.Setup.Configuration
  commentId: P:Mix.XUnittest.Setup.Configuration
  id: Configuration
  parent: Mix.XUnittest.Setup
  langs:
  - csharp
  - vb
  name: Configuration
  nameWithType: Setup.Configuration
  fullName: Mix.XUnittest.Setup.Configuration
  type: Property
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Setup.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configuration
    path: ../../mix.core/src/test/mix.xunittest/Domain/Setup.cs
    startLine: 13
  assemblies:
  - mix.xunittest
  namespace: Mix.XUnittest
  syntax:
    content: public IConfiguration Configuration { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Public ReadOnly Property Configuration As IConfiguration
  overload: Mix.XUnittest.Setup.Configuration*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.XUnittest.Setup.Configure
  commentId: M:Mix.XUnittest.Setup.Configure
  id: Configure
  parent: Mix.XUnittest.Setup
  langs:
  - csharp
  - vb
  name: Configure()
  nameWithType: Setup.Configure()
  fullName: Mix.XUnittest.Setup.Configure()
  type: Method
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Setup.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configure
    path: ../../mix.core/src/test/mix.xunittest/Domain/Setup.cs
    startLine: 14
  assemblies:
  - mix.xunittest
  namespace: Mix.XUnittest
  syntax:
    content: protected override void Configure()
    content.vb: Protected Overrides Sub Configure
  overridden: Xunit.Di.Setup.Configure
  overload: Mix.XUnittest.Setup.Configure*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.XUnittest
  commentId: N:Mix.XUnittest
  name: Mix.XUnittest
  nameWithType: Mix.XUnittest
  fullName: Mix.XUnittest
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Xunit.Di.Setup
  commentId: T:Xunit.Di.Setup
  parent: Xunit.Di
  isExternal: true
  name: Setup
  nameWithType: Setup
  fullName: Xunit.Di.Setup
- uid: Xunit.Di.Setup.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})
  commentId: M:Xunit.Di.Setup.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})
  parent: Xunit.Di.Setup
  isExternal: true
  name: ConfigureAppConfiguration(Action<HostBuilderContext, IConfigurationBuilder>)
  nameWithType: Setup.ConfigureAppConfiguration(Action<HostBuilderContext, IConfigurationBuilder>)
  fullName: Xunit.Di.Setup.ConfigureAppConfiguration(System.Action<Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.Configuration.IConfigurationBuilder>)
  nameWithType.vb: Setup.ConfigureAppConfiguration(Action(Of HostBuilderContext, IConfigurationBuilder))
  fullName.vb: Xunit.Di.Setup.ConfigureAppConfiguration(System.Action(Of Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.Configuration.IConfigurationBuilder))
  name.vb: ConfigureAppConfiguration(Action(Of HostBuilderContext, IConfigurationBuilder))
  spec.csharp:
  - uid: Xunit.Di.Setup.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})
    name: ConfigureAppConfiguration
    nameWithType: Setup.ConfigureAppConfiguration
    fullName: Xunit.Di.Setup.ConfigureAppConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Hosting.HostBuilderContext
    name: HostBuilderContext
    nameWithType: HostBuilderContext
    fullName: Microsoft.Extensions.Hosting.HostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Di.Setup.ConfigureAppConfiguration(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.Configuration.IConfigurationBuilder})
    name: ConfigureAppConfiguration
    nameWithType: Setup.ConfigureAppConfiguration
    fullName: Xunit.Di.Setup.ConfigureAppConfiguration
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Hosting.HostBuilderContext
    name: HostBuilderContext
    nameWithType: HostBuilderContext
    fullName: Microsoft.Extensions.Hosting.HostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Configuration.IConfigurationBuilder
    name: IConfigurationBuilder
    nameWithType: IConfigurationBuilder
    fullName: Microsoft.Extensions.Configuration.IConfigurationBuilder
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Di.Setup.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})
  commentId: M:Xunit.Di.Setup.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})
  parent: Xunit.Di.Setup
  isExternal: true
  name: ConfigureServices(Action<HostBuilderContext, IServiceCollection>)
  nameWithType: Setup.ConfigureServices(Action<HostBuilderContext, IServiceCollection>)
  fullName: Xunit.Di.Setup.ConfigureServices(System.Action<Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection>)
  nameWithType.vb: Setup.ConfigureServices(Action(Of HostBuilderContext, IServiceCollection))
  fullName.vb: Xunit.Di.Setup.ConfigureServices(System.Action(Of Microsoft.Extensions.Hosting.HostBuilderContext, Microsoft.Extensions.DependencyInjection.IServiceCollection))
  name.vb: ConfigureServices(Action(Of HostBuilderContext, IServiceCollection))
  spec.csharp:
  - uid: Xunit.Di.Setup.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: ConfigureServices
    nameWithType: Setup.ConfigureServices
    fullName: Xunit.Di.Setup.ConfigureServices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Extensions.Hosting.HostBuilderContext
    name: HostBuilderContext
    nameWithType: HostBuilderContext
    fullName: Microsoft.Extensions.Hosting.HostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Di.Setup.ConfigureServices(System.Action{Microsoft.Extensions.Hosting.HostBuilderContext,Microsoft.Extensions.DependencyInjection.IServiceCollection})
    name: ConfigureServices
    nameWithType: Setup.ConfigureServices
    fullName: Xunit.Di.Setup.ConfigureServices
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Action`2
    name: Action
    nameWithType: Action
    fullName: System.Action
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Extensions.Hosting.HostBuilderContext
    name: HostBuilderContext
    nameWithType: HostBuilderContext
    fullName: Microsoft.Extensions.Hosting.HostBuilderContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.DependencyInjection.IServiceCollection
    name: IServiceCollection
    nameWithType: IServiceCollection
    fullName: Microsoft.Extensions.DependencyInjection.IServiceCollection
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Xunit.Di.Setup.Services
  commentId: P:Xunit.Di.Setup.Services
  parent: Xunit.Di.Setup
  isExternal: true
  name: Services
  nameWithType: Setup.Services
  fullName: Xunit.Di.Setup.Services
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Xunit.Di
  commentId: N:Xunit.Di
  isExternal: true
  name: Xunit.Di
  nameWithType: Xunit.Di
  fullName: Xunit.Di
- uid: Mix.XUnittest.Setup.Configuration*
  commentId: Overload:Mix.XUnittest.Setup.Configuration
  name: Configuration
  nameWithType: Setup.Configuration
  fullName: Mix.XUnittest.Setup.Configuration
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Xunit.Di.Setup.Configure
  commentId: M:Xunit.Di.Setup.Configure
  parent: Xunit.Di.Setup
  isExternal: true
  name: Configure()
  nameWithType: Setup.Configure()
  fullName: Xunit.Di.Setup.Configure()
  spec.csharp:
  - uid: Xunit.Di.Setup.Configure
    name: Configure
    nameWithType: Setup.Configure
    fullName: Xunit.Di.Setup.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Xunit.Di.Setup.Configure
    name: Configure
    nameWithType: Setup.Configure
    fullName: Xunit.Di.Setup.Configure
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.XUnittest.Setup.Configure*
  commentId: Overload:Mix.XUnittest.Setup.Configure
  name: Configure
  nameWithType: Setup.Configure
  fullName: Mix.XUnittest.Setup.Configure
