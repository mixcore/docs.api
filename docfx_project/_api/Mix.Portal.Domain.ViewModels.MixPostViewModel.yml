### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixPostViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixPostViewModel
  id: MixPostViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor(MixPost,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor(UnitOfWorkInfo)
  langs:
  - csharp
  - vb
  name: MixPostViewModel
  nameWithType: MixPostViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixPostViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPostViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixPostViewModel : SiteDataWithContentViewModelBase<MixCmsContext, MixPost, int, MixPostViewModel, MixPostContent, MixPostContentViewModel>'
    content.vb: >-
      Public Class MixPostViewModel
          Inherits SiteDataWithContentViewModelBase(Of MixCmsContext, MixPost, Integer, MixPostViewModel, MixPostContent, MixPostContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixPostViewModel
  langs:
  - csharp
  - vb
  name: MixPostViewModel()
  nameWithType: MixPostViewModel.MixPostViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixPostViewModel.MixPostViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
    startLine: 9
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixPostViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor(MixPost,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor(MixPost,UnitOfWorkInfo)
  id: '#ctor(MixPost,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixPostViewModel
  langs:
  - csharp
  - vb
  name: MixPostViewModel(MixPost, UnitOfWorkInfo)
  nameWithType: MixPostViewModel.MixPostViewModel(MixPost, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixPostViewModel.MixPostViewModel(MixPost, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
    startLine: 13
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixPostViewModel(MixPost entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixPost
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixPost, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixPostViewModel
  langs:
  - csharp
  - vb
  name: MixPostViewModel(UnitOfWorkInfo)
  nameWithType: MixPostViewModel.MixPostViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixPostViewModel.MixPostViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPostViewModel.cs
    startLine: 20
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixPostViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixPostViewModel.#ctor
  name: MixPostViewModel
  nameWithType: MixPostViewModel.MixPostViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixPostViewModel.MixPostViewModel
- uid: MixPost
  commentId: '!:MixPost'
  isExternal: true
  name: MixPost
  nameWithType: MixPost
  fullName: MixPost
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
