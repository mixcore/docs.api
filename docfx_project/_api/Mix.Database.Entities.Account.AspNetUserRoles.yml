### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Account.AspNetUserRoles
  commentId: T:Mix.Database.Entities.Account.AspNetUserRoles
  id: AspNetUserRoles
  parent: Mix.Database.Entities.Account
  children:
  - Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId
  - Mix.Database.Entities.Account.AspNetUserRoles.MixUser
  - Mix.Database.Entities.Account.AspNetUserRoles.RoleId
  - Mix.Database.Entities.Account.AspNetUserRoles.UserId
  langs:
  - csharp
  - vb
  name: AspNetUserRoles
  nameWithType: AspNetUserRoles
  fullName: Mix.Database.Entities.Account.AspNetUserRoles
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserRoles
    path: ../../mix.core/src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
    startLine: 2
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: 'public class AspNetUserRoles : IdentityUserRole<Guid>'
    content.vb: >-
      Public Class AspNetUserRoles
          Inherits IdentityUserRole(Of Guid)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Account.AspNetUserRoles.UserId
  commentId: P:Mix.Database.Entities.Account.AspNetUserRoles.UserId
  id: UserId
  parent: Mix.Database.Entities.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: AspNetUserRoles.UserId
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.UserId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserId
    path: ../../mix.core/src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public Guid UserId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property UserId As Guid
  overload: Mix.Database.Entities.Account.AspNetUserRoles.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.AspNetUserRoles.RoleId
  commentId: P:Mix.Database.Entities.Account.AspNetUserRoles.RoleId
  id: RoleId
  parent: Mix.Database.Entities.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: AspNetUserRoles.RoleId
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.RoleId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RoleId
    path: ../../mix.core/src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public Guid RoleId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property RoleId As Guid
  overload: Mix.Database.Entities.Account.AspNetUserRoles.RoleId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId
  commentId: P:Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId
  id: MixTenantId
  parent: Mix.Database.Entities.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: AspNetUserRoles.MixTenantId
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.AspNetUserRoles.MixUser
  commentId: P:Mix.Database.Entities.Account.AspNetUserRoles.MixUser
  id: MixUser
  parent: Mix.Database.Entities.Account.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: MixUser
  nameWithType: AspNetUserRoles.MixUser
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.MixUser
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUser
    path: ../../mix.core/src/platform/mix.database/Entities/Account/AspNetUserRoles.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual MixUser MixUser { get; set; }
    parameters: []
    return:
      type: Mix.Database.Entities.Account.MixUser
    content.vb: Public Overridable Property MixUser As MixUser
  overload: Mix.Database.Entities.Account.AspNetUserRoles.MixUser*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Account.AspNetUserRoles.UserId*
  commentId: Overload:Mix.Database.Entities.Account.AspNetUserRoles.UserId
  name: UserId
  nameWithType: AspNetUserRoles.UserId
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.UserId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Mix.Database.Entities.Account.AspNetUserRoles.RoleId*
  commentId: Overload:Mix.Database.Entities.Account.AspNetUserRoles.RoleId
  name: RoleId
  nameWithType: AspNetUserRoles.RoleId
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.RoleId
- uid: Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId*
  commentId: Overload:Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId
  name: MixTenantId
  nameWithType: AspNetUserRoles.MixTenantId
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Database.Entities.Account.AspNetUserRoles.MixUser*
  commentId: Overload:Mix.Database.Entities.Account.AspNetUserRoles.MixUser
  name: MixUser
  nameWithType: AspNetUserRoles.MixUser
  fullName: Mix.Database.Entities.Account.AspNetUserRoles.MixUser
- uid: Mix.Database.Entities.Account.MixUser
  commentId: T:Mix.Database.Entities.Account.MixUser
  parent: Mix.Database.Entities.Account
  name: MixUser
  nameWithType: MixUser
  fullName: Mix.Database.Entities.Account.MixUser
