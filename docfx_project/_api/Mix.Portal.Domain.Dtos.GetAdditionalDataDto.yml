### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  commentId: T:Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  id: GetAdditionalDataDto
  parent: Mix.Portal.Domain.Dtos
  children:
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType
  - Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture
  langs:
  - csharp
  - vb
  name: GetAdditionalDataDto
  nameWithType: GetAdditionalDataDto
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAdditionalDataDto
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public class GetAdditionalDataDto
    content.vb: Public Class GetAdditionalDataDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture
  commentId: P:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture
  id: Specificulture
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: GetAdditionalDataDto.Specificulture
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 4
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId
  commentId: P:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId
  id: ParentId
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: ParentId
  nameWithType: GetAdditionalDataDto.ParentId
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentId
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 5
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public string ParentId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ParentId As String
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType
  commentId: P:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType
  id: ParentType
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: ParentType
  nameWithType: GetAdditionalDataDto.ParentType
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentType
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 7
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public MixDatabaseParentType? ParentType { get; set; }
    parameters: []
    return:
      type: System.Nullable{MixDatabaseParentType}
    content.vb: Public Property ParentType As MixDatabaseParentType?
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName
  commentId: P:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName
  id: DatabaseName
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: GetAdditionalDataDto.DatabaseName
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabaseName
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 8
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public string DatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabaseName As String
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId
  commentId: P:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId
  id: GuidParentId
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: GuidParentId
  nameWithType: GetAdditionalDataDto.GuidParentId
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GuidParentId
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 9
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public Guid? GuidParentId { get; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public ReadOnly Property GuidParentId As Guid?
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId
  commentId: P:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId
  id: IntParentId
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: IntParentId
  nameWithType: GetAdditionalDataDto.IntParentId
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IntParentId
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 18
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public int? IntParentId { get; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public ReadOnly Property IntParentId As Integer?
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid
  commentId: M:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid
  id: IsValid
  parent: Mix.Portal.Domain.Dtos.GetAdditionalDataDto
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: GetAdditionalDataDto.IsValid()
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsValid
    path: ../../mix.core/src/modules/mix.portal/Domain/Dtos/GetAdditionalDataDto.cs
    startLine: 27
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Dtos
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
    content.vb: Public Function IsValid As Boolean
  overload: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Portal.Domain.Dtos
  commentId: N:Mix.Portal.Domain.Dtos
  name: Mix.Portal.Domain.Dtos
  nameWithType: Mix.Portal.Domain.Dtos
  fullName: Mix.Portal.Domain.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture
  name: Specificulture
  nameWithType: GetAdditionalDataDto.Specificulture
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.Specificulture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId
  name: ParentId
  nameWithType: GetAdditionalDataDto.ParentId
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentId
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType
  name: ParentType
  nameWithType: GetAdditionalDataDto.ParentType
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.ParentType
- uid: System.Nullable{MixDatabaseParentType}
  commentId: T:System.Nullable{MixDatabaseParentType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MixDatabaseParentType>
  nameWithType: Nullable<MixDatabaseParentType>
  fullName: System.Nullable<MixDatabaseParentType>
  nameWithType.vb: Nullable(Of MixDatabaseParentType)
  fullName.vb: System.Nullable(Of MixDatabaseParentType)
  name.vb: Nullable(Of MixDatabaseParentType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseParentType
    name: MixDatabaseParentType
    nameWithType: MixDatabaseParentType
    fullName: MixDatabaseParentType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseParentType
    name: MixDatabaseParentType
    nameWithType: MixDatabaseParentType
    fullName: MixDatabaseParentType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName
  name: DatabaseName
  nameWithType: GetAdditionalDataDto.DatabaseName
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.DatabaseName
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId
  name: GuidParentId
  nameWithType: GetAdditionalDataDto.GuidParentId
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.GuidParentId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId
  name: IntParentId
  nameWithType: GetAdditionalDataDto.IntParentId
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IntParentId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid*
  commentId: Overload:Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid
  name: IsValid
  nameWithType: GetAdditionalDataDto.IsValid
  fullName: Mix.Portal.Domain.Dtos.GetAdditionalDataDto.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
