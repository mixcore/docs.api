### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Entities.Cache.MixCache
  commentId: T:Mix.Heart.Entities.Cache.MixCache
  id: MixCache
  parent: Mix.Heart.Entities.Cache
  children:
  - Mix.Heart.Entities.Cache.MixCache.CreatedBy
  - Mix.Heart.Entities.Cache.MixCache.CreatedDateTime
  - Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime
  - Mix.Heart.Entities.Cache.MixCache.Keyword
  - Mix.Heart.Entities.Cache.MixCache.LastModified
  - Mix.Heart.Entities.Cache.MixCache.ModifiedBy
  - Mix.Heart.Entities.Cache.MixCache.Priority
  - Mix.Heart.Entities.Cache.MixCache.Status
  - Mix.Heart.Entities.Cache.MixCache.Value
  langs:
  - csharp
  - vb
  name: MixCache
  nameWithType: MixCache
  fullName: Mix.Heart.Entities.Cache.MixCache
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: MixCache
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 5
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: 'public class MixCache : Entity<Guid>, IEntity<Guid>, IHasPrimaryKey<Guid>'
    content.vb: >-
      Public Class MixCache
          Inherits Entity(Of Guid)
          Implements IEntity(Of Guid), IHasPrimaryKey(Of Guid)
  inheritance:
  - System.Object
  - Mix.Heart.Entities.Entity{System.Guid}
  implements:
  - Mix.Heart.Entities.IEntity{System.Guid}
  - Mix.Heart.Entities.IHasPrimaryKey{System.Guid}
  inheritedMembers:
  - Mix.Heart.Entities.Entity{System.Guid}.Id
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Heart.Entities.Cache.MixCache.Keyword
  commentId: P:Mix.Heart.Entities.Cache.MixCache.Keyword
  id: Keyword
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: Keyword
  nameWithType: MixCache.Keyword
  fullName: Mix.Heart.Entities.Cache.MixCache.Keyword
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Keyword
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 7
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public string Keyword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Keyword As String
  overload: Mix.Heart.Entities.Cache.MixCache.Keyword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.Value
  commentId: P:Mix.Heart.Entities.Cache.MixCache.Value
  id: Value
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: MixCache.Value
  fullName: Mix.Heart.Entities.Cache.MixCache.Value
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Value
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 8
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Mix.Heart.Entities.Cache.MixCache.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime
  commentId: P:Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime
  id: ExpiredDateTime
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: ExpiredDateTime
  nameWithType: MixCache.ExpiredDateTime
  fullName: Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: ExpiredDateTime
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 9
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public DateTime? ExpiredDateTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ExpiredDateTime As Date?
  overload: Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.ModifiedBy
  commentId: P:Mix.Heart.Entities.Cache.MixCache.ModifiedBy
  id: ModifiedBy
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: MixCache.ModifiedBy
  fullName: Mix.Heart.Entities.Cache.MixCache.ModifiedBy
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: ModifiedBy
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Heart.Entities.Cache.MixCache.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.CreatedBy
  commentId: P:Mix.Heart.Entities.Cache.MixCache.CreatedBy
  id: CreatedBy
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: MixCache.CreatedBy
  fullName: Mix.Heart.Entities.Cache.MixCache.CreatedBy
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: CreatedBy
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 11
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Heart.Entities.Cache.MixCache.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.LastModified
  commentId: P:Mix.Heart.Entities.Cache.MixCache.LastModified
  id: LastModified
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: MixCache.LastModified
  fullName: Mix.Heart.Entities.Cache.MixCache.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: LastModified
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 12
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LastModified As Date?
  overload: Mix.Heart.Entities.Cache.MixCache.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.CreatedDateTime
  commentId: P:Mix.Heart.Entities.Cache.MixCache.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: MixCache.CreatedDateTime
  fullName: Mix.Heart.Entities.Cache.MixCache.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: CreatedDateTime
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 13
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDateTime As Date
  overload: Mix.Heart.Entities.Cache.MixCache.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.Priority
  commentId: P:Mix.Heart.Entities.Cache.MixCache.Priority
  id: Priority
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: MixCache.Priority
  fullName: Mix.Heart.Entities.Cache.MixCache.Priority
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Priority
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 14
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Mix.Heart.Entities.Cache.MixCache.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Entities.Cache.MixCache.Status
  commentId: P:Mix.Heart.Entities.Cache.MixCache.Status
  id: Status
  parent: Mix.Heart.Entities.Cache.MixCache
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: MixCache.Status
  fullName: Mix.Heart.Entities.Cache.MixCache.Status
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/Cache/MixCache.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Status
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/Cache/MixCache.cs
    startLine: 15
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities.Cache
  syntax:
    content: public MixCacheStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Heart.Enums.MixCacheStatus
    content.vb: Public Property Status As MixCacheStatus
  overload: Mix.Heart.Entities.Cache.MixCache.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Heart.Entities.Cache
  commentId: N:Mix.Heart.Entities.Cache
  name: Mix.Heart.Entities.Cache
  nameWithType: Mix.Heart.Entities.Cache
  fullName: Mix.Heart.Entities.Cache
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Heart.Entities.Entity{System.Guid}
  commentId: T:Mix.Heart.Entities.Entity{System.Guid}
  parent: Mix.Heart.Entities
  definition: Mix.Heart.Entities.Entity`1
  name: Entity<Guid>
  nameWithType: Entity<Guid>
  fullName: Mix.Heart.Entities.Entity<System.Guid>
  nameWithType.vb: Entity(Of Guid)
  fullName.vb: Mix.Heart.Entities.Entity(Of System.Guid)
  name.vb: Entity(Of Guid)
  spec.csharp:
  - uid: Mix.Heart.Entities.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: Mix.Heart.Entities.Entity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: Mix.Heart.Entities.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.IEntity{System.Guid}
  commentId: T:Mix.Heart.Entities.IEntity{System.Guid}
  parent: Mix.Heart.Entities
  definition: Mix.Heart.Entities.IEntity`1
  name: IEntity<Guid>
  nameWithType: IEntity<Guid>
  fullName: Mix.Heart.Entities.IEntity<System.Guid>
  nameWithType.vb: IEntity(Of Guid)
  fullName.vb: Mix.Heart.Entities.IEntity(Of System.Guid)
  name.vb: IEntity(Of Guid)
  spec.csharp:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.IHasPrimaryKey{System.Guid}
  commentId: T:Mix.Heart.Entities.IHasPrimaryKey{System.Guid}
  parent: Mix.Heart.Entities
  definition: Mix.Heart.Entities.IHasPrimaryKey`1
  name: IHasPrimaryKey<Guid>
  nameWithType: IHasPrimaryKey<Guid>
  fullName: Mix.Heart.Entities.IHasPrimaryKey<System.Guid>
  nameWithType.vb: IHasPrimaryKey(Of Guid)
  fullName.vb: Mix.Heart.Entities.IHasPrimaryKey(Of System.Guid)
  name.vb: IHasPrimaryKey(Of Guid)
  spec.csharp:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Guid
    name: Guid
    nameWithType: Guid
    fullName: System.Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.Entity{System.Guid}.Id
  commentId: P:Mix.Heart.Entities.Entity{System.Guid}.Id
  parent: Mix.Heart.Entities.Entity{System.Guid}
  definition: Mix.Heart.Entities.Entity`1.Id
  name: Id
  nameWithType: Entity<Guid>.Id
  fullName: Mix.Heart.Entities.Entity<System.Guid>.Id
  nameWithType.vb: Entity(Of Guid).Id
  fullName.vb: Mix.Heart.Entities.Entity(Of System.Guid).Id
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.Entities.Entity`1
  commentId: T:Mix.Heart.Entities.Entity`1
  name: Entity<TPrimaryKey>
  nameWithType: Entity<TPrimaryKey>
  fullName: Mix.Heart.Entities.Entity<TPrimaryKey>
  nameWithType.vb: Entity(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.Entity(Of TPrimaryKey)
  name.vb: Entity(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: Mix.Heart.Entities.Entity
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.Entity`1
    name: Entity
    nameWithType: Entity
    fullName: Mix.Heart.Entities.Entity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities
  commentId: N:Mix.Heart.Entities
  name: Mix.Heart.Entities
  nameWithType: Mix.Heart.Entities
  fullName: Mix.Heart.Entities
- uid: Mix.Heart.Entities.IEntity`1
  commentId: T:Mix.Heart.Entities.IEntity`1
  name: IEntity<TPrimaryKey>
  nameWithType: IEntity<TPrimaryKey>
  fullName: Mix.Heart.Entities.IEntity<TPrimaryKey>
  nameWithType.vb: IEntity(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.IEntity(Of TPrimaryKey)
  name.vb: IEntity(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.IHasPrimaryKey`1
  commentId: T:Mix.Heart.Entities.IHasPrimaryKey`1
  name: IHasPrimaryKey<TPrimaryKey>
  nameWithType: IHasPrimaryKey<TPrimaryKey>
  fullName: Mix.Heart.Entities.IHasPrimaryKey<TPrimaryKey>
  nameWithType.vb: IHasPrimaryKey(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.IHasPrimaryKey(Of TPrimaryKey)
  name.vb: IHasPrimaryKey(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.Entity`1.Id
  commentId: P:Mix.Heart.Entities.Entity`1.Id
  name: Id
  nameWithType: Entity<TPrimaryKey>.Id
  fullName: Mix.Heart.Entities.Entity<TPrimaryKey>.Id
  nameWithType.vb: Entity(Of TPrimaryKey).Id
  fullName.vb: Mix.Heart.Entities.Entity(Of TPrimaryKey).Id
- uid: Mix.Heart.Entities.Cache.MixCache.Keyword*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.Keyword
  name: Keyword
  nameWithType: MixCache.Keyword
  fullName: Mix.Heart.Entities.Cache.MixCache.Keyword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Entities.Cache.MixCache.Value*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.Value
  name: Value
  nameWithType: MixCache.Value
  fullName: Mix.Heart.Entities.Cache.MixCache.Value
- uid: Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime
  name: ExpiredDateTime
  nameWithType: MixCache.ExpiredDateTime
  fullName: Mix.Heart.Entities.Cache.MixCache.ExpiredDateTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.Cache.MixCache.ModifiedBy*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.ModifiedBy
  name: ModifiedBy
  nameWithType: MixCache.ModifiedBy
  fullName: Mix.Heart.Entities.Cache.MixCache.ModifiedBy
- uid: Mix.Heart.Entities.Cache.MixCache.CreatedBy*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.CreatedBy
  name: CreatedBy
  nameWithType: MixCache.CreatedBy
  fullName: Mix.Heart.Entities.Cache.MixCache.CreatedBy
- uid: Mix.Heart.Entities.Cache.MixCache.LastModified*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.LastModified
  name: LastModified
  nameWithType: MixCache.LastModified
  fullName: Mix.Heart.Entities.Cache.MixCache.LastModified
- uid: Mix.Heart.Entities.Cache.MixCache.CreatedDateTime*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.CreatedDateTime
  name: CreatedDateTime
  nameWithType: MixCache.CreatedDateTime
  fullName: Mix.Heart.Entities.Cache.MixCache.CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Heart.Entities.Cache.MixCache.Priority*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.Priority
  name: Priority
  nameWithType: MixCache.Priority
  fullName: Mix.Heart.Entities.Cache.MixCache.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Heart.Entities.Cache.MixCache.Status*
  commentId: Overload:Mix.Heart.Entities.Cache.MixCache.Status
  name: Status
  nameWithType: MixCache.Status
  fullName: Mix.Heart.Entities.Cache.MixCache.Status
- uid: Mix.Heart.Enums.MixCacheStatus
  commentId: T:Mix.Heart.Enums.MixCacheStatus
  parent: Mix.Heart.Enums
  name: MixCacheStatus
  nameWithType: MixCacheStatus
  fullName: Mix.Heart.Enums.MixCacheStatus
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
