### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField
  commentId: T:Mix.Cms.Lib.Models.Cms.MixAttributeField
  id: MixAttributeField
  parent: Mix.Cms.Lib.Models.Cms
  children:
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Id
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Name
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Options
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Status
  - Mix.Cms.Lib.Models.Cms.MixAttributeField.Title
  langs:
  - csharp
  - vb
  name: MixAttributeField
  nameWithType: MixAttributeField
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixAttributeField
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 6
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public class MixAttributeField
    content.vb: Public Class MixAttributeField
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Id
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MixAttributeField.Id
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 8
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId
  id: AttributeSetId
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: AttributeSetId
  nameWithType: MixAttributeField.AttributeSetId
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeSetId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 9
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int AttributeSetId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property AttributeSetId As Integer
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName
  id: AttributeSetName
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: AttributeSetName
  nameWithType: MixAttributeField.AttributeSetName
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeSetName
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 10
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string AttributeSetName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AttributeSetName As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations
  id: Configurations
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: MixAttributeField.Configurations
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configurations
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Configurations { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Configurations As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex
  id: Regex
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Regex
  nameWithType: MixAttributeField.Regex
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Regex
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 12
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Regex { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Regex As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Title
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Title
  id: Title
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MixAttributeField.Title
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Title
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 13
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType
  id: DataType
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: MixAttributeField.DataType
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataType
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 14
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public MixDataType DataType { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixDataType
    content.vb: Public Property DataType As MixDataType
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue
  id: DefaultValue
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: DefaultValue
  nameWithType: MixAttributeField.DefaultValue
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DefaultValue
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 15
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string DefaultValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultValue As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Name
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Name
  id: Name
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MixAttributeField.Name
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Name
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 16
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Options
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Options
  id: Options
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: MixAttributeField.Options
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Options
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Options
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 17
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Options { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Options As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire
  id: IsRequire
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: IsRequire
  nameWithType: MixAttributeField.IsRequire
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsRequire
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 18
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public bool IsRequire { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsRequire As Boolean
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt
  id: IsEncrypt
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: IsEncrypt
  nameWithType: MixAttributeField.IsEncrypt
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsEncrypt
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public bool IsEncrypt { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEncrypt As Boolean
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple
  id: IsMultiple
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: IsMultiple
  nameWithType: MixAttributeField.IsMultiple
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsMultiple
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 20
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public bool IsMultiple { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsMultiple As Boolean
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect
  id: IsSelect
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: IsSelect
  nameWithType: MixAttributeField.IsSelect
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsSelect
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 21
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public bool IsSelect { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsSelect As Boolean
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique
  id: IsUnique
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: IsUnique
  nameWithType: MixAttributeField.IsUnique
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsUnique
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 22
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public bool IsUnique { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsUnique As Boolean
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId
  id: ReferenceId
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: ReferenceId
  nameWithType: MixAttributeField.ReferenceId
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ReferenceId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 23
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int? ReferenceId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ReferenceId As Integer?
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy
  id: ModifiedBy
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: MixAttributeField.ModifiedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModifiedBy
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 24
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy
  id: CreatedBy
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: MixAttributeField.CreatedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 25
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified
  id: LastModified
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: MixAttributeField.LastModified
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LastModified As Date?
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: MixAttributeField.CreatedDateTime
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 27
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDateTime As Date
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority
  id: Priority
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: MixAttributeField.Priority
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Priority
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 28
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Status
  commentId: P:Mix.Cms.Lib.Models.Cms.MixAttributeField.Status
  id: Status
  parent: Mix.Cms.Lib.Models.Cms.MixAttributeField
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: MixAttributeField.Status
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Status
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Status
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixAttributeField.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public MixContentStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixContentStatus
    content.vb: Public Property Status As MixContentStatus
  overload: Mix.Cms.Lib.Models.Cms.MixAttributeField.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Id
  name: Id
  nameWithType: MixAttributeField.Id
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId
  name: AttributeSetId
  nameWithType: MixAttributeField.AttributeSetId
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetId
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName
  name: AttributeSetName
  nameWithType: MixAttributeField.AttributeSetName
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.AttributeSetName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations
  name: Configurations
  nameWithType: MixAttributeField.Configurations
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Configurations
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex
  name: Regex
  nameWithType: MixAttributeField.Regex
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Regex
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Title*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Title
  name: Title
  nameWithType: MixAttributeField.Title
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Title
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType
  name: DataType
  nameWithType: MixAttributeField.DataType
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.DataType
- uid: Mix.Cms.Lib.Enums.MixDataType
  commentId: T:Mix.Cms.Lib.Enums.MixDataType
  parent: Mix.Cms.Lib.Enums
  name: MixDataType
  nameWithType: MixDataType
  fullName: Mix.Cms.Lib.Enums.MixDataType
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue
  name: DefaultValue
  nameWithType: MixAttributeField.DefaultValue
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.DefaultValue
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Name*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Name
  name: Name
  nameWithType: MixAttributeField.Name
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Name
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Options*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Options
  name: Options
  nameWithType: MixAttributeField.Options
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Options
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire
  name: IsRequire
  nameWithType: MixAttributeField.IsRequire
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsRequire
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt
  name: IsEncrypt
  nameWithType: MixAttributeField.IsEncrypt
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsEncrypt
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple
  name: IsMultiple
  nameWithType: MixAttributeField.IsMultiple
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsMultiple
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect
  name: IsSelect
  nameWithType: MixAttributeField.IsSelect
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsSelect
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique
  name: IsUnique
  nameWithType: MixAttributeField.IsUnique
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.IsUnique
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId
  name: ReferenceId
  nameWithType: MixAttributeField.ReferenceId
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.ReferenceId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy
  name: ModifiedBy
  nameWithType: MixAttributeField.ModifiedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.ModifiedBy
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy
  name: CreatedBy
  nameWithType: MixAttributeField.CreatedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedBy
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified
  name: LastModified
  nameWithType: MixAttributeField.LastModified
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.LastModified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime
  name: CreatedDateTime
  nameWithType: MixAttributeField.CreatedDateTime
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority
  name: Priority
  nameWithType: MixAttributeField.Priority
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Priority
- uid: Mix.Cms.Lib.Models.Cms.MixAttributeField.Status*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixAttributeField.Status
  name: Status
  nameWithType: MixAttributeField.Status
  fullName: Mix.Cms.Lib.Models.Cms.MixAttributeField.Status
- uid: Mix.Cms.Lib.Enums.MixContentStatus
  commentId: T:Mix.Cms.Lib.Enums.MixContentStatus
  parent: Mix.Cms.Lib.Enums
  name: MixContentStatus
  nameWithType: MixContentStatus
  fullName: Mix.Cms.Lib.Enums.MixContentStatus
