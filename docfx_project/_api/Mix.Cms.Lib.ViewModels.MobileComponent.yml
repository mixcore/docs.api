### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MobileComponent
  commentId: T:Mix.Cms.Lib.ViewModels.MobileComponent
  id: MobileComponent
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.MobileComponent.#ctor(System.Xml.Linq.XElement)
  - Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType
  - Mix.Cms.Lib.ViewModels.MobileComponent.DataSource
  - Mix.Cms.Lib.ViewModels.MobileComponent.DataType
  - Mix.Cms.Lib.ViewModels.MobileComponent.DataValue
  - Mix.Cms.Lib.ViewModels.MobileComponent.Id
  - Mix.Cms.Lib.ViewModels.MobileComponent.StyleName
  langs:
  - csharp
  - vb
  name: MobileComponent
  nameWithType: MobileComponent
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MobileComponent
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 252
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public class MobileComponent
    content.vb: Public Class MobileComponent
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.Id
  commentId: P:Mix.Cms.Lib.ViewModels.MobileComponent.Id
  id: Id
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MobileComponent.Id
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 254
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("id")]

      public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As Integer
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType
  commentId: P:Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType
  id: ComponentType
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: ComponentType
  nameWithType: MobileComponent.ComponentType
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ComponentType
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 257
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("componentType")]

      public string ComponentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("componentType")>

      Public Property ComponentType As String
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: componentType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.StyleName
  commentId: P:Mix.Cms.Lib.ViewModels.MobileComponent.StyleName
  id: StyleName
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: StyleName
  nameWithType: MobileComponent.StyleName
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.StyleName
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StyleName
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 260
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("styleName")]

      public string StyleName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("styleName")>

      Public Property StyleName As String
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.StyleName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: styleName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.DataType
  commentId: P:Mix.Cms.Lib.ViewModels.MobileComponent.DataType
  id: DataType
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: DataType
  nameWithType: MobileComponent.DataType
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.DataType
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataType
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 263
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("dataType")]

      public string DataType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dataType")>

      Public Property DataType As String
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.DataType*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataType
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.DataValue
  commentId: P:Mix.Cms.Lib.ViewModels.MobileComponent.DataValue
  id: DataValue
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: DataValue
  nameWithType: MobileComponent.DataValue
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.DataValue
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataValue
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 266
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("dataValue")]

      public string DataValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("dataValue")>

      Public Property DataValue As String
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.DataValue*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataValue
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.DataSource
  commentId: P:Mix.Cms.Lib.ViewModels.MobileComponent.DataSource
  id: DataSource
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: DataSource
  nameWithType: MobileComponent.DataSource
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.DataSource
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataSource
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 269
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("dataSource")]

      public List<MobileComponent> DataSource { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MobileComponent}
    content.vb: >-
      <JsonProperty("dataSource")>

      Public Property DataSource As List(Of MobileComponent)
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.DataSource*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataSource
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.#ctor(System.Xml.Linq.XElement)
  commentId: M:Mix.Cms.Lib.ViewModels.MobileComponent.#ctor(System.Xml.Linq.XElement)
  id: '#ctor(System.Xml.Linq.XElement)'
  parent: Mix.Cms.Lib.ViewModels.MobileComponent
  langs:
  - csharp
  - vb
  name: MobileComponent(XElement)
  nameWithType: MobileComponent.MobileComponent(XElement)
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.MobileComponent(System.Xml.Linq.XElement)
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 272
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public MobileComponent(XElement element)
    parameters:
    - id: element
      type: System.Xml.Linq.XElement
    content.vb: Public Sub New(element As XElement)
  overload: Mix.Cms.Lib.ViewModels.MobileComponent.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.Id*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.Id
  name: Id
  nameWithType: MobileComponent.Id
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType
  name: ComponentType
  nameWithType: MobileComponent.ComponentType
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.ComponentType
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.StyleName*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.StyleName
  name: StyleName
  nameWithType: MobileComponent.StyleName
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.StyleName
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.DataType*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.DataType
  name: DataType
  nameWithType: MobileComponent.DataType
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.DataType
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.DataValue*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.DataValue
  name: DataValue
  nameWithType: MobileComponent.DataValue
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.DataValue
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.DataSource*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.DataSource
  name: DataSource
  nameWithType: MobileComponent.DataSource
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.DataSource
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MobileComponent}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MobileComponent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MobileComponent>
  nameWithType: List<MobileComponent>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MobileComponent>
  nameWithType.vb: List(Of MobileComponent)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MobileComponent)
  name.vb: List(Of MobileComponent)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MobileComponent
    name: MobileComponent
    nameWithType: MobileComponent
    fullName: Mix.Cms.Lib.ViewModels.MobileComponent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MobileComponent
    name: MobileComponent
    nameWithType: MobileComponent
    fullName: Mix.Cms.Lib.ViewModels.MobileComponent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.ViewModels.MobileComponent.#ctor*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MobileComponent.#ctor
  name: MobileComponent
  nameWithType: MobileComponent.MobileComponent
  fullName: Mix.Cms.Lib.ViewModels.MobileComponent.MobileComponent
- uid: System.Xml.Linq.XElement
  commentId: T:System.Xml.Linq.XElement
  parent: System.Xml.Linq
  isExternal: true
  name: XElement
  nameWithType: XElement
  fullName: System.Xml.Linq.XElement
- uid: System.Xml.Linq
  commentId: N:System.Xml.Linq
  isExternal: true
  name: System.Xml.Linq
  nameWithType: System.Xml.Linq
  fullName: System.Xml.Linq
