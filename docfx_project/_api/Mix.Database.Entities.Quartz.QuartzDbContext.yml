### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Quartz.QuartzDbContext
  commentId: T:Mix.Database.Entities.Quartz.QuartzDbContext
  id: QuartzDbContext
  parent: Mix.Database.Entities.Quartz
  children:
  - Mix.Database.Entities.Quartz.QuartzDbContext.#ctor
  - Mix.Database.Entities.Quartz.QuartzDbContext.#ctor(DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext})
  - Mix.Database.Entities.Quartz.QuartzDbContext.#ctor(MixDatabaseProvider,System.String)
  - Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString
  - Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers
  - Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers
  langs:
  - csharp
  - vb
  name: QuartzDbContext
  nameWithType: QuartzDbContext
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QuartzDbContext
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: 'public abstract class QuartzDbContext : DbContext'
    content.vb: >-
      Public MustInherit Class QuartzDbContext
          Inherits DbContext
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Database.Entities.Quartz.MySQLQuartzDbContext
  - Mix.Database.Entities.Quartz.PostgresSQLQuartzDbContext
  - Mix.Database.Entities.Quartz.SQLiteQuartzDbContext
  - Mix.Database.Entities.Quartz.SQLServerQuartzDbContext
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor
  commentId: M:Mix.Database.Entities.Quartz.QuartzDbContext.#ctor
  id: '#ctor'
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QuartzDbContext()
  nameWithType: QuartzDbContext.QuartzDbContext()
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QuartzDbContext()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public QuartzDbContext()
    content.vb: Public Sub New
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor(MixDatabaseProvider,System.String)
  commentId: M:Mix.Database.Entities.Quartz.QuartzDbContext.#ctor(MixDatabaseProvider,System.String)
  id: '#ctor(MixDatabaseProvider,System.String)'
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QuartzDbContext(MixDatabaseProvider, String)
  nameWithType: QuartzDbContext.QuartzDbContext(MixDatabaseProvider, String)
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QuartzDbContext(MixDatabaseProvider, System.String)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 13
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public QuartzDbContext(MixDatabaseProvider DbProvider, string connectionString)
    parameters:
    - id: DbProvider
      type: MixDatabaseProvider
    - id: connectionString
      type: System.String
    content.vb: Public Sub New(DbProvider As MixDatabaseProvider, connectionString As String)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor(DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext})
  commentId: M:Mix.Database.Entities.Quartz.QuartzDbContext.#ctor(DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext})
  id: '#ctor(DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext})'
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QuartzDbContext(DbContextOptions<QuartzDbContext>)
  nameWithType: QuartzDbContext.QuartzDbContext(DbContextOptions<QuartzDbContext>)
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QuartzDbContext(DbContextOptions<Mix.Database.Entities.Quartz.QuartzDbContext>)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 20
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public QuartzDbContext(DbContextOptions<QuartzDbContext> options)
    parameters:
    - id: options
      type: DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext}
    content.vb: Public Sub New(options As DbContextOptions(Of QuartzDbContext))
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor*
  nameWithType.vb: QuartzDbContext.QuartzDbContext(DbContextOptions(Of QuartzDbContext))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Quartz.QuartzDbContext.QuartzDbContext(DbContextOptions(Of Mix.Database.Entities.Quartz.QuartzDbContext))
  name.vb: QuartzDbContext(DbContextOptions(Of QuartzDbContext))
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers
  id: QrtzBlobTriggers
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzBlobTriggers
  nameWithType: QuartzDbContext.QrtzBlobTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzBlobTriggers
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 25
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzBlobTrigger> QrtzBlobTriggers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzBlobTrigger}
    content.vb: Public Overridable Property QrtzBlobTriggers As DbSet(Of QrtzBlobTrigger)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars
  id: QrtzCalendars
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzCalendars
  nameWithType: QuartzDbContext.QrtzCalendars
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzCalendars
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 26
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzCalendar> QrtzCalendars { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzCalendar}
    content.vb: Public Overridable Property QrtzCalendars As DbSet(Of QrtzCalendar)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers
  id: QrtzCronTriggers
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzCronTriggers
  nameWithType: QuartzDbContext.QrtzCronTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzCronTriggers
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 27
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzCronTrigger> QrtzCronTriggers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzCronTrigger}
    content.vb: Public Overridable Property QrtzCronTriggers As DbSet(Of QrtzCronTrigger)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers
  id: QrtzFiredTriggers
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzFiredTriggers
  nameWithType: QuartzDbContext.QrtzFiredTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzFiredTriggers
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 28
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzFiredTrigger> QrtzFiredTriggers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzFiredTrigger}
    content.vb: Public Overridable Property QrtzFiredTriggers As DbSet(Of QrtzFiredTrigger)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails
  id: QrtzJobDetails
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzJobDetails
  nameWithType: QuartzDbContext.QrtzJobDetails
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzJobDetails
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 29
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzJobDetail> QrtzJobDetails { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzJobDetail}
    content.vb: Public Overridable Property QrtzJobDetails As DbSet(Of QrtzJobDetail)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks
  id: QrtzLocks
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzLocks
  nameWithType: QuartzDbContext.QrtzLocks
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzLocks
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 30
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzLock> QrtzLocks { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzLock}
    content.vb: Public Overridable Property QrtzLocks As DbSet(Of QrtzLock)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps
  id: QrtzPausedTriggerGrps
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzPausedTriggerGrps
  nameWithType: QuartzDbContext.QrtzPausedTriggerGrps
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzPausedTriggerGrps
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 31
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzPausedTriggerGrp> QrtzPausedTriggerGrps { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp}
    content.vb: Public Overridable Property QrtzPausedTriggerGrps As DbSet(Of QrtzPausedTriggerGrp)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates
  id: QrtzSchedulerStates
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzSchedulerStates
  nameWithType: QuartzDbContext.QrtzSchedulerStates
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzSchedulerStates
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 32
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzSchedulerState> QrtzSchedulerStates { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzSchedulerState}
    content.vb: Public Overridable Property QrtzSchedulerStates As DbSet(Of QrtzSchedulerState)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers
  id: QrtzSimpleTriggers
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzSimpleTriggers
  nameWithType: QuartzDbContext.QrtzSimpleTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzSimpleTriggers
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 33
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzSimpleTrigger> QrtzSimpleTriggers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzSimpleTrigger}
    content.vb: Public Overridable Property QrtzSimpleTriggers As DbSet(Of QrtzSimpleTrigger)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers
  id: QrtzSimpropTriggers
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzSimpropTriggers
  nameWithType: QuartzDbContext.QrtzSimpropTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzSimpropTriggers
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 34
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzSimpropTrigger> QrtzSimpropTriggers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzSimpropTrigger}
    content.vb: Public Overridable Property QrtzSimpropTriggers As DbSet(Of QrtzSimpropTrigger)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers
  id: QrtzTriggers
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: QrtzTriggers
  nameWithType: QuartzDbContext.QrtzTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzTriggers
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 35
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public virtual DbSet<QrtzTrigger> QrtzTriggers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Quartz.QrtzTrigger}
    content.vb: Public Overridable Property QrtzTriggers As DbSet(Of QrtzTrigger)
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider
  id: DbProvider
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: DbProvider
  nameWithType: QuartzDbContext.DbProvider
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DbProvider
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 36
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public MixDatabaseProvider DbProvider { get; protected set; }
    parameters: []
    return:
      type: MixDatabaseProvider
    content.vb: Public Property DbProvider As MixDatabaseProvider
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString
  commentId: P:Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString
  id: ConnectionString
  parent: Mix.Database.Entities.Quartz.QuartzDbContext
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: QuartzDbContext.ConnectionString
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConnectionString
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/_QuartzDbContext.cs
    startLine: 37
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string ConnectionString { get; protected set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConnectionString As String
  overload: Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString*
  modifiers.csharp:
  - public
  - get
  - protected set
  modifiers.vb:
  - Public
  - Get
  - Protected Set
references:
- uid: Mix.Database.Entities.Quartz
  commentId: N:Mix.Database.Entities.Quartz
  name: Mix.Database.Entities.Quartz
  nameWithType: Mix.Database.Entities.Quartz
  fullName: Mix.Database.Entities.Quartz
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.#ctor*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.#ctor
  name: QuartzDbContext
  nameWithType: QuartzDbContext.QuartzDbContext
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QuartzDbContext
- uid: MixDatabaseProvider
  isExternal: true
  name: MixDatabaseProvider
  nameWithType: MixDatabaseProvider
  fullName: MixDatabaseProvider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext}
  commentId: '!:DbContextOptions{Mix.Database.Entities.Quartz.QuartzDbContext}'
  definition: DbContextOptions`1
  name: DbContextOptions<QuartzDbContext>
  nameWithType: DbContextOptions<QuartzDbContext>
  fullName: DbContextOptions<Mix.Database.Entities.Quartz.QuartzDbContext>
  nameWithType.vb: DbContextOptions(Of QuartzDbContext)
  fullName.vb: DbContextOptions(Of Mix.Database.Entities.Quartz.QuartzDbContext)
  name.vb: DbContextOptions(Of QuartzDbContext)
  spec.csharp:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QuartzDbContext
    name: QuartzDbContext
    nameWithType: QuartzDbContext
    fullName: Mix.Database.Entities.Quartz.QuartzDbContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QuartzDbContext
    name: QuartzDbContext
    nameWithType: QuartzDbContext
    fullName: Mix.Database.Entities.Quartz.QuartzDbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: DbContextOptions`1
  commentId: '!:DbContextOptions`1'
  isExternal: true
  name: DbContextOptions<>
  nameWithType: DbContextOptions<>
  fullName: DbContextOptions<>
  nameWithType.vb: DbContextOptions(Of )
  fullName.vb: DbContextOptions(Of )
  name.vb: DbContextOptions(Of )
  spec.csharp:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbContextOptions`1
    name: DbContextOptions
    nameWithType: DbContextOptions
    fullName: DbContextOptions
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers
  name: QrtzBlobTriggers
  nameWithType: QuartzDbContext.QrtzBlobTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzBlobTriggers
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzBlobTrigger}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzBlobTrigger}'
  definition: DbSet`1
  name: DbSet<QrtzBlobTrigger>
  nameWithType: DbSet<QrtzBlobTrigger>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzBlobTrigger>
  nameWithType.vb: DbSet(Of QrtzBlobTrigger)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzBlobTrigger)
  name.vb: DbSet(Of QrtzBlobTrigger)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzBlobTrigger
    name: QrtzBlobTrigger
    nameWithType: QrtzBlobTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzBlobTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzBlobTrigger
    name: QrtzBlobTrigger
    nameWithType: QrtzBlobTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzBlobTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: DbSet`1
  isExternal: true
  name: DbSet<>
  nameWithType: DbSet<>
  fullName: DbSet<>
  nameWithType.vb: DbSet(Of )
  fullName.vb: DbSet(Of )
  name.vb: DbSet(Of )
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars
  name: QrtzCalendars
  nameWithType: QuartzDbContext.QrtzCalendars
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCalendars
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzCalendar}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzCalendar}'
  definition: DbSet`1
  name: DbSet<QrtzCalendar>
  nameWithType: DbSet<QrtzCalendar>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzCalendar>
  nameWithType.vb: DbSet(Of QrtzCalendar)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzCalendar)
  name.vb: DbSet(Of QrtzCalendar)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzCalendar
    name: QrtzCalendar
    nameWithType: QrtzCalendar
    fullName: Mix.Database.Entities.Quartz.QrtzCalendar
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzCalendar
    name: QrtzCalendar
    nameWithType: QrtzCalendar
    fullName: Mix.Database.Entities.Quartz.QrtzCalendar
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers
  name: QrtzCronTriggers
  nameWithType: QuartzDbContext.QrtzCronTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzCronTriggers
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzCronTrigger}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzCronTrigger}'
  definition: DbSet`1
  name: DbSet<QrtzCronTrigger>
  nameWithType: DbSet<QrtzCronTrigger>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzCronTrigger>
  nameWithType.vb: DbSet(Of QrtzCronTrigger)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzCronTrigger)
  name.vb: DbSet(Of QrtzCronTrigger)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzCronTrigger
    name: QrtzCronTrigger
    nameWithType: QrtzCronTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzCronTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzCronTrigger
    name: QrtzCronTrigger
    nameWithType: QrtzCronTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzCronTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers
  name: QrtzFiredTriggers
  nameWithType: QuartzDbContext.QrtzFiredTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzFiredTriggers
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzFiredTrigger}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzFiredTrigger}'
  definition: DbSet`1
  name: DbSet<QrtzFiredTrigger>
  nameWithType: DbSet<QrtzFiredTrigger>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzFiredTrigger>
  nameWithType.vb: DbSet(Of QrtzFiredTrigger)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzFiredTrigger)
  name.vb: DbSet(Of QrtzFiredTrigger)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger
    name: QrtzFiredTrigger
    nameWithType: QrtzFiredTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger
    name: QrtzFiredTrigger
    nameWithType: QrtzFiredTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails
  name: QrtzJobDetails
  nameWithType: QuartzDbContext.QrtzJobDetails
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzJobDetails
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzJobDetail}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzJobDetail}'
  definition: DbSet`1
  name: DbSet<QrtzJobDetail>
  nameWithType: DbSet<QrtzJobDetail>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzJobDetail>
  nameWithType.vb: DbSet(Of QrtzJobDetail)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzJobDetail)
  name.vb: DbSet(Of QrtzJobDetail)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzJobDetail
    name: QrtzJobDetail
    nameWithType: QrtzJobDetail
    fullName: Mix.Database.Entities.Quartz.QrtzJobDetail
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzJobDetail
    name: QrtzJobDetail
    nameWithType: QrtzJobDetail
    fullName: Mix.Database.Entities.Quartz.QrtzJobDetail
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks
  name: QrtzLocks
  nameWithType: QuartzDbContext.QrtzLocks
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzLocks
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzLock}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzLock}'
  definition: DbSet`1
  name: DbSet<QrtzLock>
  nameWithType: DbSet<QrtzLock>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzLock>
  nameWithType.vb: DbSet(Of QrtzLock)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzLock)
  name.vb: DbSet(Of QrtzLock)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzLock
    name: QrtzLock
    nameWithType: QrtzLock
    fullName: Mix.Database.Entities.Quartz.QrtzLock
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzLock
    name: QrtzLock
    nameWithType: QrtzLock
    fullName: Mix.Database.Entities.Quartz.QrtzLock
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps
  name: QrtzPausedTriggerGrps
  nameWithType: QuartzDbContext.QrtzPausedTriggerGrps
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzPausedTriggerGrps
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp}'
  definition: DbSet`1
  name: DbSet<QrtzPausedTriggerGrp>
  nameWithType: DbSet<QrtzPausedTriggerGrp>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp>
  nameWithType.vb: DbSet(Of QrtzPausedTriggerGrp)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp)
  name.vb: DbSet(Of QrtzPausedTriggerGrp)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp
    name: QrtzPausedTriggerGrp
    nameWithType: QrtzPausedTriggerGrp
    fullName: Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp
    name: QrtzPausedTriggerGrp
    nameWithType: QrtzPausedTriggerGrp
    fullName: Mix.Database.Entities.Quartz.QrtzPausedTriggerGrp
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates
  name: QrtzSchedulerStates
  nameWithType: QuartzDbContext.QrtzSchedulerStates
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSchedulerStates
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzSchedulerState}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzSchedulerState}'
  definition: DbSet`1
  name: DbSet<QrtzSchedulerState>
  nameWithType: DbSet<QrtzSchedulerState>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzSchedulerState>
  nameWithType.vb: DbSet(Of QrtzSchedulerState)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzSchedulerState)
  name.vb: DbSet(Of QrtzSchedulerState)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzSchedulerState
    name: QrtzSchedulerState
    nameWithType: QrtzSchedulerState
    fullName: Mix.Database.Entities.Quartz.QrtzSchedulerState
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzSchedulerState
    name: QrtzSchedulerState
    nameWithType: QrtzSchedulerState
    fullName: Mix.Database.Entities.Quartz.QrtzSchedulerState
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers
  name: QrtzSimpleTriggers
  nameWithType: QuartzDbContext.QrtzSimpleTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpleTriggers
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzSimpleTrigger}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzSimpleTrigger}'
  definition: DbSet`1
  name: DbSet<QrtzSimpleTrigger>
  nameWithType: DbSet<QrtzSimpleTrigger>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzSimpleTrigger>
  nameWithType.vb: DbSet(Of QrtzSimpleTrigger)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzSimpleTrigger)
  name.vb: DbSet(Of QrtzSimpleTrigger)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzSimpleTrigger
    name: QrtzSimpleTrigger
    nameWithType: QrtzSimpleTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzSimpleTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzSimpleTrigger
    name: QrtzSimpleTrigger
    nameWithType: QrtzSimpleTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzSimpleTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers
  name: QrtzSimpropTriggers
  nameWithType: QuartzDbContext.QrtzSimpropTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzSimpropTriggers
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzSimpropTrigger}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzSimpropTrigger}'
  definition: DbSet`1
  name: DbSet<QrtzSimpropTrigger>
  nameWithType: DbSet<QrtzSimpropTrigger>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzSimpropTrigger>
  nameWithType.vb: DbSet(Of QrtzSimpropTrigger)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzSimpropTrigger)
  name.vb: DbSet(Of QrtzSimpropTrigger)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzSimpropTrigger
    name: QrtzSimpropTrigger
    nameWithType: QrtzSimpropTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzSimpropTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzSimpropTrigger
    name: QrtzSimpropTrigger
    nameWithType: QrtzSimpropTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzSimpropTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers
  name: QrtzTriggers
  nameWithType: QuartzDbContext.QrtzTriggers
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.QrtzTriggers
- uid: DbSet{Mix.Database.Entities.Quartz.QrtzTrigger}
  commentId: '!:DbSet{Mix.Database.Entities.Quartz.QrtzTrigger}'
  definition: DbSet`1
  name: DbSet<QrtzTrigger>
  nameWithType: DbSet<QrtzTrigger>
  fullName: DbSet<Mix.Database.Entities.Quartz.QrtzTrigger>
  nameWithType.vb: DbSet(Of QrtzTrigger)
  fullName.vb: DbSet(Of Mix.Database.Entities.Quartz.QrtzTrigger)
  name.vb: DbSet(Of QrtzTrigger)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Quartz.QrtzTrigger
    name: QrtzTrigger
    nameWithType: QrtzTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzTrigger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Quartz.QrtzTrigger
    name: QrtzTrigger
    nameWithType: QrtzTrigger
    fullName: Mix.Database.Entities.Quartz.QrtzTrigger
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider
  name: DbProvider
  nameWithType: QuartzDbContext.DbProvider
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.DbProvider
- uid: Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString*
  commentId: Overload:Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString
  name: ConnectionString
  nameWithType: QuartzDbContext.ConnectionString
  fullName: Mix.Database.Entities.Quartz.QuartzDbContext.ConnectionString
