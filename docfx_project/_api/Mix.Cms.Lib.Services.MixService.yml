### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Services.MixService
  commentId: T:Mix.Cms.Lib.Services.MixService
  id: MixService
  parent: Mix.Cms.Lib.Services
  children:
  - Mix.Cms.Lib.Services.MixService.#ctor
  - Mix.Cms.Lib.Services.MixService.CheckValidCulture(System.String)
  - Mix.Cms.Lib.Services.MixService.DefaultInstance
  - Mix.Cms.Lib.Services.MixService.GetAccountDbContext
  - Mix.Cms.Lib.Services.MixService.GetAuthConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  - Mix.Cms.Lib.Services.MixService.GetDbContext
  - Mix.Cms.Lib.Services.MixService.GetEnumConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  - Mix.Cms.Lib.Services.MixService.GetIpConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  - Mix.Cms.Lib.Services.MixService.GetMixConfig``1(System.String)
  - Mix.Cms.Lib.Services.MixService.GetTemplateFolder(System.String)
  - Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder(System.String)
  - Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  - Mix.Cms.Lib.Services.MixService.Instance
  - Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.Services.MixService.LogException(System.Exception)
  - Mix.Cms.Lib.Services.MixService.Reload
  - Mix.Cms.Lib.Services.MixService.RemoveCacheAsync(System.Type,System.String)
  - Mix.Cms.Lib.Services.MixService.SaveSettings
  - Mix.Cms.Lib.Services.MixService.SaveSettings(System.String)
  - Mix.Cms.Lib.Services.MixService.SendEdm(System.String,System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.SendMail(System.String,System.String,System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.SetAuthConfig``1(System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.SetIpConfig``1(System.String,``0)
  - Mix.Cms.Lib.Services.MixService.SetMixConfig``1(System.String,``0)
  - Mix.Cms.Lib.Services.MixService.Translate``1(System.String,System.String)
  - Mix.Cms.Lib.Services.MixService.TranslateString(System.String,System.String)
  langs:
  - csharp
  - vb
  name: MixService
  nameWithType: MixService
  fullName: Mix.Cms.Lib.Services.MixService
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixService
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public class MixService
    content.vb: Public Class MixService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Services.MixService.#ctor
  commentId: M:Mix.Cms.Lib.Services.MixService.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: MixService()
  nameWithType: MixService.MixService()
  fullName: Mix.Cms.Lib.Services.MixService.MixService()
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 44
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public MixService()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Services.MixService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Services.MixService.Instance
  commentId: P:Mix.Cms.Lib.Services.MixService.Instance
  id: Instance
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Instance
  nameWithType: MixService.Instance
  fullName: Mix.Cms.Lib.Services.MixService.Instance
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Instance
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 52
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static MixService Instance { get; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Services.MixService
    content.vb: Public Shared ReadOnly Property Instance As MixService
  overload: Mix.Cms.Lib.Services.MixService.Instance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mix.Cms.Lib.Services.MixService.DefaultInstance
  commentId: P:Mix.Cms.Lib.Services.MixService.DefaultInstance
  id: DefaultInstance
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: DefaultInstance
  nameWithType: MixService.DefaultInstance
  fullName: Mix.Cms.Lib.Services.MixService.DefaultInstance
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DefaultInstance
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 72
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static MixService DefaultInstance { get; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Services.MixService
    content.vb: Public Shared ReadOnly Property DefaultInstance As MixService
  overload: Mix.Cms.Lib.Services.MixService.DefaultInstance*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  id: GetConnectionString(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetConnectionString(String)
  nameWithType: MixService.GetConnectionString(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetConnectionString(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetConnectionString
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 142
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string GetConnectionString(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetConnectionString(name As String) As String
  overload: Mix.Cms.Lib.Services.MixService.GetConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String,System.String)
  id: SetConnectionString(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetConnectionString(String, String)
  nameWithType: MixService.SetConnectionString(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.SetConnectionString(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetConnectionString
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 148
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetConnectionString(string name, string value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: System.String
    content.vb: Public Shared Sub SetConnectionString(name As String, value As String)
  overload: Mix.Cms.Lib.Services.MixService.SetConnectionString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.CheckValidCulture(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.CheckValidCulture(System.String)
  id: CheckValidCulture(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: CheckValidCulture(String)
  nameWithType: MixService.CheckValidCulture(String)
  fullName: Mix.Cms.Lib.Services.MixService.CheckValidCulture(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CheckValidCulture
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 154
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public bool CheckValidCulture(string specificulture)
    parameters:
    - id: specificulture
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function CheckValidCulture(specificulture As String) As Boolean
  overload: Mix.Cms.Lib.Services.MixService.CheckValidCulture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Services.MixService.GetAuthConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetAuthConfig``1(System.String)
  id: GetAuthConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetAuthConfig<T>(String)
  nameWithType: MixService.GetAuthConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetAuthConfig<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAuthConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 164
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetAuthConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetAuthConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetAuthConfig*
  nameWithType.vb: MixService.GetAuthConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetAuthConfig(Of T)(System.String)
  name.vb: GetAuthConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.SetAuthConfig``1(System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetAuthConfig``1(System.String,``0)
  id: SetAuthConfig``1(System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetAuthConfig<T>(String, T)
  nameWithType: MixService.SetAuthConfig<T>(String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetAuthConfig<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetAuthConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 174
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetAuthConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetAuthConfig(Of T)(name As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetAuthConfig*
  nameWithType.vb: MixService.SetAuthConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetAuthConfig(Of T)(System.String, T)
  name.vb: SetAuthConfig(Of T)(String, T)
- uid: Mix.Cms.Lib.Services.MixService.GetIpConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetIpConfig``1(System.String)
  id: GetIpConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetIpConfig<T>(String)
  nameWithType: MixService.GetIpConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetIpConfig<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetIpConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 179
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetIpConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetIpConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetIpConfig*
  nameWithType.vb: MixService.GetIpConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetIpConfig(Of T)(System.String)
  name.vb: GetIpConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.SetIpConfig``1(System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetIpConfig``1(System.String,``0)
  id: SetIpConfig``1(System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetIpConfig<T>(String, T)
  nameWithType: MixService.SetIpConfig<T>(String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetIpConfig<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetIpConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 189
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetIpConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetIpConfig(Of T)(name As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetIpConfig*
  nameWithType.vb: MixService.SetIpConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetIpConfig(Of T)(System.String, T)
  name.vb: SetIpConfig(Of T)(String, T)
- uid: Mix.Cms.Lib.Services.MixService.GetMixConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetMixConfig``1(System.String)
  id: GetMixConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetMixConfig<T>(String)
  nameWithType: MixService.GetMixConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetMixConfig<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetMixConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 194
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetMixConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetMixConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetMixConfig*
  nameWithType.vb: MixService.GetMixConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetMixConfig(Of T)(System.String)
  name.vb: GetMixConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.SetMixConfig``1(System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetMixConfig``1(System.String,``0)
  id: SetMixConfig``1(System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetMixConfig<T>(String, T)
  nameWithType: MixService.SetMixConfig<T>(String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetMixConfig<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetMixConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 204
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetMixConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetMixConfig(Of T)(name As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetMixConfig*
  nameWithType.vb: MixService.SetMixConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetMixConfig(Of T)(System.String, T)
  name.vb: SetMixConfig(Of T)(String, T)
- uid: Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String)
  id: GetConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetConfig<T>(String)
  nameWithType: MixService.GetConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetConfig<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 209
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetConfig*
  nameWithType.vb: MixService.GetConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetConfig(Of T)(System.String)
  name.vb: GetConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.GetEnumConfig``1(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetEnumConfig``1(System.String)
  id: GetEnumConfig``1(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetEnumConfig<T>(String)
  nameWithType: MixService.GetEnumConfig<T>(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetEnumConfig<T>(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetEnumConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 219
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetEnumConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetEnumConfig(Of T)(name As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetEnumConfig*
  nameWithType.vb: MixService.GetEnumConfig(Of T)(String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetEnumConfig(Of T)(System.String)
  name.vb: GetEnumConfig(Of T)(String)
- uid: Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,``0)
  id: SetConfig``1(System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetConfig<T>(String, T)
  nameWithType: MixService.SetConfig<T>(String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetConfig<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 225
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetConfig(Of T)(name As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetConfig*
  nameWithType.vb: MixService.SetConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetConfig(Of T)(System.String, T)
  name.vb: SetConfig(Of T)(String, T)
- uid: Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetConfig``1(System.String,System.String)
  id: GetConfig``1(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetConfig<T>(String, String)
  nameWithType: MixService.GetConfig<T>(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.GetConfig<T>(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 230
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T GetConfig<T>(string name, string culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function GetConfig(Of T)(name As String, culture As String) As T
  overload: Mix.Cms.Lib.Services.MixService.GetConfig*
  nameWithType.vb: MixService.GetConfig(Of T)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.GetConfig(Of T)(System.String, System.String)
  name.vb: GetConfig(Of T)(String, String)
- uid: Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,System.String,``0)
  commentId: M:Mix.Cms.Lib.Services.MixService.SetConfig``1(System.String,System.String,``0)
  id: SetConfig``1(System.String,System.String,``0)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SetConfig<T>(String, String, T)
  nameWithType: MixService.SetConfig<T>(String, String, T)
  fullName: Mix.Cms.Lib.Services.MixService.SetConfig<T>(System.String, System.String, T)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetConfig
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 240
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SetConfig<T>(string name, string culture, T value)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Shared Sub SetConfig(Of T)(name As String, culture As String, value As T)
  overload: Mix.Cms.Lib.Services.MixService.SetConfig*
  nameWithType.vb: MixService.SetConfig(Of T)(String, String, T)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.SetConfig(Of T)(System.String, System.String, T)
  name.vb: SetConfig(Of T)(String, String, T)
- uid: Mix.Cms.Lib.Services.MixService.Translate``1(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.Translate``1(System.String,System.String)
  id: Translate``1(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Translate<T>(String, String)
  nameWithType: MixService.Translate<T>(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.Translate<T>(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Translate
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 245
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static T Translate<T>(string name, string culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Translate(Of T)(name As String, culture As String) As T
  overload: Mix.Cms.Lib.Services.MixService.Translate*
  nameWithType.vb: MixService.Translate(Of T)(String, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.Services.MixService.Translate(Of T)(System.String, System.String)
  name.vb: Translate(Of T)(String, String)
- uid: Mix.Cms.Lib.Services.MixService.TranslateString(System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.TranslateString(System.String,System.String)
  id: TranslateString(System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: TranslateString(String, String)
  nameWithType: MixService.TranslateString(String, String)
  fullName: Mix.Cms.Lib.Services.MixService.TranslateString(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TranslateString
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 255
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string TranslateString(string name, string culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function TranslateString(name As String, culture As String) As String
  overload: Mix.Cms.Lib.Services.MixService.TranslateString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  id: GetTranslator(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetTranslator(String)
  nameWithType: MixService.GetTranslator(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetTranslator(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetTranslator
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 261
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static JObject GetTranslator(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function GetTranslator(culture As String) As JObject
  overload: Mix.Cms.Lib.Services.MixService.GetTranslator*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  id: GetLocalSettings(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetLocalSettings(String)
  nameWithType: MixService.GetLocalSettings(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetLocalSettings(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetLocalSettings
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 266
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static JObject GetLocalSettings(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function GetLocalSettings(culture As String) As JObject
  overload: Mix.Cms.Lib.Services.MixService.GetLocalSettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  commentId: M:Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  id: GetGlobalSetting
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetGlobalSetting()
  nameWithType: MixService.GetGlobalSetting()
  fullName: Mix.Cms.Lib.Services.MixService.GetGlobalSetting()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetGlobalSetting
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 271
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static JObject GetGlobalSetting()
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function GetGlobalSetting As JObject
  overload: Mix.Cms.Lib.Services.MixService.GetGlobalSetting*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.SaveSettings
  commentId: M:Mix.Cms.Lib.Services.MixService.SaveSettings
  id: SaveSettings
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SaveSettings()
  nameWithType: MixService.SaveSettings()
  fullName: Mix.Cms.Lib.Services.MixService.SaveSettings()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveSettings
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 276
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static bool SaveSettings()
    return:
      type: System.Boolean
    content.vb: Public Shared Function SaveSettings As Boolean
  overload: Mix.Cms.Lib.Services.MixService.SaveSettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.SaveSettings(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.SaveSettings(System.String)
  id: SaveSettings(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SaveSettings(String)
  nameWithType: MixService.SaveSettings(String)
  fullName: Mix.Cms.Lib.Services.MixService.SaveSettings(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveSettings
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 314
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static bool SaveSettings(string content)
    parameters:
    - id: content
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function SaveSettings(content As String) As Boolean
  overload: Mix.Cms.Lib.Services.MixService.SaveSettings*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.Reload
  commentId: M:Mix.Cms.Lib.Services.MixService.Reload
  id: Reload
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: Reload()
  nameWithType: MixService.Reload()
  fullName: Mix.Cms.Lib.Services.MixService.Reload()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Reload
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 322
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void Reload()
    content.vb: Public Shared Sub Reload
  overload: Mix.Cms.Lib.Services.MixService.Reload*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: LoadFromDatabase(MixCmsContext, IDbContextTransaction)
  nameWithType: MixService.LoadFromDatabase(MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.Services.MixService.LoadFromDatabase(Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadFromDatabase
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 327
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void LoadFromDatabase(MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Shared Sub LoadFromDatabase(_context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Lib.Services.MixService.LoadFromDatabase*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.SendEdm(System.String,System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.SendEdm(System.String,System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String)
  id: SendEdm(System.String,System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SendEdm(String, String, JObject, String, String)
  nameWithType: MixService.SendEdm(String, String, JObject, String, String)
  fullName: Mix.Cms.Lib.Services.MixService.SendEdm(System.String, System.String, Newtonsoft.Json.Linq.JObject, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendEdm
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 375
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static Task SendEdm(string culture, string template, JObject data, string subject, string from)
    parameters:
    - id: culture
      type: System.String
    - id: template
      type: System.String
    - id: data
      type: Newtonsoft.Json.Linq.JObject
    - id: subject
      type: System.String
    - id: from
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function SendEdm(culture As String, template As String, data As JObject, subject As String, from As String) As Task
  overload: Mix.Cms.Lib.Services.MixService.SendEdm*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.SendMail(System.String,System.String,System.String,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.SendMail(System.String,System.String,System.String,System.String)
  id: SendMail(System.String,System.String,System.String,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: SendMail(String, String, String, String)
  nameWithType: MixService.SendMail(String, String, String, String)
  fullName: Mix.Cms.Lib.Services.MixService.SendMail(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendMail
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 396
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void SendMail(string subject, string message, string to, string from = null)
    parameters:
    - id: subject
      type: System.String
    - id: message
      type: System.String
    - id: to
      type: System.String
    - id: from
      type: System.String
    content.vb: Public Shared Sub SendMail(subject As String, message As String, to As String, from As String = Nothing)
  overload: Mix.Cms.Lib.Services.MixService.SendMail*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.LogException(System.Exception)
  commentId: M:Mix.Cms.Lib.Services.MixService.LogException(System.Exception)
  id: LogException(System.Exception)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: LogException(Exception)
  nameWithType: MixService.LogException(Exception)
  fullName: Mix.Cms.Lib.Services.MixService.LogException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LogException
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 436
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static void LogException(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    content.vb: Public Shared Sub LogException(ex As Exception)
  overload: Mix.Cms.Lib.Services.MixService.LogException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetTemplateFolder(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetTemplateFolder(System.String)
  id: GetTemplateFolder(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetTemplateFolder(String)
  nameWithType: MixService.GetTemplateFolder(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetTemplateFolder(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetTemplateFolder
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 479
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string GetTemplateFolder(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetTemplateFolder(culture As String) As String
  overload: Mix.Cms.Lib.Services.MixService.GetTemplateFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder(System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder(System.String)
  id: GetTemplateUploadFolder(System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetTemplateUploadFolder(String)
  nameWithType: MixService.GetTemplateUploadFolder(String)
  fullName: Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetTemplateUploadFolder
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 484
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static string GetTemplateUploadFolder(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetTemplateUploadFolder(culture As String) As String
  overload: Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetDbContext
  commentId: M:Mix.Cms.Lib.Services.MixService.GetDbContext
  id: GetDbContext
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetDbContext()
  nameWithType: MixService.GetDbContext()
  fullName: Mix.Cms.Lib.Services.MixService.GetDbContext()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetDbContext
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 489
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static MixCmsContext GetDbContext()
    return:
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    content.vb: Public Shared Function GetDbContext As MixCmsContext
  overload: Mix.Cms.Lib.Services.MixService.GetDbContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.GetAccountDbContext
  commentId: M:Mix.Cms.Lib.Services.MixService.GetAccountDbContext
  id: GetAccountDbContext
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: GetAccountDbContext()
  nameWithType: MixService.GetAccountDbContext()
  fullName: Mix.Cms.Lib.Services.MixService.GetAccountDbContext()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAccountDbContext
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 508
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static MixCmsAccountContext GetAccountDbContext()
    return:
      type: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
    content.vb: Public Shared Function GetAccountDbContext As MixCmsAccountContext
  overload: Mix.Cms.Lib.Services.MixService.GetAccountDbContext*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.Services.MixService.RemoveCacheAsync(System.Type,System.String)
  commentId: M:Mix.Cms.Lib.Services.MixService.RemoveCacheAsync(System.Type,System.String)
  id: RemoveCacheAsync(System.Type,System.String)
  parent: Mix.Cms.Lib.Services.MixService
  langs:
  - csharp
  - vb
  name: RemoveCacheAsync(Type, String)
  nameWithType: MixService.RemoveCacheAsync(Type, String)
  fullName: Mix.Cms.Lib.Services.MixService.RemoveCacheAsync(System.Type, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Services/MixService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RemoveCacheAsync
    path: ../../mix.core/src/Mix.Cms.Lib/Services/MixService.cs
    startLine: 524
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Services
  syntax:
    content: public static Task RemoveCacheAsync(Type type, string key = null)
    parameters:
    - id: type
      type: System.Type
    - id: key
      type: System.String
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Shared Function RemoveCacheAsync(type As Type, key As String = Nothing) As Task
  overload: Mix.Cms.Lib.Services.MixService.RemoveCacheAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Cms.Lib.Services
  commentId: N:Mix.Cms.Lib.Services
  name: Mix.Cms.Lib.Services
  nameWithType: Mix.Cms.Lib.Services
  fullName: Mix.Cms.Lib.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Services.MixService.#ctor*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.#ctor
  name: MixService
  nameWithType: MixService.MixService
  fullName: Mix.Cms.Lib.Services.MixService.MixService
- uid: Mix.Cms.Lib.Services.MixService.Instance*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Instance
  name: Instance
  nameWithType: MixService.Instance
  fullName: Mix.Cms.Lib.Services.MixService.Instance
- uid: Mix.Cms.Lib.Services.MixService
  commentId: T:Mix.Cms.Lib.Services.MixService
  parent: Mix.Cms.Lib.Services
  name: MixService
  nameWithType: MixService
  fullName: Mix.Cms.Lib.Services.MixService
- uid: Mix.Cms.Lib.Services.MixService.DefaultInstance*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.DefaultInstance
  name: DefaultInstance
  nameWithType: MixService.DefaultInstance
  fullName: Mix.Cms.Lib.Services.MixService.DefaultInstance
- uid: Mix.Cms.Lib.Services.MixService.GetConnectionString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetConnectionString
  name: GetConnectionString
  nameWithType: MixService.GetConnectionString
  fullName: Mix.Cms.Lib.Services.MixService.GetConnectionString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Services.MixService.SetConnectionString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetConnectionString
  name: SetConnectionString
  nameWithType: MixService.SetConnectionString
  fullName: Mix.Cms.Lib.Services.MixService.SetConnectionString
- uid: Mix.Cms.Lib.Services.MixService.CheckValidCulture*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.CheckValidCulture
  name: CheckValidCulture
  nameWithType: MixService.CheckValidCulture
  fullName: Mix.Cms.Lib.Services.MixService.CheckValidCulture
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.Services.MixService.GetAuthConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetAuthConfig
  name: GetAuthConfig
  nameWithType: MixService.GetAuthConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetAuthConfig
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Cms.Lib.Services.MixService.SetAuthConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetAuthConfig
  name: SetAuthConfig
  nameWithType: MixService.SetAuthConfig
  fullName: Mix.Cms.Lib.Services.MixService.SetAuthConfig
- uid: Mix.Cms.Lib.Services.MixService.GetIpConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetIpConfig
  name: GetIpConfig
  nameWithType: MixService.GetIpConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetIpConfig
- uid: Mix.Cms.Lib.Services.MixService.SetIpConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetIpConfig
  name: SetIpConfig
  nameWithType: MixService.SetIpConfig
  fullName: Mix.Cms.Lib.Services.MixService.SetIpConfig
- uid: Mix.Cms.Lib.Services.MixService.GetMixConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetMixConfig
  name: GetMixConfig
  nameWithType: MixService.GetMixConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetMixConfig
- uid: Mix.Cms.Lib.Services.MixService.SetMixConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetMixConfig
  name: SetMixConfig
  nameWithType: MixService.SetMixConfig
  fullName: Mix.Cms.Lib.Services.MixService.SetMixConfig
- uid: Mix.Cms.Lib.Services.MixService.GetConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetConfig
  name: GetConfig
  nameWithType: MixService.GetConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetConfig
- uid: Mix.Cms.Lib.Services.MixService.GetEnumConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetEnumConfig
  name: GetEnumConfig
  nameWithType: MixService.GetEnumConfig
  fullName: Mix.Cms.Lib.Services.MixService.GetEnumConfig
- uid: Mix.Cms.Lib.Services.MixService.SetConfig*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SetConfig
  name: SetConfig
  nameWithType: MixService.SetConfig
  fullName: Mix.Cms.Lib.Services.MixService.SetConfig
- uid: Mix.Cms.Lib.Services.MixService.Translate*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Translate
  name: Translate
  nameWithType: MixService.Translate
  fullName: Mix.Cms.Lib.Services.MixService.Translate
- uid: Mix.Cms.Lib.Services.MixService.TranslateString*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.TranslateString
  name: TranslateString
  nameWithType: MixService.TranslateString
  fullName: Mix.Cms.Lib.Services.MixService.TranslateString
- uid: Mix.Cms.Lib.Services.MixService.GetTranslator*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetTranslator
  name: GetTranslator
  nameWithType: MixService.GetTranslator
  fullName: Mix.Cms.Lib.Services.MixService.GetTranslator
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Cms.Lib.Services.MixService.GetLocalSettings*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetLocalSettings
  name: GetLocalSettings
  nameWithType: MixService.GetLocalSettings
  fullName: Mix.Cms.Lib.Services.MixService.GetLocalSettings
- uid: Mix.Cms.Lib.Services.MixService.GetGlobalSetting*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetGlobalSetting
  name: GetGlobalSetting
  nameWithType: MixService.GetGlobalSetting
  fullName: Mix.Cms.Lib.Services.MixService.GetGlobalSetting
- uid: Mix.Cms.Lib.Services.MixService.SaveSettings*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SaveSettings
  name: SaveSettings
  nameWithType: MixService.SaveSettings
  fullName: Mix.Cms.Lib.Services.MixService.SaveSettings
- uid: Mix.Cms.Lib.Services.MixService.Reload*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.Reload
  name: Reload
  nameWithType: MixService.Reload
  fullName: Mix.Cms.Lib.Services.MixService.Reload
- uid: Mix.Cms.Lib.Services.MixService.LoadFromDatabase*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.LoadFromDatabase
  name: LoadFromDatabase
  nameWithType: MixService.LoadFromDatabase
  fullName: Mix.Cms.Lib.Services.MixService.LoadFromDatabase
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Cms.Lib.Services.MixService.SendEdm*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SendEdm
  name: SendEdm
  nameWithType: MixService.SendEdm
  fullName: Mix.Cms.Lib.Services.MixService.SendEdm
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Cms.Lib.Services.MixService.SendMail*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.SendMail
  name: SendMail
  nameWithType: MixService.SendMail
  fullName: Mix.Cms.Lib.Services.MixService.SendMail
- uid: Mix.Cms.Lib.Services.MixService.LogException*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.LogException
  name: LogException
  nameWithType: MixService.LogException
  fullName: Mix.Cms.Lib.Services.MixService.LogException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Mix.Cms.Lib.Services.MixService.GetTemplateFolder*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetTemplateFolder
  name: GetTemplateFolder
  nameWithType: MixService.GetTemplateFolder
  fullName: Mix.Cms.Lib.Services.MixService.GetTemplateFolder
- uid: Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder
  name: GetTemplateUploadFolder
  nameWithType: MixService.GetTemplateUploadFolder
  fullName: Mix.Cms.Lib.Services.MixService.GetTemplateUploadFolder
- uid: Mix.Cms.Lib.Services.MixService.GetDbContext*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetDbContext
  name: GetDbContext
  nameWithType: MixService.GetDbContext
  fullName: Mix.Cms.Lib.Services.MixService.GetDbContext
- uid: Mix.Cms.Lib.Services.MixService.GetAccountDbContext*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.GetAccountDbContext
  name: GetAccountDbContext
  nameWithType: MixService.GetAccountDbContext
  fullName: Mix.Cms.Lib.Services.MixService.GetAccountDbContext
- uid: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  commentId: T:Mix.Cms.Lib.Models.Account.MixCmsAccountContext
  parent: Mix.Cms.Lib.Models.Account
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext
  fullName: Mix.Cms.Lib.Models.Account.MixCmsAccountContext
- uid: Mix.Cms.Lib.Models.Account
  commentId: N:Mix.Cms.Lib.Models.Account
  name: Mix.Cms.Lib.Models.Account
  nameWithType: Mix.Cms.Lib.Models.Account
  fullName: Mix.Cms.Lib.Models.Account
- uid: Mix.Cms.Lib.Services.MixService.RemoveCacheAsync*
  commentId: Overload:Mix.Cms.Lib.Services.MixService.RemoveCacheAsync
  name: RemoveCacheAsync
  nameWithType: MixService.RemoveCacheAsync
  fullName: Mix.Cms.Lib.Services.MixService.RemoveCacheAsync
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
