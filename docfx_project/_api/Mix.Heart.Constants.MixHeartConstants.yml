### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Constants.MixHeartConstants
  commentId: T:Mix.Heart.Constants.MixHeartConstants
  id: MixHeartConstants
  parent: Mix.Heart.Constants
  children:
  - Mix.Heart.Constants.MixHeartConstants.AUDIT_LOG_CONNECTION
  - Mix.Heart.Constants.MixHeartConstants.CACHE_CONNECTION
  - Mix.Heart.Constants.MixHeartConstants.ConfigFilePath
  langs:
  - csharp
  - vb
  name: MixHeartConstants
  nameWithType: MixHeartConstants
  fullName: Mix.Heart.Constants.MixHeartConstants
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Constants/MixHeartConstants.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: MixHeartConstants
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Constants/MixHeartConstants.cs
    startLine: 2
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Constants
  syntax:
    content: public class MixHeartConstants
    content.vb: Public Class MixHeartConstants
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Heart.Constants.MixHeartConstants.CACHE_CONNECTION
  commentId: F:Mix.Heart.Constants.MixHeartConstants.CACHE_CONNECTION
  id: CACHE_CONNECTION
  parent: Mix.Heart.Constants.MixHeartConstants
  langs:
  - csharp
  - vb
  name: CACHE_CONNECTION
  nameWithType: MixHeartConstants.CACHE_CONNECTION
  fullName: Mix.Heart.Constants.MixHeartConstants.CACHE_CONNECTION
  type: Field
  source:
    remote:
      path: src/Mix.Heart/Constants/MixHeartConstants.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: CACHE_CONNECTION
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Constants/MixHeartConstants.cs
    startLine: 4
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Constants
  syntax:
    content: public const string CACHE_CONNECTION = "cacheConnection"
    return:
      type: System.String
    content.vb: Public Const CACHE_CONNECTION As String = "cacheConnection"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Heart.Constants.MixHeartConstants.AUDIT_LOG_CONNECTION
  commentId: F:Mix.Heart.Constants.MixHeartConstants.AUDIT_LOG_CONNECTION
  id: AUDIT_LOG_CONNECTION
  parent: Mix.Heart.Constants.MixHeartConstants
  langs:
  - csharp
  - vb
  name: AUDIT_LOG_CONNECTION
  nameWithType: MixHeartConstants.AUDIT_LOG_CONNECTION
  fullName: Mix.Heart.Constants.MixHeartConstants.AUDIT_LOG_CONNECTION
  type: Field
  source:
    remote:
      path: src/Mix.Heart/Constants/MixHeartConstants.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: AUDIT_LOG_CONNECTION
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Constants/MixHeartConstants.cs
    startLine: 5
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Constants
  syntax:
    content: public const string AUDIT_LOG_CONNECTION = "AuditLogConnection"
    return:
      type: System.String
    content.vb: Public Const AUDIT_LOG_CONNECTION As String = "AuditLogConnection"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Heart.Constants.MixHeartConstants.ConfigFilePath
  commentId: F:Mix.Heart.Constants.MixHeartConstants.ConfigFilePath
  id: ConfigFilePath
  parent: Mix.Heart.Constants.MixHeartConstants
  langs:
  - csharp
  - vb
  name: ConfigFilePath
  nameWithType: MixHeartConstants.ConfigFilePath
  fullName: Mix.Heart.Constants.MixHeartConstants.ConfigFilePath
  type: Field
  source:
    remote:
      path: src/Mix.Heart/Constants/MixHeartConstants.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: ConfigFilePath
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Constants/MixHeartConstants.cs
    startLine: 6
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Constants
  syntax:
    content: public const string ConfigFilePath = "MixContent/AppConfigs/mix_heart"
    return:
      type: System.String
    content.vb: Public Const ConfigFilePath As String = "MixContent/AppConfigs/mix_heart"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mix.Heart.Constants
  commentId: N:Mix.Heart.Constants
  name: Mix.Heart.Constants
  nameWithType: Mix.Heart.Constants
  fullName: Mix.Heart.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
