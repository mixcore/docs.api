### YamlMime:ManagedReference
items:
- uid: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration
  commentId: T:Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration
  id: MixThemeConfiguration
  parent: Mix.Database.EntityConfigurations.POSTGRES
  children:
  - Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure(EntityTypeBuilder{MixTheme})
  langs:
  - csharp
  - vb
  name: MixThemeConfiguration
  nameWithType: MixThemeConfiguration
  fullName: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration
  type: Class
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/POSTGRES/MixThemeConfiguration.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeConfiguration
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/POSTGRES/MixThemeConfiguration.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations.POSTGRES
  syntax:
    content: 'public class MixThemeConfiguration : PostgresTenantEntityBaseConfiguration<MixTheme, int>'
    content.vb: >-
      Public Class MixThemeConfiguration
          Inherits PostgresTenantEntityBaseConfiguration(Of MixTheme, Integer)
  inheritance:
  - System.Object
  - Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  - Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  - Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration{MixTheme,System.Int32}
  inheritedMembers:
  - Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  - Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Config
  - Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure(EntityTypeBuilder{MixTheme})
  commentId: M:Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure(EntityTypeBuilder{MixTheme})
  id: Configure(EntityTypeBuilder{MixTheme})
  parent: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration
  langs:
  - csharp
  - vb
  name: Configure(EntityTypeBuilder<MixTheme>)
  nameWithType: MixThemeConfiguration.Configure(EntityTypeBuilder<MixTheme>)
  fullName: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure(EntityTypeBuilder<MixTheme>)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/POSTGRES/MixThemeConfiguration.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configure
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/POSTGRES/MixThemeConfiguration.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations.POSTGRES
  syntax:
    content: public override void Configure(EntityTypeBuilder<MixTheme> builder)
    parameters:
    - id: builder
      type: EntityTypeBuilder{MixTheme}
    content.vb: Public Overrides Sub Configure(builder As EntityTypeBuilder(Of MixTheme))
  overridden: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  overload: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure*
  nameWithType.vb: MixThemeConfiguration.Configure(EntityTypeBuilder(Of MixTheme))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure(EntityTypeBuilder(Of MixTheme))
  name.vb: Configure(EntityTypeBuilder(Of MixTheme))
references:
- uid: Mix.Database.EntityConfigurations.POSTGRES
  commentId: N:Mix.Database.EntityConfigurations.POSTGRES
  name: Mix.Database.EntityConfigurations.POSTGRES
  nameWithType: Mix.Database.EntityConfigurations.POSTGRES
  fullName: Mix.Database.EntityConfigurations.POSTGRES
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  commentId: T:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  parent: Mix.Database.EntityConfigurations.Base
  definition: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
  name: EntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>
  nameWithType: EntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>
  nameWithType.vb: EntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants)
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants)
  name.vb: EntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
    name: PostgresDatabaseConstants
    nameWithType: PostgresDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
    name: PostgresDatabaseConstants
    nameWithType: PostgresDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  commentId: T:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  parent: Mix.Database.EntityConfigurations.Base
  definition: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
  name: TenantEntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>
  nameWithType: TenantEntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>
  nameWithType.vb: TenantEntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants)
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants)
  name.vb: TenantEntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
    name: PostgresDatabaseConstants
    nameWithType: PostgresDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
    name: PostgresDatabaseConstants
    nameWithType: PostgresDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration{MixTheme,System.Int32}
  commentId: T:Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration{MixTheme,System.Int32}
  parent: Mix.Database.EntityConfigurations.POSTGRES.Base
  definition: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
  name: PostgresTenantEntityBaseConfiguration<MixTheme, Int32>
  nameWithType: PostgresTenantEntityBaseConfiguration<MixTheme, Int32>
  fullName: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration<MixTheme, System.Int32>
  nameWithType.vb: PostgresTenantEntityBaseConfiguration(Of MixTheme, Int32)
  fullName.vb: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration(Of MixTheme, System.Int32)
  name.vb: PostgresTenantEntityBaseConfiguration(Of MixTheme, Int32)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
    name: PostgresTenantEntityBaseConfiguration
    nameWithType: PostgresTenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
    name: PostgresTenantEntityBaseConfiguration
    nameWithType: PostgresTenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  commentId: M:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  parent: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<MixTheme>)
  nameWithType: TenantEntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>.Configure(EntityTypeBuilder<MixTheme>)
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>.Configure(EntityTypeBuilder<MixTheme>)
  nameWithType.vb: TenantEntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants).Configure(EntityTypeBuilder(Of MixTheme))
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants).Configure(EntityTypeBuilder(Of MixTheme))
  name.vb: Configure(EntityTypeBuilder(Of MixTheme))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants).Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Config
  commentId: P:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Config
  parent: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Config
  name: Config
  nameWithType: EntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>.Config
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>.Config
  nameWithType.vb: EntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants).Config
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants).Config
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  commentId: M:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}.Configure(EntityTypeBuilder{MixTheme})
  parent: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixTheme,System.Int32,Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<MixTheme>)
  nameWithType: EntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>.Configure(EntityTypeBuilder<MixTheme>)
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>.Configure(EntityTypeBuilder<MixTheme>)
  nameWithType.vb: EntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants).Configure(EntityTypeBuilder(Of MixTheme))
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants).Configure(EntityTypeBuilder(Of MixTheme))
  name.vb: Configure(EntityTypeBuilder(Of MixTheme))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration<MixTheme, Int32, PostgresDatabaseConstants>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration(Of MixTheme, Int32, PostgresDatabaseConstants).Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixTheme, System.Int32, Mix.Database.EntityConfigurations.POSTGRES.PostgresDatabaseConstants).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
  commentId: T:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
  name: EntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  name.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base
  commentId: N:Mix.Database.EntityConfigurations.Base
  name: Mix.Database.EntityConfigurations.Base
  nameWithType: Mix.Database.EntityConfigurations.Base
  fullName: Mix.Database.EntityConfigurations.Base
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
  commentId: T:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
  name: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType.vb: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  name.vb: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
  commentId: T:Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
  name: PostgresTenantEntityBaseConfiguration<T, TPrimaryKey>
  nameWithType: PostgresTenantEntityBaseConfiguration<T, TPrimaryKey>
  fullName: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration<T, TPrimaryKey>
  nameWithType.vb: PostgresTenantEntityBaseConfiguration(Of T, TPrimaryKey)
  fullName.vb: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration(Of T, TPrimaryKey)
  name.vb: PostgresTenantEntityBaseConfiguration(Of T, TPrimaryKey)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
    name: PostgresTenantEntityBaseConfiguration
    nameWithType: PostgresTenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration`2
    name: PostgresTenantEntityBaseConfiguration
    nameWithType: PostgresTenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.POSTGRES.Base.PostgresTenantEntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.POSTGRES.Base
  commentId: N:Mix.Database.EntityConfigurations.POSTGRES.Base
  name: Mix.Database.EntityConfigurations.POSTGRES.Base
  nameWithType: Mix.Database.EntityConfigurations.POSTGRES.Base
  fullName: Mix.Database.EntityConfigurations.POSTGRES.Base
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  commentId: M:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  isExternal: true
  name: Configure(EntityTypeBuilder<T>)
  nameWithType: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  nameWithType.vb: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  name.vb: Configure(EntityTypeBuilder(Of T))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Config
  commentId: P:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Config
  name: Config
  nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Config
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Config
  nameWithType.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Config
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Config
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  commentId: M:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  isExternal: true
  name: Configure(EntityTypeBuilder<T>)
  nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  nameWithType.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  name.vb: Configure(EntityTypeBuilder(Of T))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure*
  commentId: Overload:Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure
  name: Configure
  nameWithType: MixThemeConfiguration.Configure
  fullName: Mix.Database.EntityConfigurations.POSTGRES.MixThemeConfiguration.Configure
- uid: EntityTypeBuilder{MixTheme}
  commentId: '!:EntityTypeBuilder{MixTheme}'
  definition: EntityTypeBuilder`1
  name: EntityTypeBuilder<MixTheme>
  nameWithType: EntityTypeBuilder<MixTheme>
  fullName: EntityTypeBuilder<MixTheme>
  nameWithType.vb: EntityTypeBuilder(Of MixTheme)
  fullName.vb: EntityTypeBuilder(Of MixTheme)
  name.vb: EntityTypeBuilder(Of MixTheme)
  spec.csharp:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTheme
    name: MixTheme
    nameWithType: MixTheme
    fullName: MixTheme
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EntityTypeBuilder`1
  isExternal: true
  name: EntityTypeBuilder<>
  nameWithType: EntityTypeBuilder<>
  fullName: EntityTypeBuilder<>
  nameWithType.vb: EntityTypeBuilder(Of )
  fullName.vb: EntityTypeBuilder(Of )
  name.vb: EntityTypeBuilder(Of )
  spec.csharp:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
