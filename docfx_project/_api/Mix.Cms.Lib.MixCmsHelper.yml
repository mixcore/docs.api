### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.MixCmsHelper
  commentId: T:Mix.Cms.Lib.MixCmsHelper
  id: MixCmsHelper
  parent: Mix.Cms.Lib
  children:
  - Mix.Cms.Lib.MixCmsHelper.CheckIsPrice(System.String)
  - Mix.Cms.Lib.MixCmsHelper.FilterObjectSet``2(System.String,``1,Mix.Cms.Lib.Enums.MixCompareOperatorKind)
  - Mix.Cms.Lib.MixCmsHelper.FormatPrice(System.Nullable{System.Double},System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetAssetFolder(System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.MixCmsHelper.GetCategory(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,Mix.Cms.Lib.Enums.MixPageType,System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField``1(System.String,System.Object,System.String,Mix.Cms.Lib.Enums.MixDataType,Mix.Cms.Lib.Enums.MixCompareOperatorKind,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.MixCmsHelper.GetModule(System.String,System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetModuleAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  - Mix.Cms.Lib.MixCmsHelper.GetNavigation(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  - Mix.Cms.Lib.MixCmsHelper.GetPage(System.Int32,System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetPageAsync(System.Int32,System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta``1(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId(Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.MixCmsHelper.GetRouterUrl(System.Object,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Mvc.IUrlHelper)
  - Mix.Cms.Lib.MixCmsHelper.GetSEOString(System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath(System.String,System.String)
  - Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder(System.String)
  - Mix.Cms.Lib.MixCmsHelper.LoadDataFile(System.String,System.String)
  - Mix.Cms.Lib.MixCmsHelper.LogException(System.Exception)
  - Mix.Cms.Lib.MixCmsHelper.Property``1(Newtonsoft.Json.Linq.JObject,System.String)
  - Mix.Cms.Lib.MixCmsHelper.ReversePrice(System.String)
  langs:
  - csharp
  - vb
  name: MixCmsHelper
  nameWithType: MixCmsHelper
  fullName: Mix.Cms.Lib.MixCmsHelper
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCmsHelper
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public class MixCmsHelper
    content.vb: Public Class MixCmsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.MixCmsHelper.GetSEOString(System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetSEOString(System.String)
  id: GetSEOString(System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetSEOString(String)
  nameWithType: MixCmsHelper.GetSEOString(String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetSEOString(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetSEOString
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 31
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static string GetSEOString(string input)
    parameters:
    - id: input
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetSEOString(input As String) As String
  overload: Mix.Cms.Lib.MixCmsHelper.GetSEOString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.LoadDataFile(System.String,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.LoadDataFile(System.String,System.String)
  id: LoadDataFile(System.String,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: LoadDataFile(String, String)
  nameWithType: MixCmsHelper.LoadDataFile(String, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.LoadDataFile(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadDataFile
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 35
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static FileViewModel LoadDataFile(string folder, string name)
    parameters:
    - id: folder
      type: System.String
    - id: name
      type: System.String
    return:
      type: Mix.Services.FileViewModel
    content.vb: Public Shared Function LoadDataFile(folder As String, name As String) As FileViewModel
  overload: Mix.Cms.Lib.MixCmsHelper.LoadDataFile*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetAssetFolder(System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetAssetFolder(System.String)
  id: GetAssetFolder(System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetAssetFolder(String)
  nameWithType: MixCmsHelper.GetAssetFolder(String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetAssetFolder(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAssetFolder
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 40
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static string GetAssetFolder(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetAssetFolder(culture As String) As String
  overload: Mix.Cms.Lib.MixCmsHelper.GetAssetFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder(System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder(System.String)
  id: GetTemplateFolder(System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetTemplateFolder(String)
  nameWithType: MixCmsHelper.GetTemplateFolder(String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetTemplateFolder
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 46
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static string GetTemplateFolder(string culture)
    parameters:
    - id: culture
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetTemplateFolder(culture As String) As String
  overload: Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.Property``1(Newtonsoft.Json.Linq.JObject,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.Property``1(Newtonsoft.Json.Linq.JObject,System.String)
  id: Property``1(Newtonsoft.Json.Linq.JObject,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: Property<T>(JObject, String)
  nameWithType: MixCmsHelper.Property<T>(JObject, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.Property<T>(Newtonsoft.Json.Linq.JObject, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 50
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static T Property<T>(JObject obj, string fieldName)
    parameters:
    - id: obj
      type: Newtonsoft.Json.Linq.JObject
    - id: fieldName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Shared Function Property(Of T)(obj As JObject, fieldName As String) As T
  overload: Mix.Cms.Lib.MixCmsHelper.Property*
  nameWithType.vb: MixCmsHelper.Property(Of T)(JObject, String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.Property(Of T)(Newtonsoft.Json.Linq.JObject, System.String)
  name.vb: Property(Of T)(JObject, String)
- uid: Mix.Cms.Lib.MixCmsHelper.GetCategory(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,Mix.Cms.Lib.Enums.MixPageType,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetCategory(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,Mix.Cms.Lib.Enums.MixPageType,System.String)
  id: GetCategory(Microsoft.AspNetCore.Mvc.IUrlHelper,System.String,Mix.Cms.Lib.Enums.MixPageType,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetCategory(IUrlHelper, String, MixPageType, String)
  nameWithType: MixCmsHelper.GetCategory(IUrlHelper, String, MixPageType, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetCategory(Microsoft.AspNetCore.Mvc.IUrlHelper, System.String, Mix.Cms.Lib.Enums.MixPageType, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetCategory
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 91
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static List<ReadListItemViewModel> GetCategory(IUrlHelper Url, string culture, MixPageType cateType, string activePath = "")
    parameters:
    - id: Url
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
    - id: culture
      type: System.String
    - id: cateType
      type: Mix.Cms.Lib.Enums.MixPageType
    - id: activePath
      type: System.String
    return:
      type: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
    content.vb: Public Shared Function GetCategory(Url As IUrlHelper, culture As String, cateType As MixPageType, activePath As String = "") As List(Of ReadListItemViewModel)
  overload: Mix.Cms.Lib.MixCmsHelper.GetCategory*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetRouterUrl(System.Object,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Mvc.IUrlHelper)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetRouterUrl(System.Object,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Mvc.IUrlHelper)
  id: GetRouterUrl(System.Object,Microsoft.AspNetCore.Http.HttpRequest,Microsoft.AspNetCore.Mvc.IUrlHelper)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetRouterUrl(Object, HttpRequest, IUrlHelper)
  nameWithType: MixCmsHelper.GetRouterUrl(Object, HttpRequest, IUrlHelper)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetRouterUrl(System.Object, Microsoft.AspNetCore.Http.HttpRequest, Microsoft.AspNetCore.Mvc.IUrlHelper)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetRouterUrl
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 116
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static string GetRouterUrl(object routeValues, HttpRequest request, IUrlHelper Url)
    parameters:
    - id: routeValues
      type: System.Object
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
    - id: Url
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
    return:
      type: System.String
    content.vb: Public Shared Function GetRouterUrl(routeValues As Object, request As HttpRequest, Url As IUrlHelper) As String
  overload: Mix.Cms.Lib.MixCmsHelper.GetRouterUrl*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.FormatPrice(System.Nullable{System.Double},System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.FormatPrice(System.Nullable{System.Double},System.String)
  id: FormatPrice(System.Nullable{System.Double},System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: FormatPrice(Nullable<Double>, String)
  nameWithType: MixCmsHelper.FormatPrice(Nullable<Double>, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.FormatPrice(System.Nullable<System.Double>, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FormatPrice
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 131
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static string FormatPrice(double? price, string oldPrice = "0")
    parameters:
    - id: price
      type: System.Nullable{System.Double}
    - id: oldPrice
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function FormatPrice(price As Double?, oldPrice As String = "0") As String
  overload: Mix.Cms.Lib.MixCmsHelper.FormatPrice*
  nameWithType.vb: MixCmsHelper.FormatPrice(Nullable(Of Double), String)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.FormatPrice(System.Nullable(Of System.Double), System.String)
  name.vb: FormatPrice(Nullable(Of Double), String)
- uid: Mix.Cms.Lib.MixCmsHelper.CheckIsPrice(System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.CheckIsPrice(System.String)
  id: CheckIsPrice(System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: CheckIsPrice(String)
  nameWithType: MixCmsHelper.CheckIsPrice(String)
  fullName: Mix.Cms.Lib.MixCmsHelper.CheckIsPrice(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CheckIsPrice
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 151
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static bool CheckIsPrice(string number)
    parameters:
    - id: number
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function CheckIsPrice(number As String) As Boolean
  overload: Mix.Cms.Lib.MixCmsHelper.CheckIsPrice*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.ReversePrice(System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.ReversePrice(System.String)
  id: ReversePrice(System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: ReversePrice(String)
  nameWithType: MixCmsHelper.ReversePrice(String)
  fullName: Mix.Cms.Lib.MixCmsHelper.ReversePrice(System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ReversePrice
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 161
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static double ReversePrice(string formatedPrice)
    parameters:
    - id: formatedPrice
      type: System.String
    return:
      type: System.Double
    content.vb: Public Shared Function ReversePrice(formatedPrice As String) As Double
  overload: Mix.Cms.Lib.MixCmsHelper.ReversePrice*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.LogException(System.Exception)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.LogException(System.Exception)
  id: LogException(System.Exception)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: LogException(Exception)
  nameWithType: MixCmsHelper.LogException(Exception)
  fullName: Mix.Cms.Lib.MixCmsHelper.LogException(System.Exception)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LogException
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 177
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static void LogException(Exception ex)
    parameters:
    - id: ex
      type: System.Exception
    content.vb: Public Shared Sub LogException(ex As Exception)
  overload: Mix.Cms.Lib.MixCmsHelper.LogException*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetModuleAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetModuleAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  id: GetModuleAsync(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetModuleAsync(String, String, IUrlHelper)
  nameWithType: MixCmsHelper.GetModuleAsync(String, String, IUrlHelper)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetModuleAsync(System.String, System.String, Microsoft.AspNetCore.Mvc.IUrlHelper)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetModuleAsync
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 219
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Task<ReadMvcViewModel> GetModuleAsync(string name, string culture, IUrlHelper url = null)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    - id: url
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
    return:
      type: System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel}
    content.vb: Public Shared Function GetModuleAsync(name As String, culture As String, url As IUrlHelper = Nothing) As Task(Of ReadMvcViewModel)
  overload: Mix.Cms.Lib.MixCmsHelper.GetModuleAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetPageAsync(System.Int32,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetPageAsync(System.Int32,System.String)
  id: GetPageAsync(System.Int32,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetPageAsync(Int32, String)
  nameWithType: MixCmsHelper.GetPageAsync(Int32, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPageAsync(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPageAsync
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 235
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Task<ReadMvcViewModel> GetPageAsync(int id, string culture)
    parameters:
    - id: id
      type: System.Int32
    - id: culture
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel}
    content.vb: Public Shared Function GetPageAsync(id As Integer, culture As String) As Task(Of ReadMvcViewModel)
  overload: Mix.Cms.Lib.MixCmsHelper.GetPageAsync*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetModule(System.String,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetModule(System.String,System.String)
  id: GetModule(System.String,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetModule(String, String)
  nameWithType: MixCmsHelper.GetModule(String, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetModule(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetModule
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 246
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static ReadMvcViewModel GetModule(string name, string culture)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    return:
      type: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
    content.vb: Public Shared Function GetModule(name As String, culture As String) As ReadMvcViewModel
  overload: Mix.Cms.Lib.MixCmsHelper.GetModule*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetPage(System.Int32,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetPage(System.Int32,System.String)
  id: GetPage(System.Int32,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetPage(Int32, String)
  nameWithType: MixCmsHelper.GetPage(Int32, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPage(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPage
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 252
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static ReadMvcViewModel GetPage(int id, string culture)
    parameters:
    - id: id
      type: System.Int32
    - id: culture
      type: System.String
    return:
      type: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
    content.vb: Public Shared Function GetPage(id As Integer, culture As String) As ReadMvcViewModel
  overload: Mix.Cms.Lib.MixCmsHelper.GetPage*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath(System.String,System.String)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath(System.String,System.String)
  id: GetTemplateByPath(System.String,System.String)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetTemplateByPath(String, String)
  nameWithType: MixCmsHelper.GetTemplateByPath(String, String)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetTemplateByPath
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 258
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Task<ReadViewModel> GetTemplateByPath(string themeName, string templatePath)
    parameters:
    - id: themeName
      type: System.String
    - id: templatePath
      type: System.String
    return:
      type: System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel}
    content.vb: Public Shared Function GetTemplateByPath(themeName As String, templatePath As String) As Task(Of ReadViewModel)
  overload: Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetNavigation(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetNavigation(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  id: GetNavigation(System.String,System.String,Microsoft.AspNetCore.Mvc.IUrlHelper)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetNavigation(String, String, IUrlHelper)
  nameWithType: MixCmsHelper.GetNavigation(String, String, IUrlHelper)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetNavigation(System.String, System.String, Microsoft.AspNetCore.Mvc.IUrlHelper)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetNavigation
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 271
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Task<MixNavigation> GetNavigation(string name, string culture, IUrlHelper Url)
    parameters:
    - id: name
      type: System.String
    - id: culture
      type: System.String
    - id: Url
      type: Microsoft.AspNetCore.Mvc.IUrlHelper
    return:
      type: System.Threading.Tasks.Task{Mix.Cms.Lib.Models.Common.MixNavigation}
    content.vb: Public Shared Function GetNavigation(name As String, culture As String, Url As IUrlHelper) As Task(Of MixNavigation)
  overload: Mix.Cms.Lib.MixCmsHelper.GetNavigation*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField``1(System.String,System.Object,System.String,Mix.Cms.Lib.Enums.MixDataType,Mix.Cms.Lib.Enums.MixCompareOperatorKind,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField``1(System.String,System.Object,System.String,Mix.Cms.Lib.Enums.MixDataType,Mix.Cms.Lib.Enums.MixCompareOperatorKind,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetListPostByAdditionalField``1(System.String,System.Object,System.String,Mix.Cms.Lib.Enums.MixDataType,Mix.Cms.Lib.Enums.MixCompareOperatorKind,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetListPostByAdditionalField<TView>(String, Object, String, MixDataType, MixCompareOperatorKind, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: MixCmsHelper.GetListPostByAdditionalField<TView>(String, Object, String, MixDataType, MixCompareOperatorKind, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField<TView>(System.String, System.Object, System.String, Mix.Cms.Lib.Enums.MixDataType, Mix.Cms.Lib.Enums.MixCompareOperatorKind, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetListPostByAdditionalField
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 320
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetListPostByAdditionalField<TView>(string fieldName, object fieldValue, string culture, MixDataType dataType, MixCompareOperatorKind filterType = MixCompareOperatorKind.Equal, string orderByPropertyName = null, MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Asc, int? pageSize = default(int? ), int? pageIndex = default(int? ), MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: fieldName
      type: System.String
    - id: fieldValue
      type: System.Object
    - id: culture
      type: System.String
    - id: dataType
      type: Mix.Cms.Lib.Enums.MixDataType
    - id: filterType
      type: Mix.Cms.Lib.Enums.MixCompareOperatorKind
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetListPostByAdditionalField(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(fieldName As String, fieldValue As Object, culture As String, dataType As MixDataType, filterType As MixCompareOperatorKind = MixCompareOperatorKind.Equal, orderByPropertyName As String = Nothing, direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Asc, pageSize As Integer? = Nothing, pageIndex As Integer? = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField*
  nameWithType.vb: MixCmsHelper.GetListPostByAdditionalField(Of TView)(String, Object, String, MixDataType, MixCompareOperatorKind, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField(Of TView)(System.String, System.Object, System.String, Mix.Cms.Lib.Enums.MixDataType, Mix.Cms.Lib.Enums.MixCompareOperatorKind, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetListPostByAdditionalField(Of TView)(String, Object, String, MixDataType, MixCompareOperatorKind, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.MixCmsHelper.FilterObjectSet``2(System.String,``1,Mix.Cms.Lib.Enums.MixCompareOperatorKind)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.FilterObjectSet``2(System.String,``1,Mix.Cms.Lib.Enums.MixCompareOperatorKind)
  id: FilterObjectSet``2(System.String,``1,Mix.Cms.Lib.Enums.MixCompareOperatorKind)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: FilterObjectSet<TModel, T>(String, T, MixCompareOperatorKind)
  nameWithType: MixCmsHelper.FilterObjectSet<TModel, T>(String, T, MixCompareOperatorKind)
  fullName: Mix.Cms.Lib.MixCmsHelper.FilterObjectSet<TModel, T>(System.String, T, Mix.Cms.Lib.Enums.MixCompareOperatorKind)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FilterObjectSet
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 437
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Expression<Func<TModel, bool>> FilterObjectSet<TModel, T>(string propName, T data2, MixCompareOperatorKind filterType)
    parameters:
    - id: propName
      type: System.String
    - id: data2
      type: '{T}'
    - id: filterType
      type: Mix.Cms.Lib.Enums.MixCompareOperatorKind
    typeParameters:
    - id: TModel
    - id: T
    return:
      type: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
    content.vb: Public Shared Function FilterObjectSet(Of TModel, T)(propName As String, data2 As T, filterType As MixCompareOperatorKind) As Expression(Of Func(Of TModel, Boolean))
  overload: Mix.Cms.Lib.MixCmsHelper.FilterObjectSet*
  nameWithType.vb: MixCmsHelper.FilterObjectSet(Of TModel, T)(String, T, MixCompareOperatorKind)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.FilterObjectSet(Of TModel, T)(System.String, T, Mix.Cms.Lib.Enums.MixCompareOperatorKind)
  name.vb: FilterObjectSet(Of TModel, T)(String, T, MixCompareOperatorKind)
- uid: Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta``1(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta``1(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostlistByMeta``1(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetPostlistByMeta<TView>(HttpContext, String, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  nameWithType: MixCmsHelper.GetPostlistByMeta<TView>(HttpContext, String, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta<TView>(Microsoft.AspNetCore.Http.HttpContext, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostlistByMeta
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 498
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostlistByMeta<TView>(HttpContext context, string culture, string type = "sys_tag", string orderByPropertyName = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: culture
      type: System.String
    - id: type
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostlistByMeta(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(context As HttpContext, culture As String, type As String = "sys_tag", orderByPropertyName As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta*
  nameWithType.vb: MixCmsHelper.GetPostlistByMeta(Of TView)(HttpContext, String, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta(Of TView)(Microsoft.AspNetCore.Http.HttpContext, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostlistByMeta(Of TView)(HttpContext, String, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostlistByAdditionalField``1(System.String,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetPostlistByAdditionalField<TView>(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: MixCmsHelper.GetPostlistByAdditionalField<TView>(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField<TView>(System.String, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostlistByAdditionalField
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 519
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetPostlistByAdditionalField<TView>(string fieldName, string value, string culture, string orderByPropertyName = null, MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Asc, int? pageSize = default(int? ), int? pageIndex, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixPost, TView>
    parameters:
    - id: fieldName
      type: System.String
    - id: value
      type: System.String
    - id: culture
      type: System.String
    - id: orderByPropertyName
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetPostlistByAdditionalField(Of TView As ViewModelBase(Of MixCmsContext, MixPost, TView))(fieldName As String, value As String, culture As String, orderByPropertyName As String = Nothing, direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Asc, pageSize As Integer? = Nothing, pageIndex As Integer?, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField*
  nameWithType.vb: MixCmsHelper.GetPostlistByAdditionalField(Of TView)(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField(Of TView)(System.String, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetPostlistByAdditionalField(Of TView)(String, String, String, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetAttributeDataByParent<TView>(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: MixCmsHelper.GetAttributeDataByParent<TView>(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent<TView>(System.String, System.String, System.String, Mix.Cms.Lib.Enums.MixDatabaseParentType, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAttributeDataByParent
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 537
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetAttributeDataByParent<TView>(string culture, string attributeSetName, string parentId, MixDatabaseParentType parentType, string orderBy = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, int? pageSize = default(int? ), int? pageIndex, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixAttributeSetData, TView>
    parameters:
    - id: culture
      type: System.String
    - id: attributeSetName
      type: System.String
    - id: parentId
      type: System.String
    - id: parentType
      type: Mix.Cms.Lib.Enums.MixDatabaseParentType
    - id: orderBy
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetAttributeDataByParent(Of TView As ViewModelBase(Of MixCmsContext, MixAttributeSetData, TView))(culture As String, attributeSetName As String, parentId As String, parentType As MixDatabaseParentType, orderBy As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, pageSize As Integer? = Nothing, pageIndex As Integer?, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent*
  nameWithType.vb: MixCmsHelper.GetAttributeDataByParent(Of TView)(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent(Of TView)(System.String, System.String, System.String, Mix.Cms.Lib.Enums.MixDatabaseParentType, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetAttributeDataByParent(Of TView)(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId(Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId(Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetPostListByPageId(Microsoft.AspNetCore.Http.HttpContext,System.Int32,System.String,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetPostListByPageId(HttpContext, Int32, String, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  nameWithType: MixCmsHelper.GetPostListByPageId(HttpContext, Int32, String, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId(Microsoft.AspNetCore.Http.HttpContext, System.Int32, System.String, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetPostListByPageId
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 550
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Task<RepositoryResponse<PaginationModel<ReadViewModel>>> GetPostListByPageId(HttpContext context, int pageId, string keyword = null, string culture = null, string orderBy = "CreatedDateTime", MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: pageId
      type: System.Int32
    - id: keyword
      type: System.String
    - id: culture
      type: System.String
    - id: orderBy
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel}}}
    content.vb: Public Shared Function GetPostListByPageId(context As HttpContext, pageId As Integer, keyword As String = Nothing, culture As String = Nothing, orderBy As String = "CreatedDateTime", direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of ReadViewModel)))
  overload: Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetAttributeDataListBySet(Microsoft.AspNetCore.Http.HttpContext,System.String,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.MixCmsHelper
  langs:
  - csharp
  - vb
  name: GetAttributeDataListBySet(HttpContext, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  nameWithType: MixCmsHelper.GetAttributeDataListBySet(HttpContext, String, String, MixHeartEnums.DisplayDirection, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet(Microsoft.AspNetCore.Http.HttpContext, System.String, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/MixCmsHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAttributeDataListBySet
    path: ../../mix.core/src/Mix.Cms.Lib/MixCmsHelper.cs
    startLine: 570
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib
  syntax:
    content: public static Task<RepositoryResponse<PaginationModel<ReadMvcViewModel>>> GetAttributeDataListBySet(HttpContext context, string attributeSetName, string culture = null, MixHeartEnums.DisplayDirection direction = MixHeartEnums.DisplayDirection.Desc, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: context
      type: Microsoft.AspNetCore.Http.HttpContext
    - id: attributeSetName
      type: System.String
    - id: culture
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel}}}
    content.vb: Public Shared Function GetAttributeDataListBySet(context As HttpContext, attributeSetName As String, culture As String = Nothing, direction As MixHeartEnums.DisplayDirection = MixHeartEnums.DisplayDirection.Desc, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of ReadMvcViewModel)))
  overload: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Cms.Lib
  commentId: N:Mix.Cms.Lib
  name: Mix.Cms.Lib
  nameWithType: Mix.Cms.Lib
  fullName: Mix.Cms.Lib
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.MixCmsHelper.GetSEOString*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetSEOString
  name: GetSEOString
  nameWithType: MixCmsHelper.GetSEOString
  fullName: Mix.Cms.Lib.MixCmsHelper.GetSEOString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.MixCmsHelper.LoadDataFile*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.LoadDataFile
  name: LoadDataFile
  nameWithType: MixCmsHelper.LoadDataFile
  fullName: Mix.Cms.Lib.MixCmsHelper.LoadDataFile
- uid: Mix.Services.FileViewModel
  commentId: T:Mix.Services.FileViewModel
  parent: Mix.Services
  isExternal: true
  name: FileViewModel
  nameWithType: FileViewModel
  fullName: Mix.Services.FileViewModel
- uid: Mix.Services
  commentId: N:Mix.Services
  isExternal: true
  name: Mix.Services
  nameWithType: Mix.Services
  fullName: Mix.Services
- uid: Mix.Cms.Lib.MixCmsHelper.GetAssetFolder*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetAssetFolder
  name: GetAssetFolder
  nameWithType: MixCmsHelper.GetAssetFolder
  fullName: Mix.Cms.Lib.MixCmsHelper.GetAssetFolder
- uid: Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder
  name: GetTemplateFolder
  nameWithType: MixCmsHelper.GetTemplateFolder
  fullName: Mix.Cms.Lib.MixCmsHelper.GetTemplateFolder
- uid: Mix.Cms.Lib.MixCmsHelper.Property*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.Property
  name: Property
  nameWithType: MixCmsHelper.Property
  fullName: Mix.Cms.Lib.MixCmsHelper.Property
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Cms.Lib.MixCmsHelper.GetCategory*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetCategory
  name: GetCategory
  nameWithType: MixCmsHelper.GetCategory
  fullName: Mix.Cms.Lib.MixCmsHelper.GetCategory
- uid: Microsoft.AspNetCore.Mvc.IUrlHelper
  commentId: T:Microsoft.AspNetCore.Mvc.IUrlHelper
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: IUrlHelper
  nameWithType: IUrlHelper
  fullName: Microsoft.AspNetCore.Mvc.IUrlHelper
- uid: Mix.Cms.Lib.Enums.MixPageType
  commentId: T:Mix.Cms.Lib.Enums.MixPageType
  parent: Mix.Cms.Lib.Enums
  name: MixPageType
  nameWithType: MixPageType
  fullName: Mix.Cms.Lib.Enums.MixPageType
- uid: System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  commentId: T:System.Collections.Generic.List{Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ReadListItemViewModel>
  nameWithType: List<ReadListItemViewModel>
  fullName: System.Collections.Generic.List<Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel>
  nameWithType.vb: List(Of ReadListItemViewModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel)
  name.vb: List(Of ReadListItemViewModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
    name: ReadListItemViewModel
    nameWithType: ReadListItemViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadListItemViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.MixCmsHelper.GetRouterUrl*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetRouterUrl
  name: GetRouterUrl
  nameWithType: MixCmsHelper.GetRouterUrl
  fullName: Mix.Cms.Lib.MixCmsHelper.GetRouterUrl
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Mix.Cms.Lib.MixCmsHelper.FormatPrice*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.FormatPrice
  name: FormatPrice
  nameWithType: MixCmsHelper.FormatPrice
  fullName: Mix.Cms.Lib.MixCmsHelper.FormatPrice
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.MixCmsHelper.CheckIsPrice*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.CheckIsPrice
  name: CheckIsPrice
  nameWithType: MixCmsHelper.CheckIsPrice
  fullName: Mix.Cms.Lib.MixCmsHelper.CheckIsPrice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.MixCmsHelper.ReversePrice*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.ReversePrice
  name: ReversePrice
  nameWithType: MixCmsHelper.ReversePrice
  fullName: Mix.Cms.Lib.MixCmsHelper.ReversePrice
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: Mix.Cms.Lib.MixCmsHelper.LogException*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.LogException
  name: LogException
  nameWithType: MixCmsHelper.LogException
  fullName: Mix.Cms.Lib.MixCmsHelper.LogException
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Mix.Cms.Lib.MixCmsHelper.GetModuleAsync*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetModuleAsync
  name: GetModuleAsync
  nameWithType: MixCmsHelper.GetModuleAsync
  fullName: Mix.Cms.Lib.MixCmsHelper.GetModuleAsync
- uid: System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel}
  commentId: T:System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReadMvcViewModel>
  nameWithType: Task<ReadMvcViewModel>
  fullName: System.Threading.Tasks.Task<Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel>
  nameWithType.vb: Task(Of ReadMvcViewModel)
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel)
  name.vb: Task(Of ReadMvcViewModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Cms.Lib.MixCmsHelper.GetPageAsync*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetPageAsync
  name: GetPageAsync
  nameWithType: MixCmsHelper.GetPageAsync
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPageAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel}
  commentId: T:System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReadMvcViewModel>
  nameWithType: Task<ReadMvcViewModel>
  fullName: System.Threading.Tasks.Task<Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel>
  nameWithType.vb: Task(Of ReadMvcViewModel)
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel)
  name.vb: Task(Of ReadMvcViewModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.MixCmsHelper.GetModule*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetModule
  name: GetModule
  nameWithType: MixCmsHelper.GetModule
  fullName: Mix.Cms.Lib.MixCmsHelper.GetModule
- uid: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
  parent: Mix.Cms.Lib.ViewModels.MixModules
  name: ReadMvcViewModel
  nameWithType: ReadMvcViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixModules.ReadMvcViewModel
- uid: Mix.Cms.Lib.ViewModels.MixModules
  commentId: N:Mix.Cms.Lib.ViewModels.MixModules
  name: Mix.Cms.Lib.ViewModels.MixModules
  nameWithType: Mix.Cms.Lib.ViewModels.MixModules
  fullName: Mix.Cms.Lib.ViewModels.MixModules
- uid: Mix.Cms.Lib.MixCmsHelper.GetPage*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetPage
  name: GetPage
  nameWithType: MixCmsHelper.GetPage
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPage
- uid: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
  parent: Mix.Cms.Lib.ViewModels.MixPages
  name: ReadMvcViewModel
  nameWithType: ReadMvcViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixPages.ReadMvcViewModel
- uid: Mix.Cms.Lib.ViewModels.MixPages
  commentId: N:Mix.Cms.Lib.ViewModels.MixPages
  name: Mix.Cms.Lib.ViewModels.MixPages
  nameWithType: Mix.Cms.Lib.ViewModels.MixPages
  fullName: Mix.Cms.Lib.ViewModels.MixPages
- uid: Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath
  name: GetTemplateByPath
  nameWithType: MixCmsHelper.GetTemplateByPath
  fullName: Mix.Cms.Lib.MixCmsHelper.GetTemplateByPath
- uid: System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel}
  commentId: T:System.Threading.Tasks.Task{Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<ReadViewModel>
  nameWithType: Task<ReadViewModel>
  fullName: System.Threading.Tasks.Task<Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel>
  nameWithType.vb: Task(Of ReadViewModel)
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel)
  name.vb: Task(Of ReadViewModel)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel
    name: ReadViewModel
    nameWithType: ReadViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel
    name: ReadViewModel
    nameWithType: ReadViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixTemplates.ReadViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.MixCmsHelper.GetNavigation*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetNavigation
  name: GetNavigation
  nameWithType: MixCmsHelper.GetNavigation
  fullName: Mix.Cms.Lib.MixCmsHelper.GetNavigation
- uid: System.Threading.Tasks.Task{Mix.Cms.Lib.Models.Common.MixNavigation}
  commentId: T:System.Threading.Tasks.Task{Mix.Cms.Lib.Models.Common.MixNavigation}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<MixNavigation>
  nameWithType: Task<MixNavigation>
  fullName: System.Threading.Tasks.Task<Mix.Cms.Lib.Models.Common.MixNavigation>
  nameWithType.vb: Task(Of MixNavigation)
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Cms.Lib.Models.Common.MixNavigation)
  name.vb: Task(Of MixNavigation)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Common.MixNavigation
    name: MixNavigation
    nameWithType: MixNavigation
    fullName: Mix.Cms.Lib.Models.Common.MixNavigation
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Common.MixNavigation
    name: MixNavigation
    nameWithType: MixNavigation
    fullName: Mix.Cms.Lib.Models.Common.MixNavigation
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField
  name: GetListPostByAdditionalField
  nameWithType: MixCmsHelper.GetListPostByAdditionalField
  fullName: Mix.Cms.Lib.MixCmsHelper.GetListPostByAdditionalField
- uid: Mix.Cms.Lib.Enums.MixDataType
  commentId: T:Mix.Cms.Lib.Enums.MixDataType
  parent: Mix.Cms.Lib.Enums
  name: MixDataType
  nameWithType: MixDataType
  fullName: Mix.Cms.Lib.Enums.MixDataType
- uid: Mix.Cms.Lib.Enums.MixCompareOperatorKind
  commentId: T:Mix.Cms.Lib.Enums.MixCompareOperatorKind
  parent: Mix.Cms.Lib.Enums
  name: MixCompareOperatorKind
  nameWithType: MixCompareOperatorKind
  fullName: Mix.Cms.Lib.Enums.MixCompareOperatorKind
- uid: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
  commentId: T:Mix.Heart.Enums.MixHeartEnums.DisplayDirection
  parent: Mix.Heart.Enums
  isExternal: true
  name: MixHeartEnums.DisplayDirection
  nameWithType: MixHeartEnums.DisplayDirection
  fullName: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{`2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<TView>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<TView>>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Domain.Core.ViewModels.PaginationModel<TView>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Domain.Core.ViewModels.PaginationModel(Of TView)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  isExternal: true
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Cms.Lib.MixCmsHelper.FilterObjectSet*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.FilterObjectSet
  name: FilterObjectSet
  nameWithType: MixCmsHelper.FilterObjectSet
  fullName: Mix.Cms.Lib.MixCmsHelper.FilterObjectSet
- uid: System.Linq.Expressions.Expression{System.Func{{TModel},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{`1,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<TModel, Boolean>>
  nameWithType: Expression<Func<TModel, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<TModel, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of TModel, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of TModel, System.Boolean))
  name.vb: Expression(Of Func(Of TModel, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta
  name: GetPostlistByMeta
  nameWithType: MixCmsHelper.GetPostlistByMeta
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPostlistByMeta
- uid: Microsoft.AspNetCore.Http.HttpContext
  commentId: T:Microsoft.AspNetCore.Http.HttpContext
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpContext
  nameWithType: HttpContext
  fullName: Microsoft.AspNetCore.Http.HttpContext
- uid: Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField
  name: GetPostlistByAdditionalField
  nameWithType: MixCmsHelper.GetPostlistByAdditionalField
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPostlistByAdditionalField
- uid: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent
  name: GetAttributeDataByParent
  nameWithType: MixCmsHelper.GetAttributeDataByParent
  fullName: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataByParent
- uid: Mix.Cms.Lib.Enums.MixDatabaseParentType
  commentId: T:Mix.Cms.Lib.Enums.MixDatabaseParentType
  parent: Mix.Cms.Lib.Enums
  name: MixDatabaseParentType
  nameWithType: MixDatabaseParentType
  fullName: Mix.Cms.Lib.Enums.MixDatabaseParentType
- uid: Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId
  name: GetPostListByPageId
  nameWithType: MixCmsHelper.GetPostListByPageId
  fullName: Mix.Cms.Lib.MixCmsHelper.GetPostListByPageId
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel}}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<ReadViewModel>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<ReadViewModel>>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Domain.Core.ViewModels.PaginationModel<Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of ReadViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Domain.Core.ViewModels.PaginationModel(Of Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of ReadViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel
    name: ReadViewModel
    nameWithType: ReadViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel
    name: ReadViewModel
    nameWithType: ReadViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixPagePosts.ReadViewModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet*
  commentId: Overload:Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet
  name: GetAttributeDataListBySet
  nameWithType: MixCmsHelper.GetAttributeDataListBySet
  fullName: Mix.Cms.Lib.MixCmsHelper.GetAttributeDataListBySet
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel}}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<ReadMvcViewModel>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<ReadMvcViewModel>>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Domain.Core.ViewModels.PaginationModel<Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of ReadMvcViewModel)))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Domain.Core.ViewModels.PaginationModel(Of Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of ReadMvcViewModel)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel
    name: ReadMvcViewModel
    nameWithType: ReadMvcViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.ReadMvcViewModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
