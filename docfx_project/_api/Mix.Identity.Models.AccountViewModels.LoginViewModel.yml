### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel
  commentId: T:Mix.Identity.Models.AccountViewModels.LoginViewModel
  id: LoginViewModel
  parent: Mix.Identity.Models.AccountViewModels
  children:
  - Mix.Identity.Models.AccountViewModels.LoginViewModel.Email
  - Mix.Identity.Models.AccountViewModels.LoginViewModel.Password
  - Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe
  - Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl
  - Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName
  langs:
  - csharp
  - vb
  name: LoginViewModel
  nameWithType: LoginViewModel
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoginViewModel
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
    startLine: 8
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public class LoginViewModel
    content.vb: Public Class LoginViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.Email
  commentId: P:Mix.Identity.Models.AccountViewModels.LoginViewModel.Email
  id: Email
  parent: Mix.Identity.Models.AccountViewModels.LoginViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: LoginViewModel.Email
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.Email
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Email
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
    startLine: 16
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  summary: "\nGets or sets the UserName.\n"
  example: []
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe UserName.\n"
    content.vb: Public Property Email As String
  overload: Mix.Identity.Models.AccountViewModels.LoginViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName
  commentId: P:Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName
  id: UserName
  parent: Mix.Identity.Models.AccountViewModels.LoginViewModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: LoginViewModel.UserName
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserName
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
    startLine: 24
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  summary: "\nGets or sets the UserName.\n"
  example: []
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe UserName.\n"
    content.vb: Public Property UserName As String
  overload: Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.Password
  commentId: P:Mix.Identity.Models.AccountViewModels.LoginViewModel.Password
  id: Password
  parent: Mix.Identity.Models.AccountViewModels.LoginViewModel
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: LoginViewModel.Password
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.Password
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Password
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
    startLine: 32
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  summary: "\nGets or sets the password.\n"
  example: []
  syntax:
    content: >-
      [Required]

      [DataType(DataType.Password)]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
      description: "\nThe password.\n"
    content.vb: >-
      <Required>

      <DataType(DataType.Password)>

      Public Property Password As String
  overload: Mix.Identity.Models.AccountViewModels.LoginViewModel.Password*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe
  commentId: P:Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe
  id: RememberMe
  parent: Mix.Identity.Models.AccountViewModels.LoginViewModel
  langs:
  - csharp
  - vb
  name: RememberMe
  nameWithType: LoginViewModel.RememberMe
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RememberMe
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
    startLine: 42
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  summary: "\nGets or sets a value indicating whether {CC2D43FA-BBC4-448A-9D0B-7B57ADF2655C}[remember me].\n"
  example: []
  syntax:
    content: >-
      [Display(Name = "Remember me?")]

      public bool RememberMe { get; set; }
    parameters: []
    return:
      type: System.Boolean
      description: "\n{D255958A-8513-4226-94B9-080D98F904A1}  <code>true</code> if [remember me]; otherwise, <code>false</code>.\n"
    content.vb: >-
      <Display(Name:="Remember me?")>

      Public Property RememberMe As Boolean
  overload: Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Remember me?
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl
  commentId: P:Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl
  id: ReturnUrl
  parent: Mix.Identity.Models.AccountViewModels.LoginViewModel
  langs:
  - csharp
  - vb
  name: ReturnUrl
  nameWithType: LoginViewModel.ReturnUrl
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ReturnUrl
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/LoginViewModel.cs
    startLine: 45
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string ReturnUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReturnUrl As String
  overload: Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Models.AccountViewModels
  commentId: N:Mix.Identity.Models.AccountViewModels
  name: Mix.Identity.Models.AccountViewModels
  nameWithType: Mix.Identity.Models.AccountViewModels
  fullName: Mix.Identity.Models.AccountViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.Email*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.LoginViewModel.Email
  name: Email
  nameWithType: LoginViewModel.Email
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.Email
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName
  name: UserName
  nameWithType: LoginViewModel.UserName
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.UserName
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.Password*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.LoginViewModel.Password
  name: Password
  nameWithType: LoginViewModel.Password
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.Password
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe
  name: RememberMe
  nameWithType: LoginViewModel.RememberMe
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.RememberMe
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl
  name: ReturnUrl
  nameWithType: LoginViewModel.ReturnUrl
  fullName: Mix.Identity.Models.AccountViewModels.LoginViewModel.ReturnUrl
