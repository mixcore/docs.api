### YamlMime:ManagedReference
items:
- uid: Mix.Constant.Constants.MixAuthConfigurations
  commentId: T:Mix.Constant.Constants.MixAuthConfigurations
  id: MixAuthConfigurations
  parent: Mix.Constant.Constants
  children:
  - Mix.Constant.Constants.MixAuthConfigurations.AccessTokenExpiration
  - Mix.Constant.Constants.MixAuthConfigurations.Audience
  - Mix.Constant.Constants.MixAuthConfigurations.Audiences
  - Mix.Constant.Constants.MixAuthConfigurations.Issuer
  - Mix.Constant.Constants.MixAuthConfigurations.Issuers
  - Mix.Constant.Constants.MixAuthConfigurations.RefreshTokenExpiration
  - Mix.Constant.Constants.MixAuthConfigurations.SecretKey
  - Mix.Constant.Constants.MixAuthConfigurations.TokenType
  - Mix.Constant.Constants.MixAuthConfigurations.ValidateAudience
  - Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuer
  - Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuerSigningKey
  - Mix.Constant.Constants.MixAuthConfigurations.ValidateLifetime
  langs:
  - csharp
  - vb
  name: MixAuthConfigurations
  nameWithType: MixAuthConfigurations
  fullName: Mix.Constant.Constants.MixAuthConfigurations
  type: Class
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixAuthConfigurations
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 2
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public class MixAuthConfigurations
    content.vb: Public Class MixAuthConfigurations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Constant.Constants.MixAuthConfigurations.AccessTokenExpiration
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.AccessTokenExpiration
  id: AccessTokenExpiration
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: AccessTokenExpiration
  nameWithType: MixAuthConfigurations.AccessTokenExpiration
  fullName: Mix.Constant.Constants.MixAuthConfigurations.AccessTokenExpiration
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AccessTokenExpiration
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 4
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string AccessTokenExpiration = "AccessTokenExpiration"
    return:
      type: System.String
    content.vb: Public Const AccessTokenExpiration As String = "AccessTokenExpiration"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.RefreshTokenExpiration
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.RefreshTokenExpiration
  id: RefreshTokenExpiration
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: RefreshTokenExpiration
  nameWithType: MixAuthConfigurations.RefreshTokenExpiration
  fullName: Mix.Constant.Constants.MixAuthConfigurations.RefreshTokenExpiration
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RefreshTokenExpiration
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 5
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string RefreshTokenExpiration = "RefreshTokenExpiration"
    return:
      type: System.String
    content.vb: Public Const RefreshTokenExpiration As String = "RefreshTokenExpiration"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuer
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuer
  id: ValidateIssuer
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: ValidateIssuer
  nameWithType: MixAuthConfigurations.ValidateIssuer
  fullName: Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuer
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ValidateIssuer
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 6
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ValidateIssuer = "ValidateIssuer"
    return:
      type: System.String
    content.vb: Public Const ValidateIssuer As String = "ValidateIssuer"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.ValidateAudience
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.ValidateAudience
  id: ValidateAudience
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: ValidateAudience
  nameWithType: MixAuthConfigurations.ValidateAudience
  fullName: Mix.Constant.Constants.MixAuthConfigurations.ValidateAudience
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ValidateAudience
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 7
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ValidateAudience = "ValidateAudience"
    return:
      type: System.String
    content.vb: Public Const ValidateAudience As String = "ValidateAudience"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.ValidateLifetime
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.ValidateLifetime
  id: ValidateLifetime
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: ValidateLifetime
  nameWithType: MixAuthConfigurations.ValidateLifetime
  fullName: Mix.Constant.Constants.MixAuthConfigurations.ValidateLifetime
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ValidateLifetime
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 8
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ValidateLifetime = "ValidateLifetime"
    return:
      type: System.String
    content.vb: Public Const ValidateLifetime As String = "ValidateLifetime"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuerSigningKey
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuerSigningKey
  id: ValidateIssuerSigningKey
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: ValidateIssuerSigningKey
  nameWithType: MixAuthConfigurations.ValidateIssuerSigningKey
  fullName: Mix.Constant.Constants.MixAuthConfigurations.ValidateIssuerSigningKey
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ValidateIssuerSigningKey
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 9
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ValidateIssuerSigningKey = "ValidateIssuerSigningKey"
    return:
      type: System.String
    content.vb: Public Const ValidateIssuerSigningKey As String = "ValidateIssuerSigningKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.TokenType
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.TokenType
  id: TokenType
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: MixAuthConfigurations.TokenType
  fullName: Mix.Constant.Constants.MixAuthConfigurations.TokenType
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TokenType
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 10
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string TokenType = "TokenType"
    return:
      type: System.String
    content.vb: Public Const TokenType As String = "TokenType"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.Audience
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.Audience
  id: Audience
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: Audience
  nameWithType: MixAuthConfigurations.Audience
  fullName: Mix.Constant.Constants.MixAuthConfigurations.Audience
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Audience
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 11
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Audience = "Audience"
    return:
      type: System.String
    content.vb: Public Const Audience As String = "Audience"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.SecretKey
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.SecretKey
  id: SecretKey
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: SecretKey
  nameWithType: MixAuthConfigurations.SecretKey
  fullName: Mix.Constant.Constants.MixAuthConfigurations.SecretKey
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SecretKey
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 12
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string SecretKey = "SecretKey"
    return:
      type: System.String
    content.vb: Public Const SecretKey As String = "SecretKey"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.Issuer
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.Issuer
  id: Issuer
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: MixAuthConfigurations.Issuer
  fullName: Mix.Constant.Constants.MixAuthConfigurations.Issuer
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Issuer
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 13
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Issuer = "Issuer"
    return:
      type: System.String
    content.vb: Public Const Issuer As String = "Issuer"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.Issuers
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.Issuers
  id: Issuers
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: Issuers
  nameWithType: MixAuthConfigurations.Issuers
  fullName: Mix.Constant.Constants.MixAuthConfigurations.Issuers
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Issuers
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 14
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Issuers = "Issuers"
    return:
      type: System.String
    content.vb: Public Const Issuers As String = "Issuers"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixAuthConfigurations.Audiences
  commentId: F:Mix.Constant.Constants.MixAuthConfigurations.Audiences
  id: Audiences
  parent: Mix.Constant.Constants.MixAuthConfigurations
  langs:
  - csharp
  - vb
  name: Audiences
  nameWithType: MixAuthConfigurations.Audiences
  fullName: Mix.Constant.Constants.MixAuthConfigurations.Audiences
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixAuthConfigurations.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Audiences
    path: ../../mix.core/src/platform/mix.constant/Constants/MixAuthConfigurations.cs
    startLine: 15
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string Audiences = "Audiences"
    return:
      type: System.String
    content.vb: Public Const Audiences As String = "Audiences"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mix.Constant.Constants
  commentId: N:Mix.Constant.Constants
  name: Mix.Constant.Constants
  nameWithType: Mix.Constant.Constants
  fullName: Mix.Constant.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
