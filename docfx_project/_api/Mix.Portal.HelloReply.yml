### YamlMime:ManagedReference
items:
- uid: Mix.Portal.HelloReply
  commentId: T:Mix.Portal.HelloReply
  id: HelloReply
  parent: Mix.Portal
  children:
  - Mix.Portal.HelloReply.#ctor
  - Mix.Portal.HelloReply.#ctor(Mix.Portal.HelloReply)
  - Mix.Portal.HelloReply.CalculateSize
  - Mix.Portal.HelloReply.Clone
  - Mix.Portal.HelloReply.Descriptor
  - Mix.Portal.HelloReply.Equals(Mix.Portal.HelloReply)
  - Mix.Portal.HelloReply.Equals(System.Object)
  - Mix.Portal.HelloReply.GetHashCode
  - Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalMergeFrom(Google.Protobuf.ParseContext@)
  - Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalWriteTo(Google.Protobuf.WriteContext@)
  - Mix.Portal.HelloReply.Google#Protobuf#IMessage#Descriptor
  - Mix.Portal.HelloReply.MergeFrom(Google.Protobuf.CodedInputStream)
  - Mix.Portal.HelloReply.MergeFrom(Mix.Portal.HelloReply)
  - Mix.Portal.HelloReply.Message
  - Mix.Portal.HelloReply.MessageFieldNumber
  - Mix.Portal.HelloReply.Parser
  - Mix.Portal.HelloReply.ToString
  - Mix.Portal.HelloReply.WriteTo(Google.Protobuf.CodedOutputStream)
  langs:
  - csharp
  - vb
  name: HelloReply
  nameWithType: HelloReply
  fullName: Mix.Portal.HelloReply
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: HelloReply
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 237
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  summary: "\nThe response message containing the greetings.\n"
  example: []
  syntax:
    content: 'public sealed class HelloReply : IMessage<HelloReply>, IEquatable<HelloReply>, IDeepCloneable<HelloReply>, IBufferMessage, IMessage'
    content.vb: >-
      Public NotInheritable Class HelloReply
          Implements IMessage(Of HelloReply), IEquatable(Of HelloReply), IDeepCloneable(Of HelloReply), IBufferMessage, IMessage
  inheritance:
  - System.Object
  implements:
  - Google.Protobuf.IMessage{Mix.Portal.HelloReply}
  - System.IEquatable{Mix.Portal.HelloReply}
  - Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}
  - Google.Protobuf.IBufferMessage
  - Google.Protobuf.IMessage
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  modifiers.csharp:
  - public
  - sealed
  - class
  modifiers.vb:
  - Public
  - NotInheritable
  - Class
- uid: Mix.Portal.HelloReply.Parser
  commentId: P:Mix.Portal.HelloReply.Parser
  id: Parser
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: Parser
  nameWithType: HelloReply.Parser
  fullName: Mix.Portal.HelloReply.Parser
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Parser
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 244
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public static MessageParser<HelloReply> Parser { get; }
    parameters: []
    return:
      type: Google.Protobuf.MessageParser{Mix.Portal.HelloReply}
    content.vb: Public Shared ReadOnly Property Parser As MessageParser(Of HelloReply)
  overload: Mix.Portal.HelloReply.Parser*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mix.Portal.HelloReply.Descriptor
  commentId: P:Mix.Portal.HelloReply.Descriptor
  id: Descriptor
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: Descriptor
  nameWithType: HelloReply.Descriptor
  fullName: Mix.Portal.HelloReply.Descriptor
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Descriptor
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 248
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public static MessageDescriptor Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: Public Shared ReadOnly Property Descriptor As MessageDescriptor
  overload: Mix.Portal.HelloReply.Descriptor*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: Mix.Portal.HelloReply.Google#Protobuf#IMessage#Descriptor
  commentId: P:Mix.Portal.HelloReply.Google#Protobuf#IMessage#Descriptor
  id: Google#Protobuf#IMessage#Descriptor
  isEii: true
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: IMessage.Descriptor
  nameWithType: HelloReply.IMessage.Descriptor
  fullName: Mix.Portal.HelloReply.Google.Protobuf.IMessage.Descriptor
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: pb::Google.Protobuf.IMessage.Descriptor
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 254
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: MessageDescriptor IMessage.Descriptor { get; }
    parameters: []
    return:
      type: Google.Protobuf.Reflection.MessageDescriptor
    content.vb: ReadOnly WriteOnly Property pb::Google.Protobuf.IMessage.Descriptor As MessageDescriptor Implements IMessage.Descriptor
  overload: Mix.Portal.HelloReply.Google#Protobuf#IMessage#Descriptor*
  implements:
  - Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: HelloReply.pb::Google.Protobuf.IMessage.Descriptor
  modifiers.csharp:
  - get
  modifiers.vb:
  - ReadOnly
  fullName.vb: Mix.Portal.HelloReply.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Mix.Portal.HelloReply.#ctor
  commentId: M:Mix.Portal.HelloReply.#ctor
  id: '#ctor'
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: HelloReply()
  nameWithType: HelloReply.HelloReply()
  fullName: Mix.Portal.HelloReply.HelloReply()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 260
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public HelloReply()
    content.vb: Public Sub New
  overload: Mix.Portal.HelloReply.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.#ctor(Mix.Portal.HelloReply)
  commentId: M:Mix.Portal.HelloReply.#ctor(Mix.Portal.HelloReply)
  id: '#ctor(Mix.Portal.HelloReply)'
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: HelloReply(HelloReply)
  nameWithType: HelloReply.HelloReply(HelloReply)
  fullName: Mix.Portal.HelloReply.HelloReply(Mix.Portal.HelloReply)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 268
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public HelloReply(HelloReply other)
    parameters:
    - id: other
      type: Mix.Portal.HelloReply
    content.vb: Public Sub New(other As HelloReply)
  overload: Mix.Portal.HelloReply.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.Clone
  commentId: M:Mix.Portal.HelloReply.Clone
  id: Clone
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: HelloReply.Clone()
  fullName: Mix.Portal.HelloReply.Clone()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Clone
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 275
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public HelloReply Clone()
    return:
      type: Mix.Portal.HelloReply
    content.vb: Public Function Clone As HelloReply
  overload: Mix.Portal.HelloReply.Clone*
  implements:
  - Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.MessageFieldNumber
  commentId: F:Mix.Portal.HelloReply.MessageFieldNumber
  id: MessageFieldNumber
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: MessageFieldNumber
  nameWithType: HelloReply.MessageFieldNumber
  fullName: Mix.Portal.HelloReply.MessageFieldNumber
  type: Field
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MessageFieldNumber
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 282
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  summary: Field number for the &quot;message&quot; field.
  example: []
  syntax:
    content: public const int MessageFieldNumber = 1
    return:
      type: System.Int32
    content.vb: Public Const MessageFieldNumber As Integer = 1
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Portal.HelloReply.Message
  commentId: P:Mix.Portal.HelloReply.Message
  id: Message
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: Message
  nameWithType: HelloReply.Message
  fullName: Mix.Portal.HelloReply.Message
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Message
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 284
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public string Message { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Message As String
  overload: Mix.Portal.HelloReply.Message*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.Equals(System.Object)
  commentId: M:Mix.Portal.HelloReply.Equals(System.Object)
  id: Equals(System.Object)
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: HelloReply.Equals(Object)
  fullName: Mix.Portal.HelloReply.Equals(System.Object)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Equals
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 293
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public override bool Equals(object other)
    parameters:
    - id: other
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overrides Function Equals(other As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: Mix.Portal.HelloReply.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.HelloReply.Equals(Mix.Portal.HelloReply)
  commentId: M:Mix.Portal.HelloReply.Equals(Mix.Portal.HelloReply)
  id: Equals(Mix.Portal.HelloReply)
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: Equals(HelloReply)
  nameWithType: HelloReply.Equals(HelloReply)
  fullName: Mix.Portal.HelloReply.Equals(Mix.Portal.HelloReply)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Equals
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 299
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public bool Equals(HelloReply other)
    parameters:
    - id: other
      type: Mix.Portal.HelloReply
    return:
      type: System.Boolean
    content.vb: Public Function Equals(other As HelloReply) As Boolean
  overload: Mix.Portal.HelloReply.Equals*
  implements:
  - System.IEquatable{Mix.Portal.HelloReply}.Equals(Mix.Portal.HelloReply)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.GetHashCode
  commentId: M:Mix.Portal.HelloReply.GetHashCode
  id: GetHashCode
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: HelloReply.GetHashCode()
  fullName: Mix.Portal.HelloReply.GetHashCode()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetHashCode
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 312
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
    content.vb: Public Overrides Function GetHashCode As Integer
  overridden: System.Object.GetHashCode
  overload: Mix.Portal.HelloReply.GetHashCode*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.HelloReply.ToString
  commentId: M:Mix.Portal.HelloReply.ToString
  id: ToString
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: HelloReply.ToString()
  fullName: Mix.Portal.HelloReply.ToString()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ToString
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 323
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: Mix.Portal.HelloReply.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.HelloReply.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Mix.Portal.HelloReply.WriteTo(Google.Protobuf.CodedOutputStream)
  id: WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: WriteTo(CodedOutputStream)
  nameWithType: HelloReply.WriteTo(CodedOutputStream)
  fullName: Mix.Portal.HelloReply.WriteTo(Google.Protobuf.CodedOutputStream)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: WriteTo
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 329
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public void WriteTo(CodedOutputStream output)
    parameters:
    - id: output
      type: Google.Protobuf.CodedOutputStream
    content.vb: Public Sub WriteTo(output As CodedOutputStream)
  overload: Mix.Portal.HelloReply.WriteTo*
  implements:
  - Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalWriteTo(Google.Protobuf.WriteContext@)
  commentId: M:Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalWriteTo(Google.Protobuf.WriteContext@)
  id: Google#Protobuf#IBufferMessage#InternalWriteTo(Google.Protobuf.WriteContext@)
  isEii: true
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: IBufferMessage.InternalWriteTo(ref WriteContext)
  nameWithType: HelloReply.IBufferMessage.InternalWriteTo(ref WriteContext)
  fullName: Mix.Portal.HelloReply.Google.Protobuf.IBufferMessage.InternalWriteTo(ref Google.Protobuf.WriteContext)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: pb::Google.Protobuf.IBufferMessage.InternalWriteTo
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 346
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: void IBufferMessage.InternalWriteTo(ref WriteContext output)
    parameters:
    - id: output
      type: Google.Protobuf.WriteContext
    content.vb: Sub pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ByRef output As WriteContext) Implements IBufferMessage.InternalWriteTo
  overload: Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalWriteTo*
  implements:
  - Google.Protobuf.IBufferMessage.InternalWriteTo(Google.Protobuf.WriteContext@)
  nameWithType.vb: HelloReply.pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ByRef WriteContext)
  fullName.vb: Mix.Portal.HelloReply.pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ByRef Google.Protobuf.WriteContext)
  name.vb: pb::Google.Protobuf.IBufferMessage.InternalWriteTo(ByRef WriteContext)
- uid: Mix.Portal.HelloReply.CalculateSize
  commentId: M:Mix.Portal.HelloReply.CalculateSize
  id: CalculateSize
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: CalculateSize()
  nameWithType: HelloReply.CalculateSize()
  fullName: Mix.Portal.HelloReply.CalculateSize()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CalculateSize
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 359
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public int CalculateSize()
    return:
      type: System.Int32
    content.vb: Public Function CalculateSize As Integer
  overload: Mix.Portal.HelloReply.CalculateSize*
  implements:
  - Google.Protobuf.IMessage.CalculateSize
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.MergeFrom(Mix.Portal.HelloReply)
  commentId: M:Mix.Portal.HelloReply.MergeFrom(Mix.Portal.HelloReply)
  id: MergeFrom(Mix.Portal.HelloReply)
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: MergeFrom(HelloReply)
  nameWithType: HelloReply.MergeFrom(HelloReply)
  fullName: Mix.Portal.HelloReply.MergeFrom(Mix.Portal.HelloReply)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MergeFrom
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 372
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public void MergeFrom(HelloReply other)
    parameters:
    - id: other
      type: Mix.Portal.HelloReply
    content.vb: Public Sub MergeFrom(other As HelloReply)
  overload: Mix.Portal.HelloReply.MergeFrom*
  implements:
  - Google.Protobuf.IMessage{Mix.Portal.HelloReply}.MergeFrom(Mix.Portal.HelloReply)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Mix.Portal.HelloReply.MergeFrom(Google.Protobuf.CodedInputStream)
  id: MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: MergeFrom(CodedInputStream)
  nameWithType: HelloReply.MergeFrom(CodedInputStream)
  fullName: Mix.Portal.HelloReply.MergeFrom(Google.Protobuf.CodedInputStream)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MergeFrom
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 384
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: public void MergeFrom(CodedInputStream input)
    parameters:
    - id: input
      type: Google.Protobuf.CodedInputStream
    content.vb: Public Sub MergeFrom(input As CodedInputStream)
  overload: Mix.Portal.HelloReply.MergeFrom*
  implements:
  - Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalMergeFrom(Google.Protobuf.ParseContext@)
  commentId: M:Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalMergeFrom(Google.Protobuf.ParseContext@)
  id: Google#Protobuf#IBufferMessage#InternalMergeFrom(Google.Protobuf.ParseContext@)
  isEii: true
  parent: Mix.Portal.HelloReply
  langs:
  - csharp
  - vb
  name: IBufferMessage.InternalMergeFrom(ref ParseContext)
  nameWithType: HelloReply.IBufferMessage.InternalMergeFrom(ref ParseContext)
  fullName: Mix.Portal.HelloReply.Google.Protobuf.IBufferMessage.InternalMergeFrom(ref Google.Protobuf.ParseContext)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: pb::Google.Protobuf.IBufferMessage.InternalMergeFrom
    path: ../../mix.core/src/modules/mix.portal/obj/Release/net6.0/Domain/Protos/Greet.cs
    startLine: 406
  assemblies:
  - mix.portal
  namespace: Mix.Portal
  syntax:
    content: void IBufferMessage.InternalMergeFrom(ref ParseContext input)
    parameters:
    - id: input
      type: Google.Protobuf.ParseContext
    content.vb: Sub pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ByRef input As ParseContext) Implements IBufferMessage.InternalMergeFrom
  overload: Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalMergeFrom*
  implements:
  - Google.Protobuf.IBufferMessage.InternalMergeFrom(Google.Protobuf.ParseContext@)
  nameWithType.vb: HelloReply.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ByRef ParseContext)
  fullName.vb: Mix.Portal.HelloReply.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ByRef Google.Protobuf.ParseContext)
  name.vb: pb::Google.Protobuf.IBufferMessage.InternalMergeFrom(ByRef ParseContext)
references:
- uid: Mix.Portal
  commentId: N:Mix.Portal
  name: Mix.Portal
  nameWithType: Mix.Portal
  fullName: Mix.Portal
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Google.Protobuf.IMessage{Mix.Portal.HelloReply}
  commentId: T:Google.Protobuf.IMessage{Mix.Portal.HelloReply}
  parent: Google.Protobuf
  definition: Google.Protobuf.IMessage`1
  name: IMessage<HelloReply>
  nameWithType: IMessage<HelloReply>
  fullName: Google.Protobuf.IMessage<Mix.Portal.HelloReply>
  nameWithType.vb: IMessage(Of HelloReply)
  fullName.vb: Google.Protobuf.IMessage(Of Mix.Portal.HelloReply)
  name.vb: IMessage(Of HelloReply)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable{Mix.Portal.HelloReply}
  commentId: T:System.IEquatable{Mix.Portal.HelloReply}
  parent: System
  definition: System.IEquatable`1
  name: IEquatable<HelloReply>
  nameWithType: IEquatable<HelloReply>
  fullName: System.IEquatable<Mix.Portal.HelloReply>
  nameWithType.vb: IEquatable(Of HelloReply)
  fullName.vb: System.IEquatable(Of Mix.Portal.HelloReply)
  name.vb: IEquatable(Of HelloReply)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}
  commentId: T:Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}
  parent: Google.Protobuf
  definition: Google.Protobuf.IDeepCloneable`1
  name: IDeepCloneable<HelloReply>
  nameWithType: IDeepCloneable<HelloReply>
  fullName: Google.Protobuf.IDeepCloneable<Mix.Portal.HelloReply>
  nameWithType.vb: IDeepCloneable(Of HelloReply)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Mix.Portal.HelloReply)
  name.vb: IDeepCloneable(Of HelloReply)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IBufferMessage
  commentId: T:Google.Protobuf.IBufferMessage
  parent: Google.Protobuf
  isExternal: true
  name: IBufferMessage
  nameWithType: IBufferMessage
  fullName: Google.Protobuf.IBufferMessage
- uid: Google.Protobuf.IMessage
  commentId: T:Google.Protobuf.IMessage
  parent: Google.Protobuf
  isExternal: true
  name: IMessage
  nameWithType: IMessage
  fullName: Google.Protobuf.IMessage
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Google.Protobuf.IMessage`1
  commentId: T:Google.Protobuf.IMessage`1
  isExternal: true
  name: IMessage<T>
  nameWithType: IMessage<T>
  fullName: Google.Protobuf.IMessage<T>
  nameWithType.vb: IMessage(Of T)
  fullName.vb: Google.Protobuf.IMessage(Of T)
  name.vb: IMessage(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IMessage`1
    name: IMessage
    nameWithType: IMessage
    fullName: Google.Protobuf.IMessage
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf
  commentId: N:Google.Protobuf
  isExternal: true
  name: Google.Protobuf
  nameWithType: Google.Protobuf
  fullName: Google.Protobuf
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    nameWithType: IEquatable
    fullName: System.IEquatable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1
  commentId: T:Google.Protobuf.IDeepCloneable`1
  isExternal: true
  name: IDeepCloneable<T>
  nameWithType: IDeepCloneable<T>
  fullName: Google.Protobuf.IDeepCloneable<T>
  nameWithType.vb: IDeepCloneable(Of T)
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T)
  name.vb: IDeepCloneable(Of T)
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1
    name: IDeepCloneable
    nameWithType: IDeepCloneable
    fullName: Google.Protobuf.IDeepCloneable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.HelloReply.Parser*
  commentId: Overload:Mix.Portal.HelloReply.Parser
  name: Parser
  nameWithType: HelloReply.Parser
  fullName: Mix.Portal.HelloReply.Parser
- uid: Google.Protobuf.MessageParser{Mix.Portal.HelloReply}
  commentId: T:Google.Protobuf.MessageParser{Mix.Portal.HelloReply}
  parent: Google.Protobuf
  definition: Google.Protobuf.MessageParser`1
  name: MessageParser<HelloReply>
  nameWithType: MessageParser<HelloReply>
  fullName: Google.Protobuf.MessageParser<Mix.Portal.HelloReply>
  nameWithType.vb: MessageParser(Of HelloReply)
  fullName.vb: Google.Protobuf.MessageParser(Of Mix.Portal.HelloReply)
  name.vb: MessageParser(Of HelloReply)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.MessageParser`1
  commentId: T:Google.Protobuf.MessageParser`1
  isExternal: true
  name: MessageParser<T>
  nameWithType: MessageParser<T>
  fullName: Google.Protobuf.MessageParser<T>
  nameWithType.vb: MessageParser(Of T)
  fullName.vb: Google.Protobuf.MessageParser(Of T)
  name.vb: MessageParser(Of T)
  spec.csharp:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Google.Protobuf.MessageParser`1
    name: MessageParser
    nameWithType: MessageParser
    fullName: Google.Protobuf.MessageParser
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.HelloReply.Descriptor*
  commentId: Overload:Mix.Portal.HelloReply.Descriptor
  name: Descriptor
  nameWithType: HelloReply.Descriptor
  fullName: Mix.Portal.HelloReply.Descriptor
- uid: Google.Protobuf.Reflection.MessageDescriptor
  commentId: T:Google.Protobuf.Reflection.MessageDescriptor
  parent: Google.Protobuf.Reflection
  isExternal: true
  name: MessageDescriptor
  nameWithType: MessageDescriptor
  fullName: Google.Protobuf.Reflection.MessageDescriptor
- uid: Google.Protobuf.Reflection
  commentId: N:Google.Protobuf.Reflection
  isExternal: true
  name: Google.Protobuf.Reflection
  nameWithType: Google.Protobuf.Reflection
  fullName: Google.Protobuf.Reflection
- uid: Mix.Portal.HelloReply.Google#Protobuf#IMessage#Descriptor*
  commentId: Overload:Mix.Portal.HelloReply.Google#Protobuf#IMessage#Descriptor
  name: IMessage.Descriptor
  nameWithType: HelloReply.IMessage.Descriptor
  fullName: Mix.Portal.HelloReply.Google.Protobuf.IMessage.Descriptor
  nameWithType.vb: HelloReply.pb::Google.Protobuf.IMessage.Descriptor
  fullName.vb: Mix.Portal.HelloReply.pb::Google.Protobuf.IMessage.Descriptor
  name.vb: pb::Google.Protobuf.IMessage.Descriptor
- uid: Google.Protobuf.IMessage.Descriptor
  commentId: P:Google.Protobuf.IMessage.Descriptor
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: Descriptor
  nameWithType: IMessage.Descriptor
  fullName: Google.Protobuf.IMessage.Descriptor
- uid: Mix.Portal.HelloReply.#ctor*
  commentId: Overload:Mix.Portal.HelloReply.#ctor
  name: HelloReply
  nameWithType: HelloReply.HelloReply
  fullName: Mix.Portal.HelloReply.HelloReply
- uid: Mix.Portal.HelloReply
  commentId: T:Mix.Portal.HelloReply
  parent: Mix.Portal
  name: HelloReply
  nameWithType: HelloReply
  fullName: Mix.Portal.HelloReply
- uid: Mix.Portal.HelloReply.Clone*
  commentId: Overload:Mix.Portal.HelloReply.Clone
  name: Clone
  nameWithType: HelloReply.Clone
  fullName: Mix.Portal.HelloReply.Clone
- uid: Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}.Clone
  commentId: M:Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}.Clone
  parent: Google.Protobuf.IDeepCloneable{Mix.Portal.HelloReply}
  definition: Google.Protobuf.IDeepCloneable`1.Clone
  name: Clone()
  nameWithType: IDeepCloneable<HelloReply>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<Mix.Portal.HelloReply>.Clone()
  nameWithType.vb: IDeepCloneable(Of HelloReply).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of Mix.Portal.HelloReply).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<HelloReply>.Clone
    fullName: Google.Protobuf.IDeepCloneable<Mix.Portal.HelloReply>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of HelloReply).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of Mix.Portal.HelloReply).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IDeepCloneable`1.Clone
  commentId: M:Google.Protobuf.IDeepCloneable`1.Clone
  isExternal: true
  name: Clone()
  nameWithType: IDeepCloneable<T>.Clone()
  fullName: Google.Protobuf.IDeepCloneable<T>.Clone()
  nameWithType.vb: IDeepCloneable(Of T).Clone()
  fullName.vb: Google.Protobuf.IDeepCloneable(Of T).Clone()
  spec.csharp:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable<T>.Clone
    fullName: Google.Protobuf.IDeepCloneable<T>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IDeepCloneable`1.Clone
    name: Clone
    nameWithType: IDeepCloneable(Of T).Clone
    fullName: Google.Protobuf.IDeepCloneable(Of T).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Portal.HelloReply.Message*
  commentId: Overload:Mix.Portal.HelloReply.Message
  name: Message
  nameWithType: HelloReply.Message
  fullName: Mix.Portal.HelloReply.Message
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.HelloReply.Equals*
  commentId: Overload:Mix.Portal.HelloReply.Equals
  name: Equals
  nameWithType: HelloReply.Equals
  fullName: Mix.Portal.HelloReply.Equals
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IEquatable{Mix.Portal.HelloReply}.Equals(Mix.Portal.HelloReply)
  commentId: M:System.IEquatable{Mix.Portal.HelloReply}.Equals(Mix.Portal.HelloReply)
  parent: System.IEquatable{Mix.Portal.HelloReply}
  definition: System.IEquatable`1.Equals(`0)
  name: Equals(HelloReply)
  nameWithType: IEquatable<HelloReply>.Equals(HelloReply)
  fullName: System.IEquatable<Mix.Portal.HelloReply>.Equals(Mix.Portal.HelloReply)
  nameWithType.vb: IEquatable(Of HelloReply).Equals(HelloReply)
  fullName.vb: System.IEquatable(Of Mix.Portal.HelloReply).Equals(Mix.Portal.HelloReply)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<HelloReply>.Equals
    fullName: System.IEquatable<Mix.Portal.HelloReply>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of HelloReply).Equals
    fullName: System.IEquatable(Of Mix.Portal.HelloReply).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable<T>.Equals
    fullName: System.IEquatable<T>.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    nameWithType: IEquatable(Of T).Equals
    fullName: System.IEquatable(Of T).Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.HelloReply.GetHashCode*
  commentId: Overload:Mix.Portal.HelloReply.GetHashCode
  name: GetHashCode
  nameWithType: HelloReply.GetHashCode
  fullName: Mix.Portal.HelloReply.GetHashCode
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.HelloReply.ToString*
  commentId: Overload:Mix.Portal.HelloReply.ToString
  name: ToString
  nameWithType: HelloReply.ToString
  fullName: Mix.Portal.HelloReply.ToString
- uid: Mix.Portal.HelloReply.WriteTo*
  commentId: Overload:Mix.Portal.HelloReply.WriteTo
  name: WriteTo
  nameWithType: HelloReply.WriteTo
  fullName: Mix.Portal.HelloReply.WriteTo
- uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  commentId: M:Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: WriteTo(CodedOutputStream)
  nameWithType: IMessage.WriteTo(CodedOutputStream)
  fullName: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.WriteTo(Google.Protobuf.CodedOutputStream)
    name: WriteTo
    nameWithType: IMessage.WriteTo
    fullName: Google.Protobuf.IMessage.WriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedOutputStream
    name: CodedOutputStream
    nameWithType: CodedOutputStream
    fullName: Google.Protobuf.CodedOutputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedOutputStream
  commentId: T:Google.Protobuf.CodedOutputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedOutputStream
  nameWithType: CodedOutputStream
  fullName: Google.Protobuf.CodedOutputStream
- uid: Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalWriteTo*
  commentId: Overload:Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalWriteTo
  name: IBufferMessage.InternalWriteTo
  nameWithType: HelloReply.IBufferMessage.InternalWriteTo
  fullName: Mix.Portal.HelloReply.Google.Protobuf.IBufferMessage.InternalWriteTo
  nameWithType.vb: HelloReply.pb::Google.Protobuf.IBufferMessage.InternalWriteTo
  fullName.vb: Mix.Portal.HelloReply.pb::Google.Protobuf.IBufferMessage.InternalWriteTo
  name.vb: pb::Google.Protobuf.IBufferMessage.InternalWriteTo
- uid: Google.Protobuf.IBufferMessage.InternalWriteTo(Google.Protobuf.WriteContext@)
  commentId: M:Google.Protobuf.IBufferMessage.InternalWriteTo(Google.Protobuf.WriteContext@)
  parent: Google.Protobuf.IBufferMessage
  isExternal: true
  name: InternalWriteTo(WriteContext)
  nameWithType: IBufferMessage.InternalWriteTo(WriteContext)
  fullName: Google.Protobuf.IBufferMessage.InternalWriteTo(Google.Protobuf.WriteContext)
  spec.csharp:
  - uid: Google.Protobuf.IBufferMessage.InternalWriteTo(Google.Protobuf.WriteContext@)
    name: InternalWriteTo
    nameWithType: IBufferMessage.InternalWriteTo
    fullName: Google.Protobuf.IBufferMessage.InternalWriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.WriteContext
    name: WriteContext
    nameWithType: WriteContext
    fullName: Google.Protobuf.WriteContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IBufferMessage.InternalWriteTo(Google.Protobuf.WriteContext@)
    name: InternalWriteTo
    nameWithType: IBufferMessage.InternalWriteTo
    fullName: Google.Protobuf.IBufferMessage.InternalWriteTo
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.WriteContext
    name: WriteContext
    nameWithType: WriteContext
    fullName: Google.Protobuf.WriteContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.WriteContext
  commentId: T:Google.Protobuf.WriteContext
  parent: Google.Protobuf
  isExternal: true
  name: WriteContext
  nameWithType: WriteContext
  fullName: Google.Protobuf.WriteContext
- uid: Mix.Portal.HelloReply.CalculateSize*
  commentId: Overload:Mix.Portal.HelloReply.CalculateSize
  name: CalculateSize
  nameWithType: HelloReply.CalculateSize
  fullName: Mix.Portal.HelloReply.CalculateSize
- uid: Google.Protobuf.IMessage.CalculateSize
  commentId: M:Google.Protobuf.IMessage.CalculateSize
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: CalculateSize()
  nameWithType: IMessage.CalculateSize()
  fullName: Google.Protobuf.IMessage.CalculateSize()
  spec.csharp:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.CalculateSize
    name: CalculateSize
    nameWithType: IMessage.CalculateSize
    fullName: Google.Protobuf.IMessage.CalculateSize
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.HelloReply.MergeFrom*
  commentId: Overload:Mix.Portal.HelloReply.MergeFrom
  name: MergeFrom
  nameWithType: HelloReply.MergeFrom
  fullName: Mix.Portal.HelloReply.MergeFrom
- uid: Google.Protobuf.IMessage{Mix.Portal.HelloReply}.MergeFrom(Mix.Portal.HelloReply)
  commentId: M:Google.Protobuf.IMessage{Mix.Portal.HelloReply}.MergeFrom(Mix.Portal.HelloReply)
  parent: Google.Protobuf.IMessage{Mix.Portal.HelloReply}
  definition: Google.Protobuf.IMessage`1.MergeFrom(`0)
  name: MergeFrom(HelloReply)
  nameWithType: IMessage<HelloReply>.MergeFrom(HelloReply)
  fullName: Google.Protobuf.IMessage<Mix.Portal.HelloReply>.MergeFrom(Mix.Portal.HelloReply)
  nameWithType.vb: IMessage(Of HelloReply).MergeFrom(HelloReply)
  fullName.vb: Google.Protobuf.IMessage(Of Mix.Portal.HelloReply).MergeFrom(Mix.Portal.HelloReply)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<HelloReply>.MergeFrom
    fullName: Google.Protobuf.IMessage<Mix.Portal.HelloReply>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of HelloReply).MergeFrom
    fullName: Google.Protobuf.IMessage(Of Mix.Portal.HelloReply).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Portal.HelloReply
    name: HelloReply
    nameWithType: HelloReply
    fullName: Mix.Portal.HelloReply
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
  commentId: M:Google.Protobuf.IMessage`1.MergeFrom(`0)
  isExternal: true
  name: MergeFrom(T)
  nameWithType: IMessage<T>.MergeFrom(T)
  fullName: Google.Protobuf.IMessage<T>.MergeFrom(T)
  nameWithType.vb: IMessage(Of T).MergeFrom(T)
  fullName.vb: Google.Protobuf.IMessage(Of T).MergeFrom(T)
  spec.csharp:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage<T>.MergeFrom
    fullName: Google.Protobuf.IMessage<T>.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage`1.MergeFrom(`0)
    name: MergeFrom
    nameWithType: IMessage(Of T).MergeFrom
    fullName: Google.Protobuf.IMessage(Of T).MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  commentId: M:Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  parent: Google.Protobuf.IMessage
  isExternal: true
  name: MergeFrom(CodedInputStream)
  nameWithType: IMessage.MergeFrom(CodedInputStream)
  fullName: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
  spec.csharp:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IMessage.MergeFrom(Google.Protobuf.CodedInputStream)
    name: MergeFrom
    nameWithType: IMessage.MergeFrom
    fullName: Google.Protobuf.IMessage.MergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.CodedInputStream
    name: CodedInputStream
    nameWithType: CodedInputStream
    fullName: Google.Protobuf.CodedInputStream
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.CodedInputStream
  commentId: T:Google.Protobuf.CodedInputStream
  parent: Google.Protobuf
  isExternal: true
  name: CodedInputStream
  nameWithType: CodedInputStream
  fullName: Google.Protobuf.CodedInputStream
- uid: Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalMergeFrom*
  commentId: Overload:Mix.Portal.HelloReply.Google#Protobuf#IBufferMessage#InternalMergeFrom
  name: IBufferMessage.InternalMergeFrom
  nameWithType: HelloReply.IBufferMessage.InternalMergeFrom
  fullName: Mix.Portal.HelloReply.Google.Protobuf.IBufferMessage.InternalMergeFrom
  nameWithType.vb: HelloReply.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom
  fullName.vb: Mix.Portal.HelloReply.pb::Google.Protobuf.IBufferMessage.InternalMergeFrom
  name.vb: pb::Google.Protobuf.IBufferMessage.InternalMergeFrom
- uid: Google.Protobuf.IBufferMessage.InternalMergeFrom(Google.Protobuf.ParseContext@)
  commentId: M:Google.Protobuf.IBufferMessage.InternalMergeFrom(Google.Protobuf.ParseContext@)
  parent: Google.Protobuf.IBufferMessage
  isExternal: true
  name: InternalMergeFrom(ParseContext)
  nameWithType: IBufferMessage.InternalMergeFrom(ParseContext)
  fullName: Google.Protobuf.IBufferMessage.InternalMergeFrom(Google.Protobuf.ParseContext)
  spec.csharp:
  - uid: Google.Protobuf.IBufferMessage.InternalMergeFrom(Google.Protobuf.ParseContext@)
    name: InternalMergeFrom
    nameWithType: IBufferMessage.InternalMergeFrom
    fullName: Google.Protobuf.IBufferMessage.InternalMergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.ParseContext
    name: ParseContext
    nameWithType: ParseContext
    fullName: Google.Protobuf.ParseContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Google.Protobuf.IBufferMessage.InternalMergeFrom(Google.Protobuf.ParseContext@)
    name: InternalMergeFrom
    nameWithType: IBufferMessage.InternalMergeFrom
    fullName: Google.Protobuf.IBufferMessage.InternalMergeFrom
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Google.Protobuf.ParseContext
    name: ParseContext
    nameWithType: ParseContext
    fullName: Google.Protobuf.ParseContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Google.Protobuf.ParseContext
  commentId: T:Google.Protobuf.ParseContext
  parent: Google.Protobuf
  isExternal: true
  name: ParseContext
  nameWithType: ParseContext
  fullName: Google.Protobuf.ParseContext
