### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto
  commentId: T:Mix.Tenancy.Domain.Dtos.InitCmsDto
  id: InitCmsDto
  parent: Mix.Tenancy.Domain.Dtos
  children:
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.#ctor
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName
  - Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString
  langs:
  - csharp
  - vb
  name: InitCmsDto
  nameWithType: InitCmsDto
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitCmsDto
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 4
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public class InitCmsDto
    content.vb: Public Class InitCmsDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain
  id: PrimaryDomain
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: PrimaryDomain
  nameWithType: InitCmsDto.PrimaryDomain
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PrimaryDomain
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 8
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string PrimaryDomain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrimaryDomain As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString
  id: ConnectionString
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: InitCmsDto.ConnectionString
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConnectionString
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 9
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string ConnectionString { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property ConnectionString As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer
  id: DatabaseServer
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: DatabaseServer
  nameWithType: InitCmsDto.DatabaseServer
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabaseServer
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 34
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string DatabaseServer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabaseServer As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort
  id: DatabasePort
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: DatabasePort
  nameWithType: InitCmsDto.DatabasePort
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabasePort
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 35
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string DatabasePort { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabasePort As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName
  id: DatabaseName
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: DatabaseName
  nameWithType: InitCmsDto.DatabaseName
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabaseName
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 36
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string DatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabaseName As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser
  id: DatabaseUser
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: DatabaseUser
  nameWithType: InitCmsDto.DatabaseUser
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabaseUser
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 37
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string DatabaseUser { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabaseUser As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword
  id: DatabasePassword
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: DatabasePassword
  nameWithType: InitCmsDto.DatabasePassword
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabasePassword
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 38
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string DatabasePassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DatabasePassword As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString
  id: SqliteDbConnectionString
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: SqliteDbConnectionString
  nameWithType: InitCmsDto.SqliteDbConnectionString
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SqliteDbConnectionString
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 39
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string SqliteDbConnectionString { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SqliteDbConnectionString As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider
  id: DatabaseProvider
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: DatabaseProvider
  nameWithType: InitCmsDto.DatabaseProvider
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DatabaseProvider
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 40
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public MixDatabaseProvider DatabaseProvider { get; set; }
    parameters: []
    return:
      type: MixDatabaseProvider
    content.vb: Public Property DatabaseProvider As MixDatabaseProvider
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture
  id: Culture
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: Culture
  nameWithType: InitCmsDto.Culture
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Culture
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 41
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public InitCultureModel Culture { get; set; }
    parameters: []
    return:
      type: Mix.Tenancy.Domain.Models.InitCultureModel
    content.vb: Public Property Culture As InitCultureModel
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName
  commentId: P:Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName
  id: SiteName
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: SiteName
  nameWithType: InitCmsDto.SiteName
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SiteName
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 42
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public string SiteName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SiteName As String
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.#ctor
  commentId: M:Mix.Tenancy.Domain.Dtos.InitCmsDto.#ctor
  id: '#ctor'
  parent: Mix.Tenancy.Domain.Dtos.InitCmsDto
  langs:
  - csharp
  - vb
  name: InitCmsDto()
  nameWithType: InitCmsDto.InitCmsDto()
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.InitCmsDto()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitCmsDto.cs
    startLine: 46
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public InitCmsDto()
    content.vb: Public Sub New
  overload: Mix.Tenancy.Domain.Dtos.InitCmsDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Tenancy.Domain.Dtos
  commentId: N:Mix.Tenancy.Domain.Dtos
  name: Mix.Tenancy.Domain.Dtos
  nameWithType: Mix.Tenancy.Domain.Dtos
  fullName: Mix.Tenancy.Domain.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain
  name: PrimaryDomain
  nameWithType: InitCmsDto.PrimaryDomain
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.PrimaryDomain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString
  name: ConnectionString
  nameWithType: InitCmsDto.ConnectionString
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.ConnectionString
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer
  name: DatabaseServer
  nameWithType: InitCmsDto.DatabaseServer
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseServer
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort
  name: DatabasePort
  nameWithType: InitCmsDto.DatabasePort
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePort
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName
  name: DatabaseName
  nameWithType: InitCmsDto.DatabaseName
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseName
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser
  name: DatabaseUser
  nameWithType: InitCmsDto.DatabaseUser
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseUser
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword
  name: DatabasePassword
  nameWithType: InitCmsDto.DatabasePassword
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabasePassword
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString
  name: SqliteDbConnectionString
  nameWithType: InitCmsDto.SqliteDbConnectionString
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.SqliteDbConnectionString
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider
  name: DatabaseProvider
  nameWithType: InitCmsDto.DatabaseProvider
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.DatabaseProvider
- uid: MixDatabaseProvider
  isExternal: true
  name: MixDatabaseProvider
  nameWithType: MixDatabaseProvider
  fullName: MixDatabaseProvider
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture
  name: Culture
  nameWithType: InitCmsDto.Culture
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.Culture
- uid: Mix.Tenancy.Domain.Models.InitCultureModel
  commentId: T:Mix.Tenancy.Domain.Models.InitCultureModel
  parent: Mix.Tenancy.Domain.Models
  name: InitCultureModel
  nameWithType: InitCultureModel
  fullName: Mix.Tenancy.Domain.Models.InitCultureModel
- uid: Mix.Tenancy.Domain.Models
  commentId: N:Mix.Tenancy.Domain.Models
  name: Mix.Tenancy.Domain.Models
  nameWithType: Mix.Tenancy.Domain.Models
  fullName: Mix.Tenancy.Domain.Models
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName
  name: SiteName
  nameWithType: InitCmsDto.SiteName
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.SiteName
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto.#ctor*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitCmsDto.#ctor
  name: InitCmsDto
  nameWithType: InitCmsDto.InitCmsDto
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto.InitCmsDto
