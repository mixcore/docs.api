### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  commentId: T:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  id: DefaultViewModel
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  children:
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status
  - Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId
  langs:
  - csharp
  - vb
  name: DefaultViewModel
  nameWithType: DefaultViewModel
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DefaultViewModel
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 8
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: 'public class DefaultViewModel : ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>, ISerializable'
    content.vb: >-
      Public Class DefaultViewModel

          Inherits ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel)

          Implements ISerializable
  inheritance:
  - System.Object
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Repository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ModelRepository
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitModel
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ParseModel(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Validate(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitView(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ParseView(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ExpandView(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Clone(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveModel(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveRelatedModels(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveModel(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitContext
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetCachedKey(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetPropValue(System.Object,System.String)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GenerateCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.AddToCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Object,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.IsCache
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Model
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Errors
  - Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.IsValid
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id
  id: Id
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: DefaultViewModel.Id
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 12
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId
  id: UserId
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: DefaultViewModel.UserId
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserId
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 15
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("userId")]

      public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("userId")>

      Public Property UserId As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId
  id: ConnectionId
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: DefaultViewModel.ConnectionId
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConnectionId
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 18
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("connectionId")]

      public string ConnectionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("connectionId")>

      Public Property ConnectionId As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connectionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId
  id: DeviceId
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: DefaultViewModel.DeviceId
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeviceId
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 21
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("deviceId")]

      public string DeviceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("deviceId")>

      Public Property DeviceId As String
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: deviceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status
  id: Status
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: DefaultViewModel.Status
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Status
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 24
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("status")]

      public Constants.Enums.DeviceStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Service.SignalR.Constants.Enums.DeviceStatus
    content.vb: >-
      <JsonProperty("status")>

      Public Property Status As Constants.Enums.DeviceStatus
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate
  id: StartDate
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: StartDate
  nameWithType: DefaultViewModel.StartDate
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StartDate
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 27
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("startDate")]

      public DateTime StartDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("startDate")>

      Public Property StartDate As Date
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: startDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate
  commentId: P:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate
  id: EndDate
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: EndDate
  nameWithType: DefaultViewModel.EndDate
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EndDate
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 30
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: >-
      [JsonProperty("endDate")]

      public DateTime? EndDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("endDate")>

      Public Property EndDate As Date?
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: endDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor
  commentId: M:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor
  id: '#ctor'
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: DefaultViewModel()
  nameWithType: DefaultViewModel.DefaultViewModel()
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DefaultViewModel()
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 35
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: public DefaultViewModel()
    content.vb: Public Sub New
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: '#ctor(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)'
  parent: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  langs:
  - csharp
  - vb
  name: DefaultViewModel(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  nameWithType: DefaultViewModel.DefaultViewModel(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DefaultViewModel(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/ViewModels/MixMessengerUserDevices/DefaultViewModel.cs
    startLine: 39
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  syntax:
    content: public DefaultViewModel(MixMessengerUserDevice model, MixChatServiceContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: model
      type: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    - id: _context
      type: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    content.vb: Public Sub New(model As MixMessengerUserDevice, _context As MixChatServiceContext = Nothing, _transaction As IDbContextTransaction = Nothing)
  overload: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  commentId: N:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  name: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  nameWithType: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  parent: Mix.Domain.Data.ViewModels
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3
  name: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel)
  name.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Repository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  name: Repository
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Repository
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ModelRepository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ModelRepository
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  name: ModelRepository
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ModelRepository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ModelRepository
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ModelRepository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ModelRepository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitModel
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  name: InitModel()
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.InitModel()
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ParseModel(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ParseModel(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseModel(MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ParseModel(MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ParseModel(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ParseModel(MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ParseModel(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Validate(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Validate(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Validate(MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Validate(MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Validate(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Validate(MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Validate(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  name: UpdateFieldsAsync(JObject)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.UpdateFieldsAsync(JObject)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).UpdateFieldsAsync(JObject)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneAsync(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.CloneAsync(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.CloneAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).CloneAsync(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).CloneAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModelsAsync(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.CloneSubModelsAsync(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.CloneSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).CloneSubModelsAsync(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).CloneSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveModelAsync(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModelAsync(Boolean, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveModelAsync(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveModelAsync(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveModelAsync(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveModelAsync(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveRelatedModelsAsync(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModelsAsync(DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveRelatedModelsAsync(DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveRelatedModelsAsync(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveRelatedModelsAsync(DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveRelatedModelsAsync(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveModelAsync(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModelAsync(Boolean, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveModelAsync(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveModelAsync(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveModelAsync(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveModelAsync(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModelsAsync(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveSubModelsAsync(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveSubModelsAsync(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveSubModelsAsync(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitView(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitView(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: InitView(MixMessengerUserDevice, Boolean, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.InitView(MixMessengerUserDevice, Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.InitView(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).InitView(MixMessengerUserDevice, Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).InitView(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ParseView(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ParseView(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ParseView(Boolean, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ParseView(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ParseView(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ParseView(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ParseView(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ExpandView(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.ExpandView(Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: ExpandView(MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ExpandView(MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ExpandView(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ExpandView(MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ExpandView(Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Clone(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Clone(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: Clone(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Clone(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Clone(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Clone(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Clone(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.CloneSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: CloneSubModels(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.CloneSubModels(MixMessengerUserDevice, List<SupportedCulture>, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.CloneSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).CloneSubModels(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).CloneSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(MixMessengerUserDevice, List(Of SupportedCulture), MixChatServiceContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveModel(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveModel(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveModel(Boolean, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveModel(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveModel(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveModel(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveModel(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveRelatedModels(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveRelatedModels(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveRelatedModels(DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveRelatedModels(DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveRelatedModels(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveRelatedModels(DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveRelatedModels(Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveModel(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveModel(System.Boolean,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveModel(Boolean, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveModel(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveModel(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveModel(Boolean, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveModel(System.Boolean, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.SaveSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: SaveSubModels(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveSubModels(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveSubModels(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveSubModels(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitContext
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.InitContext
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  name: InitContext()
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.InitContext()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.InitContext()
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).InitContext()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).InitContext()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetCachedKey(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetCachedKey(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GetCachedKey(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GetCachedKey(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GetCachedKey(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GetCachedKey(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GetCachedKey(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetPropValue(System.Object,System.String)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GetPropValue(System.Object,System.String)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  name: GetPropValue(Object, String)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GetPropValue(Object, String)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GetPropValue(System.Object, System.String)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GetPropValue(Object, String)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GetPropValue(System.Object, System.String)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GenerateCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.GenerateCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: GenerateCache(MixMessengerUserDevice, DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GenerateCache(MixMessengerUserDevice, DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GenerateCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GenerateCache(MixMessengerUserDevice, DefaultViewModel, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GenerateCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
    name: DefaultViewModel
    nameWithType: DefaultViewModel
    fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.AddToCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Object,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.AddToCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,System.Object,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: AddToCache(MixMessengerUserDevice, Object, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.AddToCache(MixMessengerUserDevice, Object, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.AddToCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Object, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).AddToCache(MixMessengerUserDevice, Object, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).AddToCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, System.Object, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.RemoveCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name: RemoveCache(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveCache(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveCache(MixMessengerUserDevice, MixChatServiceContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveCache(Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
    name: MixMessengerUserDevice
    nameWithType: MixMessengerUserDevice
    fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
    name: MixChatServiceContext
    nameWithType: MixChatServiceContext
    fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.IsCache
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.IsCache
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  name: IsCache
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.IsCache
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.IsCache
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).IsCache
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).IsCache
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Model
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  name: Model
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Model
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.Errors
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  name: Errors
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.Errors
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}.IsValid
  parent: Mix.Domain.Data.ViewModels.ViewModelBase{Mix.Cms.Messenger.Models.Data.MixChatServiceContext,Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice,Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel}
  definition: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  name: IsValid
  nameWithType: ViewModelBase<MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel>.IsValid
  nameWithType.vb: ViewModelBase(Of MixChatServiceContext, MixMessengerUserDevice, DefaultViewModel).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of Mix.Cms.Messenger.Models.Data.MixChatServiceContext, Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice, Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel).IsValid
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
  commentId: T:Mix.Domain.Data.ViewModels.ViewModelBase`3
  isExternal: true
  name: ViewModelBase<TDbContext, TModel, TView>
  nameWithType: ViewModelBase<TDbContext, TModel, TView>
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView)
  name.vb: ViewModelBase(Of TDbContext, TModel, TView)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3
    name: ViewModelBase
    nameWithType: ViewModelBase
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels
  commentId: N:Mix.Domain.Data.ViewModels
  isExternal: true
  name: Mix.Domain.Data.ViewModels
  nameWithType: Mix.Domain.Data.ViewModels
  fullName: Mix.Domain.Data.ViewModels
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.Repository
  isExternal: true
  name: Repository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Repository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Repository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Repository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Repository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  commentId: F:Mix.Domain.Data.ViewModels.ViewModelBase`3.ModelRepository
  isExternal: true
  name: ModelRepository
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ModelRepository
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ModelRepository
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ModelRepository
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ModelRepository
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
  isExternal: true
  name: InitModel()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitModel
    name: InitModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseModel(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseModel(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Validate(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Validate(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Validate
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Validate
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Validate
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  isExternal: true
  name: UpdateFieldsAsync(JObject)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync(JObject)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync(JObject)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.UpdateFieldsAsync(Newtonsoft.Json.Linq.JObject)
    name: UpdateFieldsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).UpdateFieldsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModelsAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModelsAsync(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModelsAsync(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModelsAsync(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModelAsync(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModelAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModelAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModelsAsync(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModelsAsync
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModelsAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView(TModel, System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitView(`1,System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: InitView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ParseView(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ParseView(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ParseView(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ParseView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ParseView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ParseView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: ExpandView(TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView(TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.ExpandView(`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: ExpandView
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).ExpandView
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: Clone(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Clone(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: Clone
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).Clone
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: CloneSubModels(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TModel, List<SupportedCulture>, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels(TModel, System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels(TModel, System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture), TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: CloneSubModels(TModel, List(Of SupportedCulture), TDbContext, IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.CloneSubModels(`1,System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture},`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: CloneSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).CloneSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels(TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveRelatedModels(`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveRelatedModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveRelatedModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveModel(Boolean, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveModel(Boolean, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel(System.Boolean, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveModel(System.Boolean,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveModel
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveModel
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.SaveSubModels(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: SaveSubModels
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).SaveSubModels
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetObjectData
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetObjectData
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    nameWithType: SerializationInfo
    fullName: System.Runtime.Serialization.SerializationInfo
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    nameWithType: StreamingContext
    fullName: System.Runtime.Serialization.StreamingContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
  isExternal: true
  name: InitContext()
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext()
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext()
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext()
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.InitContext
    name: InitContext
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).InitContext
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).InitContext
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetCachedKey(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetCachedKey(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GetCachedKey
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetCachedKey
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
  isExternal: true
  name: GetPropValue(Object, String)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetPropValue(Object, String)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetPropValue(System.Object, System.String)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GetPropValue(Object, String)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetPropValue(System.Object, System.String)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GetPropValue(System.Object,System.String)
    name: GetPropValue
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GetPropValue
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GetPropValue
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GenerateCache(TModel, TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).GenerateCache(TModel, TView, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GenerateCache(TModel, TView, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.GenerateCache(`1,`2,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: GenerateCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).GenerateCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).GenerateCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.AddToCache(TModel, System.Object, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).AddToCache(TModel, Object, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).AddToCache(TModel, System.Object, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.AddToCache(`1,System.Object,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: AddToCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).AddToCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).AddToCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  isExternal: true
  name: RemoveCache(TModel, TDbContext, IDbContextTransaction)
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveCache(TModel, TDbContext, IDbContextTransaction)
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveCache(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).RemoveCache(TModel, TDbContext, IDbContextTransaction)
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveCache(TModel, TDbContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  spec.csharp:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase<TDbContext, TModel, TView>.RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.RemoveCache(`1,`0,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
    name: RemoveCache
    nameWithType: ViewModelBase(Of TDbContext, TModel, TView).RemoveCache
    fullName: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).RemoveCache
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    name: IDbContextTransaction
    nameWithType: IDbContextTransaction
    fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsCache
  isExternal: true
  name: IsCache
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsCache
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsCache
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsCache
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsCache
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Model
  isExternal: true
  name: Model
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Model
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Model
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Model
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Model
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.Errors
  isExternal: true
  name: Errors
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.Errors
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.Errors
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).Errors
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).Errors
- uid: Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  commentId: P:Mix.Domain.Data.ViewModels.ViewModelBase`3.IsValid
  isExternal: true
  name: IsValid
  nameWithType: ViewModelBase<TDbContext, TModel, TView>.IsValid
  fullName: Mix.Domain.Data.ViewModels.ViewModelBase<TDbContext, TModel, TView>.IsValid
  nameWithType.vb: ViewModelBase(Of TDbContext, TModel, TView).IsValid
  fullName.vb: Mix.Domain.Data.ViewModels.ViewModelBase(Of TDbContext, TModel, TView).IsValid
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id
  name: Id
  nameWithType: DefaultViewModel.Id
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId
  name: UserId
  nameWithType: DefaultViewModel.UserId
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.UserId
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId
  name: ConnectionId
  nameWithType: DefaultViewModel.ConnectionId
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.ConnectionId
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId
  name: DeviceId
  nameWithType: DefaultViewModel.DeviceId
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DeviceId
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status
  name: Status
  nameWithType: DefaultViewModel.Status
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.Status
- uid: Mix.Cms.Service.SignalR.Constants.Enums.DeviceStatus
  commentId: T:Mix.Cms.Service.SignalR.Constants.Enums.DeviceStatus
  parent: Mix.Cms.Service.SignalR
  name: Constants.Enums.DeviceStatus
  nameWithType: Constants.Enums.DeviceStatus
  fullName: Mix.Cms.Service.SignalR.Constants.Enums.DeviceStatus
- uid: Mix.Cms.Service.SignalR
  commentId: N:Mix.Cms.Service.SignalR
  name: Mix.Cms.Service.SignalR
  nameWithType: Mix.Cms.Service.SignalR
  fullName: Mix.Cms.Service.SignalR
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate
  name: StartDate
  nameWithType: DefaultViewModel.StartDate
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.StartDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate
  name: EndDate
  nameWithType: DefaultViewModel.EndDate
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.EndDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor*
  commentId: Overload:Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.#ctor
  name: DefaultViewModel
  nameWithType: DefaultViewModel.DefaultViewModel
  fullName: Mix.Cms.Service.SignalR.ViewModels.MixMessengerUserDevices.DefaultViewModel.DefaultViewModel
- uid: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  commentId: T:Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
  parent: Mix.Cms.Messenger.Models.Data
  name: MixMessengerUserDevice
  nameWithType: MixMessengerUserDevice
  fullName: Mix.Cms.Messenger.Models.Data.MixMessengerUserDevice
- uid: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  commentId: T:Mix.Cms.Messenger.Models.Data.MixChatServiceContext
  parent: Mix.Cms.Messenger.Models.Data
  name: MixChatServiceContext
  nameWithType: MixChatServiceContext
  fullName: Mix.Cms.Messenger.Models.Data.MixChatServiceContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: Mix.Cms.Messenger.Models.Data
  commentId: N:Mix.Cms.Messenger.Models.Data
  name: Mix.Cms.Messenger.Models.Data
  nameWithType: Mix.Cms.Messenger.Models.Data
  fullName: Mix.Cms.Messenger.Models.Data
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
