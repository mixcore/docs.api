### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.Common.TemplateModel
  commentId: T:Mix.Lib.Models.Common.TemplateModel
  id: TemplateModel
  parent: Mix.Lib.Models.Common
  children:
  - Mix.Lib.Models.Common.TemplateModel.Content
  - Mix.Lib.Models.Common.TemplateModel.Extension
  - Mix.Lib.Models.Common.TemplateModel.FileFolder
  - Mix.Lib.Models.Common.TemplateModel.Filename
  - Mix.Lib.Models.Common.TemplateModel.FileStream
  - Mix.Lib.Models.Common.TemplateModel.Scripts
  - Mix.Lib.Models.Common.TemplateModel.Styles
  langs:
  - csharp
  - vb
  name: TemplateModel
  nameWithType: TemplateModel
  fullName: Mix.Lib.Models.Common.TemplateModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplateModel
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public class TemplateModel
    content.vb: Public Class TemplateModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.Common.TemplateModel.FileFolder
  commentId: P:Mix.Lib.Models.Common.TemplateModel.FileFolder
  id: FileFolder
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: FileFolder
  nameWithType: TemplateModel.FileFolder
  fullName: Mix.Lib.Models.Common.TemplateModel.FileFolder
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileFolder
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string FileFolder { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileFolder As String
  overload: Mix.Lib.Models.Common.TemplateModel.FileFolder*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.TemplateModel.Filename
  commentId: P:Mix.Lib.Models.Common.TemplateModel.Filename
  id: Filename
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: Filename
  nameWithType: TemplateModel.Filename
  fullName: Mix.Lib.Models.Common.TemplateModel.Filename
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Filename
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: >-
      [Required]

      public string Filename { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Filename As String
  overload: Mix.Lib.Models.Common.TemplateModel.Filename*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.TemplateModel.Extension
  commentId: P:Mix.Lib.Models.Common.TemplateModel.Extension
  id: Extension
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: Extension
  nameWithType: TemplateModel.Extension
  fullName: Mix.Lib.Models.Common.TemplateModel.Extension
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Extension
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Extension { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Extension As String
  overload: Mix.Lib.Models.Common.TemplateModel.Extension*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.TemplateModel.Content
  commentId: P:Mix.Lib.Models.Common.TemplateModel.Content
  id: Content
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: TemplateModel.Content
  fullName: Mix.Lib.Models.Common.TemplateModel.Content
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Lib.Models.Common.TemplateModel.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.TemplateModel.Scripts
  commentId: P:Mix.Lib.Models.Common.TemplateModel.Scripts
  id: Scripts
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: Scripts
  nameWithType: TemplateModel.Scripts
  fullName: Mix.Lib.Models.Common.TemplateModel.Scripts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Scripts
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Scripts { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Scripts As String
  overload: Mix.Lib.Models.Common.TemplateModel.Scripts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.TemplateModel.Styles
  commentId: P:Mix.Lib.Models.Common.TemplateModel.Styles
  id: Styles
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: Styles
  nameWithType: TemplateModel.Styles
  fullName: Mix.Lib.Models.Common.TemplateModel.Styles
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Styles
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Styles { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Styles As String
  overload: Mix.Lib.Models.Common.TemplateModel.Styles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.TemplateModel.FileStream
  commentId: P:Mix.Lib.Models.Common.TemplateModel.FileStream
  id: FileStream
  parent: Mix.Lib.Models.Common.TemplateModel
  langs:
  - csharp
  - vb
  name: FileStream
  nameWithType: TemplateModel.FileStream
  fullName: Mix.Lib.Models.Common.TemplateModel.FileStream
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/TemplateModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FileStream
    path: ../../mix.core/src/platform/mix.library/Models/Common/TemplateModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string FileStream { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileStream As String
  overload: Mix.Lib.Models.Common.TemplateModel.FileStream*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Models.Common
  commentId: N:Mix.Lib.Models.Common
  name: Mix.Lib.Models.Common
  nameWithType: Mix.Lib.Models.Common
  fullName: Mix.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.Common.TemplateModel.FileFolder*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.FileFolder
  name: FileFolder
  nameWithType: TemplateModel.FileFolder
  fullName: Mix.Lib.Models.Common.TemplateModel.FileFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Models.Common.TemplateModel.Filename*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.Filename
  name: Filename
  nameWithType: TemplateModel.Filename
  fullName: Mix.Lib.Models.Common.TemplateModel.Filename
- uid: Mix.Lib.Models.Common.TemplateModel.Extension*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.Extension
  name: Extension
  nameWithType: TemplateModel.Extension
  fullName: Mix.Lib.Models.Common.TemplateModel.Extension
- uid: Mix.Lib.Models.Common.TemplateModel.Content*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.Content
  name: Content
  nameWithType: TemplateModel.Content
  fullName: Mix.Lib.Models.Common.TemplateModel.Content
- uid: Mix.Lib.Models.Common.TemplateModel.Scripts*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.Scripts
  name: Scripts
  nameWithType: TemplateModel.Scripts
  fullName: Mix.Lib.Models.Common.TemplateModel.Scripts
- uid: Mix.Lib.Models.Common.TemplateModel.Styles*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.Styles
  name: Styles
  nameWithType: TemplateModel.Styles
  fullName: Mix.Lib.Models.Common.TemplateModel.Styles
- uid: Mix.Lib.Models.Common.TemplateModel.FileStream*
  commentId: Overload:Mix.Lib.Models.Common.TemplateModel.FileStream
  name: FileStream
  nameWithType: TemplateModel.FileStream
  fullName: Mix.Lib.Models.Common.TemplateModel.FileStream
