### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Entities.Client
  commentId: T:Mix.Identity.Entities.Client
  id: Client
  parent: Mix.Identity.Entities
  children:
  - Mix.Identity.Entities.Client.Active
  - Mix.Identity.Entities.Client.AllowedOrigin
  - Mix.Identity.Entities.Client.ApplicationType
  - Mix.Identity.Entities.Client.Id
  - Mix.Identity.Entities.Client.Name
  - Mix.Identity.Entities.Client.RefreshTokenLifeTime
  - Mix.Identity.Entities.Client.Secret
  langs:
  - csharp
  - vb
  name: Client
  nameWithType: Client
  fullName: Mix.Identity.Entities.Client
  type: Class
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Client
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 9
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: public class Client
    content.vb: Public Class Client
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Entities.Client.Id
  commentId: P:Mix.Identity.Entities.Client.Id
  id: Id
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Client.Id
  fullName: Mix.Identity.Entities.Client.Id
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 11
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: >-
      [Key]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Key>

      Public Property Id As String
  overload: Mix.Identity.Entities.Client.Id*
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Entities.Client.Secret
  commentId: P:Mix.Identity.Entities.Client.Secret
  id: Secret
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: Secret
  nameWithType: Client.Secret
  fullName: Mix.Identity.Entities.Client.Secret
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Secret
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 14
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: >-
      [Required]

      public string Secret { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      Public Property Secret As String
  overload: Mix.Identity.Entities.Client.Secret*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Entities.Client.Name
  commentId: P:Mix.Identity.Entities.Client.Name
  id: Name
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Client.Name
  fullName: Mix.Identity.Entities.Client.Name
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 17
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: >-
      [Required]

      [MaxLength(100)]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Required>

      <MaxLength(100)>

      Public Property Name As String
  overload: Mix.Identity.Entities.Client.Name*
  attributes:
  - type: System.ComponentModel.DataAnnotations.RequiredAttribute
    ctor: System.ComponentModel.DataAnnotations.RequiredAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Entities.Client.ApplicationType
  commentId: P:Mix.Identity.Entities.Client.ApplicationType
  id: ApplicationType
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: ApplicationType
  nameWithType: Client.ApplicationType
  fullName: Mix.Identity.Entities.Client.ApplicationType
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ApplicationType
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 21
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: public Const.ApplicationTypes ApplicationType { get; set; }
    parameters: []
    return:
      type: Mix.Identity.Const.ApplicationTypes
    content.vb: 'Public Property ApplicationType As '
  overload: Mix.Identity.Entities.Client.ApplicationType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Entities.Client.Active
  commentId: P:Mix.Identity.Entities.Client.Active
  id: Active
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: Active
  nameWithType: Client.Active
  fullName: Mix.Identity.Entities.Client.Active
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Active
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 22
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: public bool Active { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Active As Boolean
  overload: Mix.Identity.Entities.Client.Active*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Entities.Client.RefreshTokenLifeTime
  commentId: P:Mix.Identity.Entities.Client.RefreshTokenLifeTime
  id: RefreshTokenLifeTime
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: RefreshTokenLifeTime
  nameWithType: Client.RefreshTokenLifeTime
  fullName: Mix.Identity.Entities.Client.RefreshTokenLifeTime
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RefreshTokenLifeTime
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 23
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: public int RefreshTokenLifeTime { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RefreshTokenLifeTime As Integer
  overload: Mix.Identity.Entities.Client.RefreshTokenLifeTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Entities.Client.AllowedOrigin
  commentId: P:Mix.Identity.Entities.Client.AllowedOrigin
  id: AllowedOrigin
  parent: Mix.Identity.Entities.Client
  langs:
  - csharp
  - vb
  name: AllowedOrigin
  nameWithType: Client.AllowedOrigin
  fullName: Mix.Identity.Entities.Client.AllowedOrigin
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Entities/Client.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AllowedOrigin
    path: ../../mix.core/src/Mix.Identity/Entities/Client.cs
    startLine: 25
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Entities
  syntax:
    content: >-
      [MaxLength(100)]

      public string AllowedOrigin { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <MaxLength(100)>

      Public Property AllowedOrigin As String
  overload: Mix.Identity.Entities.Client.AllowedOrigin*
  attributes:
  - type: System.ComponentModel.DataAnnotations.MaxLengthAttribute
    ctor: System.ComponentModel.DataAnnotations.MaxLengthAttribute.#ctor(System.Int32)
    arguments:
    - type: System.Int32
      value: 100
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Entities
  commentId: N:Mix.Identity.Entities
  name: Mix.Identity.Entities
  nameWithType: Mix.Identity.Entities
  fullName: Mix.Identity.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Entities.Client.Id*
  commentId: Overload:Mix.Identity.Entities.Client.Id
  name: Id
  nameWithType: Client.Id
  fullName: Mix.Identity.Entities.Client.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Entities.Client.Secret*
  commentId: Overload:Mix.Identity.Entities.Client.Secret
  name: Secret
  nameWithType: Client.Secret
  fullName: Mix.Identity.Entities.Client.Secret
- uid: Mix.Identity.Entities.Client.Name*
  commentId: Overload:Mix.Identity.Entities.Client.Name
  name: Name
  nameWithType: Client.Name
  fullName: Mix.Identity.Entities.Client.Name
- uid: Mix.Identity.Entities.Client.ApplicationType*
  commentId: Overload:Mix.Identity.Entities.Client.ApplicationType
  name: ApplicationType
  nameWithType: Client.ApplicationType
  fullName: Mix.Identity.Entities.Client.ApplicationType
- uid: Mix.Identity.Const.ApplicationTypes
  commentId: T:Mix.Identity.Const.ApplicationTypes
  parent: Mix.Identity
  name: Const.ApplicationTypes
  nameWithType: Const.ApplicationTypes
  fullName: Mix.Identity.Const.ApplicationTypes
- uid: Mix.Identity
  commentId: N:Mix.Identity
  name: Mix.Identity
  nameWithType: Mix.Identity
  fullName: Mix.Identity
- uid: Mix.Identity.Entities.Client.Active*
  commentId: Overload:Mix.Identity.Entities.Client.Active
  name: Active
  nameWithType: Client.Active
  fullName: Mix.Identity.Entities.Client.Active
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Identity.Entities.Client.RefreshTokenLifeTime*
  commentId: Overload:Mix.Identity.Entities.Client.RefreshTokenLifeTime
  name: RefreshTokenLifeTime
  nameWithType: Client.RefreshTokenLifeTime
  fullName: Mix.Identity.Entities.Client.RefreshTokenLifeTime
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Identity.Entities.Client.AllowedOrigin*
  commentId: Overload:Mix.Identity.Entities.Client.AllowedOrigin
  name: AllowedOrigin
  nameWithType: Client.AllowedOrigin
  fullName: Mix.Identity.Entities.Client.AllowedOrigin
