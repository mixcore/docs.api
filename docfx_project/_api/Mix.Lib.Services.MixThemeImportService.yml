### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Services.MixThemeImportService
  commentId: T:Mix.Lib.Services.MixThemeImportService
  id: MixThemeImportService
  parent: Mix.Lib.Services
  children:
  - Mix.Lib.Services.MixThemeImportService.#ctor(MixCmsContext,Microsoft.AspNetCore.Http.IHttpContextAccessor)
  - Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync(JObject,IProgress{System.Int32},HttpService)
  - Mix.Lib.Services.MixThemeImportService.ExtractTheme(Microsoft.AspNetCore.Http.IFormFile)
  - Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync(SiteDataViewModel)
  - Mix.Lib.Services.MixThemeImportService.LoadSchema
  - Mix.Lib.Services.MixThemeImportService.tenantId
  langs:
  - csharp
  - vb
  name: MixThemeImportService
  nameWithType: MixThemeImportService
  fullName: Mix.Lib.Services.MixThemeImportService
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeImportService
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public class MixThemeImportService
    content.vb: Public Class MixThemeImportService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Services.MixThemeImportService.tenantId
  commentId: F:Mix.Lib.Services.MixThemeImportService.tenantId
  id: tenantId
  parent: Mix.Lib.Services.MixThemeImportService
  langs:
  - csharp
  - vb
  name: tenantId
  nameWithType: MixThemeImportService.tenantId
  fullName: Mix.Lib.Services.MixThemeImportService.tenantId
  type: Field
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: tenantId
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public readonly int tenantId
    return:
      type: System.Int32
    content.vb: Public ReadOnly tenantId As Integer
  modifiers.csharp:
  - public
  - readonly
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.Services.MixThemeImportService.#ctor(MixCmsContext,Microsoft.AspNetCore.Http.IHttpContextAccessor)
  commentId: M:Mix.Lib.Services.MixThemeImportService.#ctor(MixCmsContext,Microsoft.AspNetCore.Http.IHttpContextAccessor)
  id: '#ctor(MixCmsContext,Microsoft.AspNetCore.Http.IHttpContextAccessor)'
  parent: Mix.Lib.Services.MixThemeImportService
  langs:
  - csharp
  - vb
  name: MixThemeImportService(MixCmsContext, IHttpContextAccessor)
  nameWithType: MixThemeImportService.MixThemeImportService(MixCmsContext, IHttpContextAccessor)
  fullName: Mix.Lib.Services.MixThemeImportService.MixThemeImportService(MixCmsContext, Microsoft.AspNetCore.Http.IHttpContextAccessor)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public MixThemeImportService(MixCmsContext cmsContext, IHttpContextAccessor httpContext)
    parameters:
    - id: cmsContext
      type: MixCmsContext
    - id: httpContext
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
    content.vb: Public Sub New(cmsContext As MixCmsContext, httpContext As IHttpContextAccessor)
  overload: Mix.Lib.Services.MixThemeImportService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync(JObject,IProgress{System.Int32},HttpService)
  commentId: M:Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync(JObject,IProgress{System.Int32},HttpService)
  id: DownloadThemeAsync(JObject,IProgress{System.Int32},HttpService)
  parent: Mix.Lib.Services.MixThemeImportService
  langs:
  - csharp
  - vb
  name: DownloadThemeAsync(JObject, IProgress<Int32>, HttpService)
  nameWithType: MixThemeImportService.DownloadThemeAsync(JObject, IProgress<Int32>, HttpService)
  fullName: Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync(JObject, IProgress<System.Int32>, HttpService)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DownloadThemeAsync
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 43
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public Task DownloadThemeAsync(JObject theme, IProgress<int> progress, HttpService httpService)
    parameters:
    - id: theme
      type: JObject
    - id: progress
      type: IProgress{System.Int32}
    - id: httpService
      type: HttpService
    return:
      type: Task
    content.vb: Public Function DownloadThemeAsync(theme As JObject, progress As IProgress(Of Integer), httpService As HttpService) As Task
  overload: Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync*
  nameWithType.vb: MixThemeImportService.DownloadThemeAsync(JObject, IProgress(Of Int32), HttpService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync(JObject, IProgress(Of System.Int32), HttpService)
  name.vb: DownloadThemeAsync(JObject, IProgress(Of Int32), HttpService)
- uid: Mix.Lib.Services.MixThemeImportService.LoadSchema
  commentId: M:Mix.Lib.Services.MixThemeImportService.LoadSchema
  id: LoadSchema
  parent: Mix.Lib.Services.MixThemeImportService
  langs:
  - csharp
  - vb
  name: LoadSchema()
  nameWithType: MixThemeImportService.LoadSchema()
  fullName: Mix.Lib.Services.MixThemeImportService.LoadSchema()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadSchema
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 59
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public SiteDataViewModel LoadSchema()
    return:
      type: SiteDataViewModel
    content.vb: Public Function LoadSchema As SiteDataViewModel
  overload: Mix.Lib.Services.MixThemeImportService.LoadSchema*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixThemeImportService.ExtractTheme(Microsoft.AspNetCore.Http.IFormFile)
  commentId: M:Mix.Lib.Services.MixThemeImportService.ExtractTheme(Microsoft.AspNetCore.Http.IFormFile)
  id: ExtractTheme(Microsoft.AspNetCore.Http.IFormFile)
  parent: Mix.Lib.Services.MixThemeImportService
  langs:
  - csharp
  - vb
  name: ExtractTheme(IFormFile)
  nameWithType: MixThemeImportService.ExtractTheme(IFormFile)
  fullName: Mix.Lib.Services.MixThemeImportService.ExtractTheme(Microsoft.AspNetCore.Http.IFormFile)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExtractTheme
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 66
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public void ExtractTheme(IFormFile themeFile)
    parameters:
    - id: themeFile
      type: Microsoft.AspNetCore.Http.IFormFile
    content.vb: Public Sub ExtractTheme(themeFile As IFormFile)
  overload: Mix.Lib.Services.MixThemeImportService.ExtractTheme*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync(SiteDataViewModel)
  commentId: M:Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync(SiteDataViewModel)
  id: ImportSelectedItemsAsync(SiteDataViewModel)
  parent: Mix.Lib.Services.MixThemeImportService
  langs:
  - csharp
  - vb
  name: ImportSelectedItemsAsync(SiteDataViewModel)
  nameWithType: MixThemeImportService.ImportSelectedItemsAsync(SiteDataViewModel)
  fullName: Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync(SiteDataViewModel)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeImportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ImportSelectedItemsAsync
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeImportService.cs
    startLine: 86
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public Task<SiteDataViewModel> ImportSelectedItemsAsync(SiteDataViewModel siteData)
    parameters:
    - id: siteData
      type: SiteDataViewModel
    return:
      type: Task{SiteDataViewModel}
    content.vb: Public Function ImportSelectedItemsAsync(siteData As SiteDataViewModel) As Task(Of SiteDataViewModel)
  overload: Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Services
  commentId: N:Mix.Lib.Services
  name: Mix.Lib.Services
  nameWithType: Mix.Lib.Services
  fullName: Mix.Lib.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.Services.MixThemeImportService.#ctor*
  commentId: Overload:Mix.Lib.Services.MixThemeImportService.#ctor
  name: MixThemeImportService
  nameWithType: MixThemeImportService.MixThemeImportService
  fullName: Mix.Lib.Services.MixThemeImportService.MixThemeImportService
- uid: MixCmsContext
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: MixCmsContext
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync*
  commentId: Overload:Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync
  name: DownloadThemeAsync
  nameWithType: MixThemeImportService.DownloadThemeAsync
  fullName: Mix.Lib.Services.MixThemeImportService.DownloadThemeAsync
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: IProgress{System.Int32}
  commentId: '!:IProgress{System.Int32}'
  definition: IProgress`1
  name: IProgress<Int32>
  nameWithType: IProgress<Int32>
  fullName: IProgress<System.Int32>
  nameWithType.vb: IProgress(Of Int32)
  fullName.vb: IProgress(Of System.Int32)
  name.vb: IProgress(Of Int32)
  spec.csharp:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: HttpService
  isExternal: true
  name: HttpService
  nameWithType: HttpService
  fullName: HttpService
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: IProgress`1
  isExternal: true
  name: IProgress<>
  nameWithType: IProgress<>
  fullName: IProgress<>
  nameWithType.vb: IProgress(Of )
  fullName.vb: IProgress(Of )
  name.vb: IProgress(Of )
  spec.csharp:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IProgress`1
    name: IProgress
    nameWithType: IProgress
    fullName: IProgress
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Services.MixThemeImportService.LoadSchema*
  commentId: Overload:Mix.Lib.Services.MixThemeImportService.LoadSchema
  name: LoadSchema
  nameWithType: MixThemeImportService.LoadSchema
  fullName: Mix.Lib.Services.MixThemeImportService.LoadSchema
- uid: SiteDataViewModel
  isExternal: true
  name: SiteDataViewModel
  nameWithType: SiteDataViewModel
  fullName: SiteDataViewModel
- uid: Mix.Lib.Services.MixThemeImportService.ExtractTheme*
  commentId: Overload:Mix.Lib.Services.MixThemeImportService.ExtractTheme
  name: ExtractTheme
  nameWithType: MixThemeImportService.ExtractTheme
  fullName: Mix.Lib.Services.MixThemeImportService.ExtractTheme
- uid: Microsoft.AspNetCore.Http.IFormFile
  commentId: T:Microsoft.AspNetCore.Http.IFormFile
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync*
  commentId: Overload:Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync
  name: ImportSelectedItemsAsync
  nameWithType: MixThemeImportService.ImportSelectedItemsAsync
  fullName: Mix.Lib.Services.MixThemeImportService.ImportSelectedItemsAsync
- uid: Task{SiteDataViewModel}
  commentId: '!:Task{SiteDataViewModel}'
  definition: Task`1
  name: Task<SiteDataViewModel>
  nameWithType: Task<SiteDataViewModel>
  fullName: Task<SiteDataViewModel>
  nameWithType.vb: Task(Of SiteDataViewModel)
  fullName.vb: Task(Of SiteDataViewModel)
  name.vb: Task(Of SiteDataViewModel)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiteDataViewModel
    name: SiteDataViewModel
    nameWithType: SiteDataViewModel
    fullName: SiteDataViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiteDataViewModel
    name: SiteDataViewModel
    nameWithType: SiteDataViewModel
    fullName: SiteDataViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
