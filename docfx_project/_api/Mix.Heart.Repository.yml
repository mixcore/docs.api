### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Repository
  commentId: N:Mix.Heart.Repository
  id: Mix.Heart.Repository
  children:
  - Mix.Heart.Repository.EntityRepository`3
  - Mix.Heart.Repository.IRepositoryBase`1
  - Mix.Heart.Repository.QueryRepository`3
  - Mix.Heart.Repository.Repository`4
  - Mix.Heart.Repository.RepositoryBase`1
  - Mix.Heart.Repository.ViewQueryRepository`4
  langs:
  - csharp
  - vb
  name: Mix.Heart.Repository
  nameWithType: Mix.Heart.Repository
  fullName: Mix.Heart.Repository
  type: Namespace
  assemblies:
  - mix.heart
references:
- uid: Mix.Heart.Repository.EntityRepository`3
  commentId: T:Mix.Heart.Repository.EntityRepository`3
  name: EntityRepository<TDbContext, TEntity, TPrimaryKey>
  nameWithType: EntityRepository<TDbContext, TEntity, TPrimaryKey>
  fullName: Mix.Heart.Repository.EntityRepository<TDbContext, TEntity, TPrimaryKey>
  nameWithType.vb: EntityRepository(Of TDbContext, TEntity, TPrimaryKey)
  fullName.vb: Mix.Heart.Repository.EntityRepository(Of TDbContext, TEntity, TPrimaryKey)
  name.vb: EntityRepository(Of TDbContext, TEntity, TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Repository.EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: Mix.Heart.Repository.EntityRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Repository.EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: Mix.Heart.Repository.EntityRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Repository.IRepositoryBase`1
  commentId: T:Mix.Heart.Repository.IRepositoryBase`1
  name: IRepositoryBase<TDbContext>
  nameWithType: IRepositoryBase<TDbContext>
  fullName: Mix.Heart.Repository.IRepositoryBase<TDbContext>
  nameWithType.vb: IRepositoryBase(Of TDbContext)
  fullName.vb: Mix.Heart.Repository.IRepositoryBase(Of TDbContext)
  name.vb: IRepositoryBase(Of TDbContext)
  spec.csharp:
  - uid: Mix.Heart.Repository.IRepositoryBase`1
    name: IRepositoryBase
    nameWithType: IRepositoryBase
    fullName: Mix.Heart.Repository.IRepositoryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Repository.IRepositoryBase`1
    name: IRepositoryBase
    nameWithType: IRepositoryBase
    fullName: Mix.Heart.Repository.IRepositoryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Repository.QueryRepository`3
  commentId: T:Mix.Heart.Repository.QueryRepository`3
  name: QueryRepository<TDbContext, TEntity, TPrimaryKey>
  nameWithType: QueryRepository<TDbContext, TEntity, TPrimaryKey>
  fullName: Mix.Heart.Repository.QueryRepository<TDbContext, TEntity, TPrimaryKey>
  nameWithType.vb: QueryRepository(Of TDbContext, TEntity, TPrimaryKey)
  fullName.vb: Mix.Heart.Repository.QueryRepository(Of TDbContext, TEntity, TPrimaryKey)
  name.vb: QueryRepository(Of TDbContext, TEntity, TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Repository.QueryRepository`3
    name: QueryRepository
    nameWithType: QueryRepository
    fullName: Mix.Heart.Repository.QueryRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Repository.QueryRepository`3
    name: QueryRepository
    nameWithType: QueryRepository
    fullName: Mix.Heart.Repository.QueryRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Repository.Repository`4
  commentId: T:Mix.Heart.Repository.Repository`4
  name: Repository<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: Repository<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Heart.Repository.Repository<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType.vb: Repository(Of TDbContext, TEntity, TPrimaryKey, TView)
  fullName.vb: Mix.Heart.Repository.Repository(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: Repository(Of TDbContext, TEntity, TPrimaryKey, TView)
  spec.csharp:
  - uid: Mix.Heart.Repository.Repository`4
    name: Repository
    nameWithType: Repository
    fullName: Mix.Heart.Repository.Repository
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Repository.Repository`4
    name: Repository
    nameWithType: Repository
    fullName: Mix.Heart.Repository.Repository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Repository.RepositoryBase`1
  commentId: T:Mix.Heart.Repository.RepositoryBase`1
  name: RepositoryBase<TDbContext>
  nameWithType: RepositoryBase<TDbContext>
  fullName: Mix.Heart.Repository.RepositoryBase<TDbContext>
  nameWithType.vb: RepositoryBase(Of TDbContext)
  fullName.vb: Mix.Heart.Repository.RepositoryBase(Of TDbContext)
  name.vb: RepositoryBase(Of TDbContext)
  spec.csharp:
  - uid: Mix.Heart.Repository.RepositoryBase`1
    name: RepositoryBase
    nameWithType: RepositoryBase
    fullName: Mix.Heart.Repository.RepositoryBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Repository.RepositoryBase`1
    name: RepositoryBase
    nameWithType: RepositoryBase
    fullName: Mix.Heart.Repository.RepositoryBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Repository.ViewQueryRepository`4
  commentId: T:Mix.Heart.Repository.ViewQueryRepository`4
  name: ViewQueryRepository<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: ViewQueryRepository<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Heart.Repository.ViewQueryRepository<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType.vb: ViewQueryRepository(Of TDbContext, TEntity, TPrimaryKey, TView)
  fullName.vb: Mix.Heart.Repository.ViewQueryRepository(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: ViewQueryRepository(Of TDbContext, TEntity, TPrimaryKey, TView)
  spec.csharp:
  - uid: Mix.Heart.Repository.ViewQueryRepository`4
    name: ViewQueryRepository
    nameWithType: ViewQueryRepository
    fullName: Mix.Heart.Repository.ViewQueryRepository
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Repository.ViewQueryRepository`4
    name: ViewQueryRepository
    nameWithType: ViewQueryRepository
    fullName: Mix.Heart.Repository.ViewQueryRepository
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
