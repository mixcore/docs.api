### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection
  commentId: T:Mix.Cms.Service.SignalR.Models.MessengerConnection
  id: MessengerConnection
  parent: Mix.Cms.Service.SignalR.Models
  children:
  - Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar
  - Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId
  - Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId
  - Mix.Cms.Service.SignalR.Models.MessengerConnection.Id
  - Mix.Cms.Service.SignalR.Models.MessengerConnection.Name
  langs:
  - csharp
  - vb
  name: MessengerConnection
  nameWithType: MessengerConnection
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MessengerConnection
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 5
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: public class MessengerConnection
    content.vb: Public Class MessengerConnection
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.Id
  commentId: P:Mix.Cms.Service.SignalR.Models.MessengerConnection.Id
  id: Id
  parent: Mix.Cms.Service.SignalR.Models.MessengerConnection
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MessengerConnection.Id
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 7
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("id")]

      public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("id")>

      Public Property Id As String
  overload: Mix.Cms.Service.SignalR.Models.MessengerConnection.Id*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId
  commentId: P:Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId
  id: ConnectionId
  parent: Mix.Cms.Service.SignalR.Models.MessengerConnection
  langs:
  - csharp
  - vb
  name: ConnectionId
  nameWithType: MessengerConnection.ConnectionId
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConnectionId
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 10
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("connectionId")]

      public string ConnectionId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("connectionId")>

      Public Property ConnectionId As String
  overload: Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connectionId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.Name
  commentId: P:Mix.Cms.Service.SignalR.Models.MessengerConnection.Name
  id: Name
  parent: Mix.Cms.Service.SignalR.Models.MessengerConnection
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MessengerConnection.Name
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.Name
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 13
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("name")]

      public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("name")>

      Public Property Name As String
  overload: Mix.Cms.Service.SignalR.Models.MessengerConnection.Name*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: name
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar
  commentId: P:Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar
  id: Avatar
  parent: Mix.Cms.Service.SignalR.Models.MessengerConnection
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: MessengerConnection.Avatar
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Avatar
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 16
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("avatar")]

      public string Avatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("avatar")>

      Public Property Avatar As String
  overload: Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: avatar
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId
  commentId: P:Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId
  id: DeviceId
  parent: Mix.Cms.Service.SignalR.Models.MessengerConnection
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: MessengerConnection.DeviceId
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeviceId
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("deviceId")]

      public string DeviceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("deviceId")>

      Public Property DeviceId As String
  overload: Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: deviceId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Service.SignalR.Models
  commentId: N:Mix.Cms.Service.SignalR.Models
  name: Mix.Cms.Service.SignalR.Models
  nameWithType: Mix.Cms.Service.SignalR.Models
  fullName: Mix.Cms.Service.SignalR.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.Id*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.MessengerConnection.Id
  name: Id
  nameWithType: MessengerConnection.Id
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId
  name: ConnectionId
  nameWithType: MessengerConnection.ConnectionId
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.ConnectionId
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.Name*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.MessengerConnection.Name
  name: Name
  nameWithType: MessengerConnection.Name
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.Name
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar
  name: Avatar
  nameWithType: MessengerConnection.Avatar
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.Avatar
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId
  name: DeviceId
  nameWithType: MessengerConnection.DeviceId
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection.DeviceId
