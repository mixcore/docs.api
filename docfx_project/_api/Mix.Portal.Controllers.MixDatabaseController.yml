### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Controllers.MixDatabaseController
  commentId: T:Mix.Portal.Controllers.MixDatabaseController
  id: MixDatabaseController
  parent: Mix.Portal.Controllers
  children:
  - Mix.Portal.Controllers.MixDatabaseController.#ctor(IHttpContextAccessor,IConfiguration,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,UnitOfWorkInfo{MixCacheDbContext},UnitOfWorkInfo{MixCmsContext},IQueueService{MessageQueueModel},Mix.RepoDb.Services.MixDbService)
  - Mix.Portal.Controllers.MixDatabaseController.Backup(System.String)
  - Mix.Portal.Controllers.MixDatabaseController.DeleteHandler(Mix.Lib.ViewModels.MixDatabaseViewModel)
  - Mix.Portal.Controllers.MixDatabaseController.GetByName(System.String)
  - Mix.Portal.Controllers.MixDatabaseController.Migrate(System.String)
  langs:
  - csharp
  - vb
  name: MixDatabaseController
  nameWithType: MixDatabaseController
  fullName: Mix.Portal.Controllers.MixDatabaseController
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixDatabaseController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseController
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixDatabaseController.cs
    startLine: 5
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [Route("api/v2/rest/mix-portal/mix-database")]

      [ApiController]

      public class MixDatabaseController : MixRestApiControllerBase<MixDatabaseViewModel, MixCmsContext, MixDatabase, int>
    content.vb: >-
      <Route("api/v2/rest/mix-portal/mix-database")>

      <ApiController>

      Public Class MixDatabaseController
          Inherits MixRestApiControllerBase(Of MixDatabaseViewModel, MixCmsContext, MixDatabase, Integer)
  inheritance:
  - System.Object
  attributes:
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: api/v2/rest/mix-portal/mix-database
  - type: Microsoft.AspNetCore.Mvc.ApiControllerAttribute
    ctor: Microsoft.AspNetCore.Mvc.ApiControllerAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Controllers.MixDatabaseController.#ctor(IHttpContextAccessor,IConfiguration,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,UnitOfWorkInfo{MixCacheDbContext},UnitOfWorkInfo{MixCmsContext},IQueueService{MessageQueueModel},Mix.RepoDb.Services.MixDbService)
  commentId: M:Mix.Portal.Controllers.MixDatabaseController.#ctor(IHttpContextAccessor,IConfiguration,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,UnitOfWorkInfo{MixCacheDbContext},UnitOfWorkInfo{MixCmsContext},IQueueService{MessageQueueModel},Mix.RepoDb.Services.MixDbService)
  id: '#ctor(IHttpContextAccessor,IConfiguration,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,UnitOfWorkInfo{MixCacheDbContext},UnitOfWorkInfo{MixCmsContext},IQueueService{MessageQueueModel},Mix.RepoDb.Services.MixDbService)'
  parent: Mix.Portal.Controllers.MixDatabaseController
  langs:
  - csharp
  - vb
  name: MixDatabaseController(IHttpContextAccessor, IConfiguration, MixService, TranslatorService, EntityRepository<MixCmsContext, MixCulture, Int32>, MixIdentityService, UnitOfWorkInfo<MixCacheDbContext>, UnitOfWorkInfo<MixCmsContext>, IQueueService<MessageQueueModel>, MixDbService)
  nameWithType: MixDatabaseController.MixDatabaseController(IHttpContextAccessor, IConfiguration, MixService, TranslatorService, EntityRepository<MixCmsContext, MixCulture, Int32>, MixIdentityService, UnitOfWorkInfo<MixCacheDbContext>, UnitOfWorkInfo<MixCmsContext>, IQueueService<MessageQueueModel>, MixDbService)
  fullName: Mix.Portal.Controllers.MixDatabaseController.MixDatabaseController(IHttpContextAccessor, IConfiguration, MixService, TranslatorService, EntityRepository<MixCmsContext, MixCulture, System.Int32>, MixIdentityService, UnitOfWorkInfo<MixCacheDbContext>, UnitOfWorkInfo<MixCmsContext>, IQueueService<MessageQueueModel>, Mix.RepoDb.Services.MixDbService)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixDatabaseController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixDatabaseController.cs
    startLine: 12
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: public MixDatabaseController(IHttpContextAccessor httpContextAccessor, IConfiguration configuration, MixService mixService, TranslatorService translator, EntityRepository<MixCmsContext, MixCulture, int> cultureRepository, MixIdentityService mixIdentityService, UnitOfWorkInfo<MixCacheDbContext> cacheUOW, UnitOfWorkInfo<MixCmsContext> cmsUOW, IQueueService<MessageQueueModel> queueService, MixDbService mixDbService)
    parameters:
    - id: httpContextAccessor
      type: IHttpContextAccessor
    - id: configuration
      type: IConfiguration
    - id: mixService
      type: MixService
    - id: translator
      type: TranslatorService
    - id: cultureRepository
      type: EntityRepository{MixCmsContext,MixCulture,System.Int32}
    - id: mixIdentityService
      type: MixIdentityService
    - id: cacheUOW
      type: UnitOfWorkInfo{MixCacheDbContext}
    - id: cmsUOW
      type: UnitOfWorkInfo{MixCmsContext}
    - id: queueService
      type: IQueueService{MessageQueueModel}
    - id: mixDbService
      type: Mix.RepoDb.Services.MixDbService
    content.vb: Public Sub New(httpContextAccessor As IHttpContextAccessor, configuration As IConfiguration, mixService As MixService, translator As TranslatorService, cultureRepository As EntityRepository(Of MixCmsContext, MixCulture, Integer), mixIdentityService As MixIdentityService, cacheUOW As UnitOfWorkInfo(Of MixCacheDbContext), cmsUOW As UnitOfWorkInfo(Of MixCmsContext), queueService As IQueueService(Of MessageQueueModel), mixDbService As MixDbService)
  overload: Mix.Portal.Controllers.MixDatabaseController.#ctor*
  nameWithType.vb: MixDatabaseController.MixDatabaseController(IHttpContextAccessor, IConfiguration, MixService, TranslatorService, EntityRepository(Of MixCmsContext, MixCulture, Int32), MixIdentityService, UnitOfWorkInfo(Of MixCacheDbContext), UnitOfWorkInfo(Of MixCmsContext), IQueueService(Of MessageQueueModel), MixDbService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Portal.Controllers.MixDatabaseController.MixDatabaseController(IHttpContextAccessor, IConfiguration, MixService, TranslatorService, EntityRepository(Of MixCmsContext, MixCulture, System.Int32), MixIdentityService, UnitOfWorkInfo(Of MixCacheDbContext), UnitOfWorkInfo(Of MixCmsContext), IQueueService(Of MessageQueueModel), Mix.RepoDb.Services.MixDbService)
  name.vb: MixDatabaseController(IHttpContextAccessor, IConfiguration, MixService, TranslatorService, EntityRepository(Of MixCmsContext, MixCulture, Int32), MixIdentityService, UnitOfWorkInfo(Of MixCacheDbContext), UnitOfWorkInfo(Of MixCmsContext), IQueueService(Of MessageQueueModel), MixDbService)
- uid: Mix.Portal.Controllers.MixDatabaseController.GetByName(System.String)
  commentId: M:Mix.Portal.Controllers.MixDatabaseController.GetByName(System.String)
  id: GetByName(System.String)
  parent: Mix.Portal.Controllers.MixDatabaseController
  langs:
  - csharp
  - vb
  name: GetByName(String)
  nameWithType: MixDatabaseController.GetByName(String)
  fullName: Mix.Portal.Controllers.MixDatabaseController.GetByName(System.String)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixDatabaseController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetByName
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixDatabaseController.cs
    startLine: 29
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpGet("get-by-name/{name}")]

      public Task<ActionResult<MixDatabaseViewModel>> GetByName(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Task{Microsoft.AspNetCore.Mvc.ActionResult{Mix.Lib.ViewModels.MixDatabaseViewModel}}
    content.vb: >-
      <HttpGet("get-by-name/{name}")>

      Public Function GetByName(name As String) As Task(Of ActionResult(Of MixDatabaseViewModel))
  overload: Mix.Portal.Controllers.MixDatabaseController.GetByName*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: get-by-name/{name}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixDatabaseController.Migrate(System.String)
  commentId: M:Mix.Portal.Controllers.MixDatabaseController.Migrate(System.String)
  id: Migrate(System.String)
  parent: Mix.Portal.Controllers.MixDatabaseController
  langs:
  - csharp
  - vb
  name: Migrate(String)
  nameWithType: MixDatabaseController.Migrate(String)
  fullName: Mix.Portal.Controllers.MixDatabaseController.Migrate(System.String)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixDatabaseController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Migrate
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixDatabaseController.cs
    startLine: 38
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpGet("migrate/{name}")]

      public Task<ActionResult> Migrate(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: >-
      <HttpGet("migrate/{name}")>

      Public Function Migrate(name As String) As Task(Of ActionResult)
  overload: Mix.Portal.Controllers.MixDatabaseController.Migrate*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: migrate/{name}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixDatabaseController.Backup(System.String)
  commentId: M:Mix.Portal.Controllers.MixDatabaseController.Backup(System.String)
  id: Backup(System.String)
  parent: Mix.Portal.Controllers.MixDatabaseController
  langs:
  - csharp
  - vb
  name: Backup(String)
  nameWithType: MixDatabaseController.Backup(String)
  fullName: Mix.Portal.Controllers.MixDatabaseController.Backup(System.String)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixDatabaseController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Backup
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixDatabaseController.cs
    startLine: 45
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpGet("backup/{name}")]

      public Task<ActionResult> Backup(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: Task{Microsoft.AspNetCore.Mvc.ActionResult}
    content.vb: >-
      <HttpGet("backup/{name}")>

      Public Function Backup(name As String) As Task(Of ActionResult)
  overload: Mix.Portal.Controllers.MixDatabaseController.Backup*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: backup/{name}
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixDatabaseController.DeleteHandler(Mix.Lib.ViewModels.MixDatabaseViewModel)
  commentId: M:Mix.Portal.Controllers.MixDatabaseController.DeleteHandler(Mix.Lib.ViewModels.MixDatabaseViewModel)
  id: DeleteHandler(Mix.Lib.ViewModels.MixDatabaseViewModel)
  parent: Mix.Portal.Controllers.MixDatabaseController
  langs:
  - csharp
  - vb
  name: DeleteHandler(MixDatabaseViewModel)
  nameWithType: MixDatabaseController.DeleteHandler(MixDatabaseViewModel)
  fullName: Mix.Portal.Controllers.MixDatabaseController.DeleteHandler(Mix.Lib.ViewModels.MixDatabaseViewModel)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixDatabaseController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeleteHandler
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixDatabaseController.cs
    startLine: 56
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: protected override Task DeleteHandler(MixDatabaseViewModel data)
    parameters:
    - id: data
      type: Mix.Lib.ViewModels.MixDatabaseViewModel
    return:
      type: Task
    content.vb: Protected Overrides Function DeleteHandler(data As MixDatabaseViewModel) As Task
  overload: Mix.Portal.Controllers.MixDatabaseController.DeleteHandler*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Portal.Controllers
  commentId: N:Mix.Portal.Controllers
  name: Mix.Portal.Controllers
  nameWithType: Mix.Portal.Controllers
  fullName: Mix.Portal.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Controllers.MixDatabaseController.#ctor*
  commentId: Overload:Mix.Portal.Controllers.MixDatabaseController.#ctor
  name: MixDatabaseController
  nameWithType: MixDatabaseController.MixDatabaseController
  fullName: Mix.Portal.Controllers.MixDatabaseController.MixDatabaseController
- uid: IHttpContextAccessor
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: IHttpContextAccessor
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: MixService
  isExternal: true
  name: MixService
  nameWithType: MixService
  fullName: MixService
- uid: TranslatorService
  isExternal: true
  name: TranslatorService
  nameWithType: TranslatorService
  fullName: TranslatorService
- uid: EntityRepository{MixCmsContext,MixCulture,System.Int32}
  commentId: '!:EntityRepository{MixCmsContext,MixCulture,System.Int32}'
  definition: EntityRepository`3
  name: EntityRepository<MixCmsContext, MixCulture, Int32>
  nameWithType: EntityRepository<MixCmsContext, MixCulture, Int32>
  fullName: EntityRepository<MixCmsContext, MixCulture, System.Int32>
  nameWithType.vb: EntityRepository(Of MixCmsContext, MixCulture, Int32)
  fullName.vb: EntityRepository(Of MixCmsContext, MixCulture, System.Int32)
  name.vb: EntityRepository(Of MixCmsContext, MixCulture, Int32)
  spec.csharp:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MixCulture
    name: MixCulture
    nameWithType: MixCulture
    fullName: MixCulture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MixCulture
    name: MixCulture
    nameWithType: MixCulture
    fullName: MixCulture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MixIdentityService
  isExternal: true
  name: MixIdentityService
  nameWithType: MixIdentityService
  fullName: MixIdentityService
- uid: UnitOfWorkInfo{MixCacheDbContext}
  commentId: '!:UnitOfWorkInfo{MixCacheDbContext}'
  definition: UnitOfWorkInfo`1
  name: UnitOfWorkInfo<MixCacheDbContext>
  nameWithType: UnitOfWorkInfo<MixCacheDbContext>
  fullName: UnitOfWorkInfo<MixCacheDbContext>
  nameWithType.vb: UnitOfWorkInfo(Of MixCacheDbContext)
  fullName.vb: UnitOfWorkInfo(Of MixCacheDbContext)
  name.vb: UnitOfWorkInfo(Of MixCacheDbContext)
  spec.csharp:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixCacheDbContext
    name: MixCacheDbContext
    nameWithType: MixCacheDbContext
    fullName: MixCacheDbContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixCacheDbContext
    name: MixCacheDbContext
    nameWithType: MixCacheDbContext
    fullName: MixCacheDbContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnitOfWorkInfo{MixCmsContext}
  commentId: '!:UnitOfWorkInfo{MixCmsContext}'
  definition: UnitOfWorkInfo`1
  name: UnitOfWorkInfo<MixCmsContext>
  nameWithType: UnitOfWorkInfo<MixCmsContext>
  fullName: UnitOfWorkInfo<MixCmsContext>
  nameWithType.vb: UnitOfWorkInfo(Of MixCmsContext)
  fullName.vb: UnitOfWorkInfo(Of MixCmsContext)
  name.vb: UnitOfWorkInfo(Of MixCmsContext)
  spec.csharp:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: IQueueService{MessageQueueModel}
  commentId: '!:IQueueService{MessageQueueModel}'
  definition: IQueueService`1
  name: IQueueService<MessageQueueModel>
  nameWithType: IQueueService<MessageQueueModel>
  fullName: IQueueService<MessageQueueModel>
  nameWithType.vb: IQueueService(Of MessageQueueModel)
  fullName.vb: IQueueService(Of MessageQueueModel)
  name.vb: IQueueService(Of MessageQueueModel)
  spec.csharp:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: MessageQueueModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: MessageQueueModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.RepoDb.Services.MixDbService
  commentId: T:Mix.RepoDb.Services.MixDbService
  parent: Mix.RepoDb.Services
  name: MixDbService
  nameWithType: MixDbService
  fullName: Mix.RepoDb.Services.MixDbService
- uid: EntityRepository`3
  isExternal: true
  name: EntityRepository<, , >
  nameWithType: EntityRepository<, , >
  fullName: EntityRepository<, , >
  nameWithType.vb: EntityRepository(Of , , )
  fullName.vb: EntityRepository(Of , , )
  name.vb: EntityRepository(Of , , )
  spec.csharp:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: UnitOfWorkInfo`1
  isExternal: true
  name: UnitOfWorkInfo<>
  nameWithType: UnitOfWorkInfo<>
  fullName: UnitOfWorkInfo<>
  nameWithType.vb: UnitOfWorkInfo(Of )
  fullName.vb: UnitOfWorkInfo(Of )
  name.vb: UnitOfWorkInfo(Of )
  spec.csharp:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IQueueService`1
  isExternal: true
  name: IQueueService<>
  nameWithType: IQueueService<>
  fullName: IQueueService<>
  nameWithType.vb: IQueueService(Of )
  fullName.vb: IQueueService(Of )
  name.vb: IQueueService(Of )
  spec.csharp:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.RepoDb.Services
  commentId: N:Mix.RepoDb.Services
  name: Mix.RepoDb.Services
  nameWithType: Mix.RepoDb.Services
  fullName: Mix.RepoDb.Services
- uid: Mix.Portal.Controllers.MixDatabaseController.GetByName*
  commentId: Overload:Mix.Portal.Controllers.MixDatabaseController.GetByName
  name: GetByName
  nameWithType: MixDatabaseController.GetByName
  fullName: Mix.Portal.Controllers.MixDatabaseController.GetByName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task{Microsoft.AspNetCore.Mvc.ActionResult{Mix.Lib.ViewModels.MixDatabaseViewModel}}
  commentId: '!:Task{Microsoft.AspNetCore.Mvc.ActionResult{Mix.Lib.ViewModels.MixDatabaseViewModel}}'
  definition: Task`1
  name: Task<ActionResult<MixDatabaseViewModel>>
  nameWithType: Task<ActionResult<MixDatabaseViewModel>>
  fullName: Task<Microsoft.AspNetCore.Mvc.ActionResult<Mix.Lib.ViewModels.MixDatabaseViewModel>>
  nameWithType.vb: Task(Of ActionResult(Of MixDatabaseViewModel))
  fullName.vb: Task(Of Microsoft.AspNetCore.Mvc.ActionResult(Of Mix.Lib.ViewModels.MixDatabaseViewModel))
  name.vb: Task(Of ActionResult(Of MixDatabaseViewModel))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixDatabaseViewModel
    name: MixDatabaseViewModel
    nameWithType: MixDatabaseViewModel
    fullName: Mix.Lib.ViewModels.MixDatabaseViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixDatabaseViewModel
    name: MixDatabaseViewModel
    nameWithType: MixDatabaseViewModel
    fullName: Mix.Lib.ViewModels.MixDatabaseViewModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Controllers.MixDatabaseController.Migrate*
  commentId: Overload:Mix.Portal.Controllers.MixDatabaseController.Migrate
  name: Migrate
  nameWithType: MixDatabaseController.Migrate
  fullName: Mix.Portal.Controllers.MixDatabaseController.Migrate
- uid: Task{Microsoft.AspNetCore.Mvc.ActionResult}
  commentId: '!:Task{Microsoft.AspNetCore.Mvc.ActionResult}'
  definition: Task`1
  name: Task<ActionResult>
  nameWithType: Task<ActionResult>
  fullName: Task<Microsoft.AspNetCore.Mvc.ActionResult>
  nameWithType.vb: Task(Of ActionResult)
  fullName.vb: Task(Of Microsoft.AspNetCore.Mvc.ActionResult)
  name.vb: Task(Of ActionResult)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.AspNetCore.Mvc.ActionResult
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.AspNetCore.Mvc.ActionResult
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Controllers.MixDatabaseController.Backup*
  commentId: Overload:Mix.Portal.Controllers.MixDatabaseController.Backup
  name: Backup
  nameWithType: MixDatabaseController.Backup
  fullName: Mix.Portal.Controllers.MixDatabaseController.Backup
- uid: Mix.Portal.Controllers.MixDatabaseController.DeleteHandler*
  commentId: Overload:Mix.Portal.Controllers.MixDatabaseController.DeleteHandler
  name: DeleteHandler
  nameWithType: MixDatabaseController.DeleteHandler
  fullName: Mix.Portal.Controllers.MixDatabaseController.DeleteHandler
- uid: Mix.Lib.ViewModels.MixDatabaseViewModel
  commentId: T:Mix.Lib.ViewModels.MixDatabaseViewModel
  parent: Mix.Lib.ViewModels
  name: MixDatabaseViewModel
  nameWithType: MixDatabaseViewModel
  fullName: Mix.Lib.ViewModels.MixDatabaseViewModel
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
