### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  commentId: T:Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  id: GenerateRestApiControllerAttribute
  parent: Mix.Lib.Attributes
  children:
  - Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized
  - Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name
  - Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly
  - Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route
  langs:
  - csharp
  - vb
  name: GenerateRestApiControllerAttribute
  nameWithType: GenerateRestApiControllerAttribute
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GenerateRestApiControllerAttribute
    path: ../../mix.core/src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Attributes
  syntax:
    content: 'public class GenerateRestApiControllerAttribute : Attribute'
    content.vb: >-
      Public Class GenerateRestApiControllerAttribute
          Inherits Attribute
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route
  commentId: P:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route
  id: Route
  parent: Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  langs:
  - csharp
  - vb
  name: Route
  nameWithType: GenerateRestApiControllerAttribute.Route
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Route
    path: ../../mix.core/src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
    startLine: 5
  assemblies:
  - mix.library
  namespace: Mix.Lib.Attributes
  syntax:
    content: public string Route { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Route As String
  overload: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name
  commentId: P:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name
  id: Name
  parent: Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: GenerateRestApiControllerAttribute.Name
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
    startLine: 7
  assemblies:
  - mix.library
  namespace: Mix.Lib.Attributes
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly
  commentId: P:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly
  id: QueryOnly
  parent: Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  langs:
  - csharp
  - vb
  name: QueryOnly
  nameWithType: GenerateRestApiControllerAttribute.QueryOnly
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QueryOnly
    path: ../../mix.core/src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.Attributes
  syntax:
    content: public bool QueryOnly { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property QueryOnly As Boolean
  overload: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized
  commentId: P:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized
  id: IsAuthorized
  parent: Mix.Lib.Attributes.GenerateRestApiControllerAttribute
  langs:
  - csharp
  - vb
  name: IsAuthorized
  nameWithType: GenerateRestApiControllerAttribute.IsAuthorized
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsAuthorized
    path: ../../mix.core/src/platform/mix.library/Attributes/GenerateRestApiControllerAttribute.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.Attributes
  syntax:
    content: public bool IsAuthorized { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsAuthorized As Boolean
  overload: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Attributes
  commentId: N:Mix.Lib.Attributes
  name: Mix.Lib.Attributes
  nameWithType: Mix.Lib.Attributes
  fullName: Mix.Lib.Attributes
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route*
  commentId: Overload:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route
  name: Route
  nameWithType: GenerateRestApiControllerAttribute.Route
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Route
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name*
  commentId: Overload:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name
  name: Name
  nameWithType: GenerateRestApiControllerAttribute.Name
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.Name
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly*
  commentId: Overload:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly
  name: QueryOnly
  nameWithType: GenerateRestApiControllerAttribute.QueryOnly
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.QueryOnly
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized*
  commentId: Overload:Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized
  name: IsAuthorized
  nameWithType: GenerateRestApiControllerAttribute.IsAuthorized
  fullName: Mix.Lib.Attributes.GenerateRestApiControllerAttribute.IsAuthorized
