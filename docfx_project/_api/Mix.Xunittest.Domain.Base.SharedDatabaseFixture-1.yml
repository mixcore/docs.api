### YamlMime:ManagedReference
items:
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  commentId: T:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  id: SharedDatabaseFixture`1
  parent: Mix.Xunittest.Domain.Base
  children:
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.#ctor
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.ConnectionString
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Context
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.CreateContext
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.ctor
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.DbProvider
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Seed
  - Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.SeedData(`0)
  langs:
  - csharp
  - vb
  name: SharedDatabaseFixture<TDbContext>
  nameWithType: SharedDatabaseFixture<TDbContext>
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>
  type: Class
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SharedDatabaseFixture
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 6
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: >-
      public abstract class SharedDatabaseFixture<TDbContext>
          where TDbContext : DbContext
    typeParameters:
    - id: TDbContext
    content.vb: Public MustInherit Class SharedDatabaseFixture(Of TDbContext As DbContext)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext)
  name.vb: SharedDatabaseFixture(Of TDbContext)
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.ctor
  commentId: F:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.ctor
  id: ctor
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: ctor
  nameWithType: SharedDatabaseFixture<TDbContext>.ctor
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.ctor
  type: Field
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ctor
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 11
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: protected static ConstructorInfo ctor
    return:
      type: System.Reflection.ConstructorInfo
    content.vb: Protected Shared ctor As ConstructorInfo
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).ctor
  modifiers.csharp:
  - protected
  - static
  modifiers.vb:
  - Protected
  - Shared
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).ctor
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Context
  commentId: P:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Context
  id: Context
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: Context
  nameWithType: SharedDatabaseFixture<TDbContext>.Context
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.Context
  type: Property
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Context
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 12
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: public TDbContext Context { get; set; }
    parameters: []
    return:
      type: '{TDbContext}'
    content.vb: Public Property Context As TDbContext
  overload: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Context*
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).Context
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).Context
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.ConnectionString
  commentId: F:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.ConnectionString
  id: ConnectionString
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: ConnectionString
  nameWithType: SharedDatabaseFixture<TDbContext>.ConnectionString
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.ConnectionString
  type: Field
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConnectionString
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 13
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: public string ConnectionString
    return:
      type: System.String
    content.vb: Public ConnectionString As String
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).ConnectionString
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).ConnectionString
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.DbProvider
  commentId: F:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.DbProvider
  id: DbProvider
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: DbProvider
  nameWithType: SharedDatabaseFixture<TDbContext>.DbProvider
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.DbProvider
  type: Field
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DbProvider
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 14
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: public MixDatabaseProvider DbProvider
    return:
      type: MixDatabaseProvider
    content.vb: Public DbProvider As MixDatabaseProvider
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).DbProvider
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).DbProvider
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.#ctor
  commentId: M:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.#ctor
  id: '#ctor'
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: SharedDatabaseFixture()
  nameWithType: SharedDatabaseFixture<TDbContext>.SharedDatabaseFixture()
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.SharedDatabaseFixture()
  type: Constructor
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 16
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: public SharedDatabaseFixture()
    content.vb: Public Sub New
  overload: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.#ctor*
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).SharedDatabaseFixture()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).SharedDatabaseFixture()
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.CreateContext
  commentId: M:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.CreateContext
  id: CreateContext
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: CreateContext()
  nameWithType: SharedDatabaseFixture<TDbContext>.CreateContext()
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.CreateContext()
  type: Method
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreateContext
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 23
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: public TDbContext CreateContext()
    return:
      type: '{TDbContext}'
    content.vb: Public Function CreateContext As TDbContext
  overload: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.CreateContext*
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).CreateContext()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).CreateContext()
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Seed
  commentId: M:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Seed
  id: Seed
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: Seed()
  nameWithType: SharedDatabaseFixture<TDbContext>.Seed()
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.Seed()
  type: Method
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Seed
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 28
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: public void Seed()
    content.vb: Public Sub Seed
  overload: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Seed*
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).Seed()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).Seed()
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.SeedData(`0)
  commentId: M:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.SeedData(`0)
  id: SeedData(`0)
  parent: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1
  langs:
  - csharp
  - vb
  name: SeedData(TDbContext)
  nameWithType: SharedDatabaseFixture<TDbContext>.SeedData(TDbContext)
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.SeedData(TDbContext)
  type: Method
  source:
    remote:
      path: src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeedData
    path: ../../mix.core/src/test/mix.xunittest/Domain/Base/SharedDatabaseFixture.cs
    startLine: 44
  assemblies:
  - mix.xunittest
  namespace: Mix.Xunittest.Domain.Base
  syntax:
    content: protected virtual void SeedData(TDbContext dbContext)
    parameters:
    - id: dbContext
      type: '{TDbContext}'
    content.vb: Protected Overridable Sub SeedData(dbContext As TDbContext)
  overload: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.SeedData*
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).SeedData(TDbContext)
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).SeedData(TDbContext)
references:
- uid: Mix.Xunittest.Domain.Base
  commentId: N:Mix.Xunittest.Domain.Base
  name: Mix.Xunittest.Domain.Base
  nameWithType: Mix.Xunittest.Domain.Base
  fullName: Mix.Xunittest.Domain.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Reflection.ConstructorInfo
  commentId: T:System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Context*
  commentId: Overload:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Context
  name: Context
  nameWithType: SharedDatabaseFixture<TDbContext>.Context
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.Context
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).Context
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).Context
- uid: '{TDbContext}'
  commentId: '!:TDbContext'
  definition: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: TDbContext
  name: TDbContext
  nameWithType: TDbContext
  fullName: TDbContext
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: MixDatabaseProvider
  isExternal: true
  name: MixDatabaseProvider
  nameWithType: MixDatabaseProvider
  fullName: MixDatabaseProvider
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.#ctor*
  commentId: Overload:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.#ctor
  name: SharedDatabaseFixture
  nameWithType: SharedDatabaseFixture<TDbContext>.SharedDatabaseFixture
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.SharedDatabaseFixture
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).SharedDatabaseFixture
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).SharedDatabaseFixture
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.CreateContext*
  commentId: Overload:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.CreateContext
  name: CreateContext
  nameWithType: SharedDatabaseFixture<TDbContext>.CreateContext
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.CreateContext
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).CreateContext
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).CreateContext
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Seed*
  commentId: Overload:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.Seed
  name: Seed
  nameWithType: SharedDatabaseFixture<TDbContext>.Seed
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.Seed
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).Seed
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).Seed
- uid: Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.SeedData*
  commentId: Overload:Mix.Xunittest.Domain.Base.SharedDatabaseFixture`1.SeedData
  name: SeedData
  nameWithType: SharedDatabaseFixture<TDbContext>.SeedData
  fullName: Mix.Xunittest.Domain.Base.SharedDatabaseFixture<TDbContext>.SeedData
  nameWithType.vb: SharedDatabaseFixture(Of TDbContext).SeedData
  fullName.vb: Mix.Xunittest.Domain.Base.SharedDatabaseFixture(Of TDbContext).SeedData
