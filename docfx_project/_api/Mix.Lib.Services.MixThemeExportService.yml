### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Services.MixThemeExportService
  commentId: T:Mix.Lib.Services.MixThemeExportService
  id: MixThemeExportService
  parent: Mix.Lib.Services
  children:
  - Mix.Lib.Services.MixThemeExportService.#ctor(MixCmsContext)
  - Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync
  - Mix.Lib.Services.MixThemeExportService.ExportTheme(Mix.Lib.Dtos.ExportThemeDto)
  langs:
  - csharp
  - vb
  name: MixThemeExportService
  nameWithType: MixThemeExportService
  fullName: Mix.Lib.Services.MixThemeExportService
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeExportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixThemeExportService
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeExportService.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public class MixThemeExportService
    content.vb: Public Class MixThemeExportService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Services.MixThemeExportService.#ctor(MixCmsContext)
  commentId: M:Mix.Lib.Services.MixThemeExportService.#ctor(MixCmsContext)
  id: '#ctor(MixCmsContext)'
  parent: Mix.Lib.Services.MixThemeExportService
  langs:
  - csharp
  - vb
  name: MixThemeExportService(MixCmsContext)
  nameWithType: MixThemeExportService.MixThemeExportService(MixCmsContext)
  fullName: Mix.Lib.Services.MixThemeExportService.MixThemeExportService(MixCmsContext)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeExportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeExportService.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public MixThemeExportService(MixCmsContext context)
    parameters:
    - id: context
      type: MixCmsContext
    content.vb: Public Sub New(context As MixCmsContext)
  overload: Mix.Lib.Services.MixThemeExportService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixThemeExportService.ExportTheme(Mix.Lib.Dtos.ExportThemeDto)
  commentId: M:Mix.Lib.Services.MixThemeExportService.ExportTheme(Mix.Lib.Dtos.ExportThemeDto)
  id: ExportTheme(Mix.Lib.Dtos.ExportThemeDto)
  parent: Mix.Lib.Services.MixThemeExportService
  langs:
  - csharp
  - vb
  name: ExportTheme(ExportThemeDto)
  nameWithType: MixThemeExportService.ExportTheme(ExportThemeDto)
  fullName: Mix.Lib.Services.MixThemeExportService.ExportTheme(Mix.Lib.Dtos.ExportThemeDto)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeExportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExportTheme
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeExportService.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public Task<string> ExportTheme(ExportThemeDto request)
    parameters:
    - id: request
      type: Mix.Lib.Dtos.ExportThemeDto
    return:
      type: Task{System.String}
    content.vb: Public Function ExportTheme(request As ExportThemeDto) As Task(Of String)
  overload: Mix.Lib.Services.MixThemeExportService.ExportTheme*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync
  commentId: M:Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync
  id: ExportSelectedItemsAsync
  parent: Mix.Lib.Services.MixThemeExportService
  langs:
  - csharp
  - vb
  name: ExportSelectedItemsAsync()
  nameWithType: MixThemeExportService.ExportSelectedItemsAsync()
  fullName: Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Services/MixThemeExportService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExportSelectedItemsAsync
    path: ../../mix.core/src/platform/mix.library/Services/MixThemeExportService.cs
    startLine: 99
  assemblies:
  - mix.library
  namespace: Mix.Lib.Services
  syntax:
    content: public Task<SiteDataViewModel> ExportSelectedItemsAsync()
    return:
      type: Task{SiteDataViewModel}
    content.vb: Public Function ExportSelectedItemsAsync As Task(Of SiteDataViewModel)
  overload: Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Services
  commentId: N:Mix.Lib.Services
  name: Mix.Lib.Services
  nameWithType: Mix.Lib.Services
  fullName: Mix.Lib.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Services.MixThemeExportService.#ctor*
  commentId: Overload:Mix.Lib.Services.MixThemeExportService.#ctor
  name: MixThemeExportService
  nameWithType: MixThemeExportService.MixThemeExportService
  fullName: Mix.Lib.Services.MixThemeExportService.MixThemeExportService
- uid: MixCmsContext
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: MixCmsContext
- uid: Mix.Lib.Services.MixThemeExportService.ExportTheme*
  commentId: Overload:Mix.Lib.Services.MixThemeExportService.ExportTheme
  name: ExportTheme
  nameWithType: MixThemeExportService.ExportTheme
  fullName: Mix.Lib.Services.MixThemeExportService.ExportTheme
- uid: Mix.Lib.Dtos.ExportThemeDto
  commentId: T:Mix.Lib.Dtos.ExportThemeDto
  parent: Mix.Lib.Dtos
  name: ExportThemeDto
  nameWithType: ExportThemeDto
  fullName: Mix.Lib.Dtos.ExportThemeDto
- uid: Task{System.String}
  commentId: '!:Task{System.String}'
  definition: Task`1
  name: Task<String>
  nameWithType: Task<String>
  fullName: Task<System.String>
  nameWithType.vb: Task(Of String)
  fullName.vb: Task(Of System.String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Dtos
  commentId: N:Mix.Lib.Dtos
  name: Mix.Lib.Dtos
  nameWithType: Mix.Lib.Dtos
  fullName: Mix.Lib.Dtos
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync*
  commentId: Overload:Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync
  name: ExportSelectedItemsAsync
  nameWithType: MixThemeExportService.ExportSelectedItemsAsync
  fullName: Mix.Lib.Services.MixThemeExportService.ExportSelectedItemsAsync
- uid: Task{SiteDataViewModel}
  commentId: '!:Task{SiteDataViewModel}'
  definition: Task`1
  name: Task<SiteDataViewModel>
  nameWithType: Task<SiteDataViewModel>
  fullName: Task<SiteDataViewModel>
  nameWithType.vb: Task(Of SiteDataViewModel)
  fullName.vb: Task(Of SiteDataViewModel)
  name.vb: Task(Of SiteDataViewModel)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: SiteDataViewModel
    name: SiteDataViewModel
    nameWithType: SiteDataViewModel
    fullName: SiteDataViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: SiteDataViewModel
    name: SiteDataViewModel
    nameWithType: SiteDataViewModel
    fullName: SiteDataViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
