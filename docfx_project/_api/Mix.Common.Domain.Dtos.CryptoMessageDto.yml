### YamlMime:ManagedReference
items:
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto
  commentId: T:Mix.Common.Domain.Dtos.CryptoMessageDto
  id: CryptoMessageDto
  parent: Mix.Common.Domain.Dtos
  children:
  - Mix.Common.Domain.Dtos.CryptoMessageDto.Key
  - Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData
  - Mix.Common.Domain.Dtos.CryptoMessageDto.StringData
  langs:
  - csharp
  - vb
  name: CryptoMessageDto
  nameWithType: CryptoMessageDto
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto
  type: Class
  source:
    remote:
      path: src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CryptoMessageDto
    path: ../../mix.core/src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
    startLine: 2
  assemblies:
  - mix.common
  namespace: Mix.Common.Domain.Dtos
  syntax:
    content: public class CryptoMessageDto
    content.vb: Public Class CryptoMessageDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto.Key
  commentId: P:Mix.Common.Domain.Dtos.CryptoMessageDto.Key
  id: Key
  parent: Mix.Common.Domain.Dtos.CryptoMessageDto
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: CryptoMessageDto.Key
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto.Key
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Key
    path: ../../mix.core/src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
    startLine: 4
  assemblies:
  - mix.common
  namespace: Mix.Common.Domain.Dtos
  syntax:
    content: public string Key { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Key As String
  overload: Mix.Common.Domain.Dtos.CryptoMessageDto.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData
  commentId: P:Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData
  id: ObjectData
  parent: Mix.Common.Domain.Dtos.CryptoMessageDto
  langs:
  - csharp
  - vb
  name: ObjectData
  nameWithType: CryptoMessageDto.ObjectData
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ObjectData
    path: ../../mix.core/src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
    startLine: 5
  assemblies:
  - mix.common
  namespace: Mix.Common.Domain.Dtos
  syntax:
    content: public JObject ObjectData { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property ObjectData As JObject
  overload: Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto.StringData
  commentId: P:Mix.Common.Domain.Dtos.CryptoMessageDto.StringData
  id: StringData
  parent: Mix.Common.Domain.Dtos.CryptoMessageDto
  langs:
  - csharp
  - vb
  name: StringData
  nameWithType: CryptoMessageDto.StringData
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto.StringData
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StringData
    path: ../../mix.core/src/modules/mix.common/Domain/Dtos/CryptoMessageDto.cs
    startLine: 6
  assemblies:
  - mix.common
  namespace: Mix.Common.Domain.Dtos
  syntax:
    content: public string StringData { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StringData As String
  overload: Mix.Common.Domain.Dtos.CryptoMessageDto.StringData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Common.Domain.Dtos
  commentId: N:Mix.Common.Domain.Dtos
  name: Mix.Common.Domain.Dtos
  nameWithType: Mix.Common.Domain.Dtos
  fullName: Mix.Common.Domain.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto.Key*
  commentId: Overload:Mix.Common.Domain.Dtos.CryptoMessageDto.Key
  name: Key
  nameWithType: CryptoMessageDto.Key
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto.Key
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData*
  commentId: Overload:Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData
  name: ObjectData
  nameWithType: CryptoMessageDto.ObjectData
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto.ObjectData
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Mix.Common.Domain.Dtos.CryptoMessageDto.StringData*
  commentId: Overload:Mix.Common.Domain.Dtos.CryptoMessageDto.StringData
  name: StringData
  nameWithType: CryptoMessageDto.StringData
  fullName: Mix.Common.Domain.Dtos.CryptoMessageDto.StringData
