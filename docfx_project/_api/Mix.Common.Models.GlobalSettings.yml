### YamlMime:ManagedReference
items:
- uid: Mix.Common.Models.GlobalSettings
  commentId: T:Mix.Common.Models.GlobalSettings
  id: GlobalSettings
  parent: Mix.Common.Models
  children:
  - Mix.Common.Models.GlobalSettings.ApiEncryptKey
  - Mix.Common.Models.GlobalSettings.DataTypes
  - Mix.Common.Models.GlobalSettings.DefaultCulture
  - Mix.Common.Models.GlobalSettings.Domain
  - Mix.Common.Models.GlobalSettings.ExpiredAt
  - Mix.Common.Models.GlobalSettings.ExternalLoginProviders
  - Mix.Common.Models.GlobalSettings.IsEncryptApi
  - Mix.Common.Models.GlobalSettings.LangIcon
  - Mix.Common.Models.GlobalSettings.LastUpdateConfiguration
  - Mix.Common.Models.GlobalSettings.MixDatabaseTypes
  - Mix.Common.Models.GlobalSettings.ModuleTypes
  - Mix.Common.Models.GlobalSettings.PageTypes
  - Mix.Common.Models.GlobalSettings.PortalThemeSettings
  - Mix.Common.Models.GlobalSettings.RSAKeys
  - Mix.Common.Models.GlobalSettings.Statuses
  langs:
  - csharp
  - vb
  name: GlobalSettings
  nameWithType: GlobalSettings
  fullName: Mix.Common.Models.GlobalSettings
  type: Class
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GlobalSettings
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 2
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public class GlobalSettings
    content.vb: Public Class GlobalSettings
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Common.Models.GlobalSettings.Domain
  commentId: P:Mix.Common.Models.GlobalSettings.Domain
  id: Domain
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: GlobalSettings.Domain
  fullName: Mix.Common.Models.GlobalSettings.Domain
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Domain
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 5
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string Domain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Domain As String
  overload: Mix.Common.Models.GlobalSettings.Domain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.DefaultCulture
  commentId: P:Mix.Common.Models.GlobalSettings.DefaultCulture
  id: DefaultCulture
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: DefaultCulture
  nameWithType: GlobalSettings.DefaultCulture
  fullName: Mix.Common.Models.GlobalSettings.DefaultCulture
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DefaultCulture
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 7
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string DefaultCulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DefaultCulture As String
  overload: Mix.Common.Models.GlobalSettings.DefaultCulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.LangIcon
  commentId: P:Mix.Common.Models.GlobalSettings.LangIcon
  id: LangIcon
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: LangIcon
  nameWithType: GlobalSettings.LangIcon
  fullName: Mix.Common.Models.GlobalSettings.LangIcon
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LangIcon
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 9
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string LangIcon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LangIcon As String
  overload: Mix.Common.Models.GlobalSettings.LangIcon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.PortalThemeSettings
  commentId: P:Mix.Common.Models.GlobalSettings.PortalThemeSettings
  id: PortalThemeSettings
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: PortalThemeSettings
  nameWithType: GlobalSettings.PortalThemeSettings
  fullName: Mix.Common.Models.GlobalSettings.PortalThemeSettings
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PortalThemeSettings
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 11
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public JObject PortalThemeSettings { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property PortalThemeSettings As JObject
  overload: Mix.Common.Models.GlobalSettings.PortalThemeSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.ApiEncryptKey
  commentId: P:Mix.Common.Models.GlobalSettings.ApiEncryptKey
  id: ApiEncryptKey
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: ApiEncryptKey
  nameWithType: GlobalSettings.ApiEncryptKey
  fullName: Mix.Common.Models.GlobalSettings.ApiEncryptKey
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ApiEncryptKey
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 13
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string ApiEncryptKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApiEncryptKey As String
  overload: Mix.Common.Models.GlobalSettings.ApiEncryptKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.RSAKeys
  commentId: P:Mix.Common.Models.GlobalSettings.RSAKeys
  id: RSAKeys
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: RSAKeys
  nameWithType: GlobalSettings.RSAKeys
  fullName: Mix.Common.Models.GlobalSettings.RSAKeys
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RSAKeys
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 15
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public Dictionary<string, string> RSAKeys { get; set; }
    parameters: []
    return:
      type: Dictionary{System.String,System.String}
    content.vb: Public Property RSAKeys As Dictionary(Of String, String)
  overload: Mix.Common.Models.GlobalSettings.RSAKeys*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.IsEncryptApi
  commentId: P:Mix.Common.Models.GlobalSettings.IsEncryptApi
  id: IsEncryptApi
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: IsEncryptApi
  nameWithType: GlobalSettings.IsEncryptApi
  fullName: Mix.Common.Models.GlobalSettings.IsEncryptApi
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsEncryptApi
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 17
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public bool IsEncryptApi { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsEncryptApi As Boolean
  overload: Mix.Common.Models.GlobalSettings.IsEncryptApi*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.PageTypes
  commentId: P:Mix.Common.Models.GlobalSettings.PageTypes
  id: PageTypes
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: PageTypes
  nameWithType: GlobalSettings.PageTypes
  fullName: Mix.Common.Models.GlobalSettings.PageTypes
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageTypes
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 19
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string[] PageTypes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property PageTypes As String()
  overload: Mix.Common.Models.GlobalSettings.PageTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.ModuleTypes
  commentId: P:Mix.Common.Models.GlobalSettings.ModuleTypes
  id: ModuleTypes
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: ModuleTypes
  nameWithType: GlobalSettings.ModuleTypes
  fullName: Mix.Common.Models.GlobalSettings.ModuleTypes
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleTypes
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 21
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string[] ModuleTypes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property ModuleTypes As String()
  overload: Mix.Common.Models.GlobalSettings.ModuleTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.MixDatabaseTypes
  commentId: P:Mix.Common.Models.GlobalSettings.MixDatabaseTypes
  id: MixDatabaseTypes
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: MixDatabaseTypes
  nameWithType: GlobalSettings.MixDatabaseTypes
  fullName: Mix.Common.Models.GlobalSettings.MixDatabaseTypes
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseTypes
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 23
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string[] MixDatabaseTypes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property MixDatabaseTypes As String()
  overload: Mix.Common.Models.GlobalSettings.MixDatabaseTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.DataTypes
  commentId: P:Mix.Common.Models.GlobalSettings.DataTypes
  id: DataTypes
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: DataTypes
  nameWithType: GlobalSettings.DataTypes
  fullName: Mix.Common.Models.GlobalSettings.DataTypes
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataTypes
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 25
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string[] DataTypes { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property DataTypes As String()
  overload: Mix.Common.Models.GlobalSettings.DataTypes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.Statuses
  commentId: P:Mix.Common.Models.GlobalSettings.Statuses
  id: Statuses
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: Statuses
  nameWithType: GlobalSettings.Statuses
  fullName: Mix.Common.Models.GlobalSettings.Statuses
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Statuses
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 27
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public string[] Statuses { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Statuses As String()
  overload: Mix.Common.Models.GlobalSettings.Statuses*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.ExternalLoginProviders
  commentId: P:Mix.Common.Models.GlobalSettings.ExternalLoginProviders
  id: ExternalLoginProviders
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: ExternalLoginProviders
  nameWithType: GlobalSettings.ExternalLoginProviders
  fullName: Mix.Common.Models.GlobalSettings.ExternalLoginProviders
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExternalLoginProviders
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 29
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public JObject ExternalLoginProviders { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property ExternalLoginProviders As JObject
  overload: Mix.Common.Models.GlobalSettings.ExternalLoginProviders*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.LastUpdateConfiguration
  commentId: P:Mix.Common.Models.GlobalSettings.LastUpdateConfiguration
  id: LastUpdateConfiguration
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: LastUpdateConfiguration
  nameWithType: GlobalSettings.LastUpdateConfiguration
  fullName: Mix.Common.Models.GlobalSettings.LastUpdateConfiguration
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastUpdateConfiguration
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 31
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public DateTime? LastUpdateConfiguration { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property LastUpdateConfiguration As DateTime?
  overload: Mix.Common.Models.GlobalSettings.LastUpdateConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Common.Models.GlobalSettings.ExpiredAt
  commentId: P:Mix.Common.Models.GlobalSettings.ExpiredAt
  id: ExpiredAt
  parent: Mix.Common.Models.GlobalSettings
  langs:
  - csharp
  - vb
  name: ExpiredAt
  nameWithType: GlobalSettings.ExpiredAt
  fullName: Mix.Common.Models.GlobalSettings.ExpiredAt
  type: Property
  source:
    remote:
      path: src/modules/mix.common/Domain/Models/GlobalSettings.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpiredAt
    path: ../../mix.core/src/modules/mix.common/Domain/Models/GlobalSettings.cs
    startLine: 33
  assemblies:
  - mix.common
  namespace: Mix.Common.Models
  syntax:
    content: public DateTime? ExpiredAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property ExpiredAt As DateTime?
  overload: Mix.Common.Models.GlobalSettings.ExpiredAt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Common.Models
  commentId: N:Mix.Common.Models
  name: Mix.Common.Models
  nameWithType: Mix.Common.Models
  fullName: Mix.Common.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Common.Models.GlobalSettings.Domain*
  commentId: Overload:Mix.Common.Models.GlobalSettings.Domain
  name: Domain
  nameWithType: GlobalSettings.Domain
  fullName: Mix.Common.Models.GlobalSettings.Domain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Common.Models.GlobalSettings.DefaultCulture*
  commentId: Overload:Mix.Common.Models.GlobalSettings.DefaultCulture
  name: DefaultCulture
  nameWithType: GlobalSettings.DefaultCulture
  fullName: Mix.Common.Models.GlobalSettings.DefaultCulture
- uid: Mix.Common.Models.GlobalSettings.LangIcon*
  commentId: Overload:Mix.Common.Models.GlobalSettings.LangIcon
  name: LangIcon
  nameWithType: GlobalSettings.LangIcon
  fullName: Mix.Common.Models.GlobalSettings.LangIcon
- uid: Mix.Common.Models.GlobalSettings.PortalThemeSettings*
  commentId: Overload:Mix.Common.Models.GlobalSettings.PortalThemeSettings
  name: PortalThemeSettings
  nameWithType: GlobalSettings.PortalThemeSettings
  fullName: Mix.Common.Models.GlobalSettings.PortalThemeSettings
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Mix.Common.Models.GlobalSettings.ApiEncryptKey*
  commentId: Overload:Mix.Common.Models.GlobalSettings.ApiEncryptKey
  name: ApiEncryptKey
  nameWithType: GlobalSettings.ApiEncryptKey
  fullName: Mix.Common.Models.GlobalSettings.ApiEncryptKey
- uid: Mix.Common.Models.GlobalSettings.RSAKeys*
  commentId: Overload:Mix.Common.Models.GlobalSettings.RSAKeys
  name: RSAKeys
  nameWithType: GlobalSettings.RSAKeys
  fullName: Mix.Common.Models.GlobalSettings.RSAKeys
- uid: Dictionary{System.String,System.String}
  commentId: '!:Dictionary{System.String,System.String}'
  definition: Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Dictionary`2
  isExternal: true
  name: Dictionary<, >
  nameWithType: Dictionary<, >
  fullName: Dictionary<, >
  nameWithType.vb: Dictionary(Of , )
  fullName.vb: Dictionary(Of , )
  name.vb: Dictionary(Of , )
  spec.csharp:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Common.Models.GlobalSettings.IsEncryptApi*
  commentId: Overload:Mix.Common.Models.GlobalSettings.IsEncryptApi
  name: IsEncryptApi
  nameWithType: GlobalSettings.IsEncryptApi
  fullName: Mix.Common.Models.GlobalSettings.IsEncryptApi
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Common.Models.GlobalSettings.PageTypes*
  commentId: Overload:Mix.Common.Models.GlobalSettings.PageTypes
  name: PageTypes
  nameWithType: GlobalSettings.PageTypes
  fullName: Mix.Common.Models.GlobalSettings.PageTypes
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mix.Common.Models.GlobalSettings.ModuleTypes*
  commentId: Overload:Mix.Common.Models.GlobalSettings.ModuleTypes
  name: ModuleTypes
  nameWithType: GlobalSettings.ModuleTypes
  fullName: Mix.Common.Models.GlobalSettings.ModuleTypes
- uid: Mix.Common.Models.GlobalSettings.MixDatabaseTypes*
  commentId: Overload:Mix.Common.Models.GlobalSettings.MixDatabaseTypes
  name: MixDatabaseTypes
  nameWithType: GlobalSettings.MixDatabaseTypes
  fullName: Mix.Common.Models.GlobalSettings.MixDatabaseTypes
- uid: Mix.Common.Models.GlobalSettings.DataTypes*
  commentId: Overload:Mix.Common.Models.GlobalSettings.DataTypes
  name: DataTypes
  nameWithType: GlobalSettings.DataTypes
  fullName: Mix.Common.Models.GlobalSettings.DataTypes
- uid: Mix.Common.Models.GlobalSettings.Statuses*
  commentId: Overload:Mix.Common.Models.GlobalSettings.Statuses
  name: Statuses
  nameWithType: GlobalSettings.Statuses
  fullName: Mix.Common.Models.GlobalSettings.Statuses
- uid: Mix.Common.Models.GlobalSettings.ExternalLoginProviders*
  commentId: Overload:Mix.Common.Models.GlobalSettings.ExternalLoginProviders
  name: ExternalLoginProviders
  nameWithType: GlobalSettings.ExternalLoginProviders
  fullName: Mix.Common.Models.GlobalSettings.ExternalLoginProviders
- uid: Mix.Common.Models.GlobalSettings.LastUpdateConfiguration*
  commentId: Overload:Mix.Common.Models.GlobalSettings.LastUpdateConfiguration
  name: LastUpdateConfiguration
  nameWithType: GlobalSettings.LastUpdateConfiguration
  fullName: Mix.Common.Models.GlobalSettings.LastUpdateConfiguration
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Common.Models.GlobalSettings.ExpiredAt*
  commentId: Overload:Mix.Common.Models.GlobalSettings.ExpiredAt
  name: ExpiredAt
  nameWithType: GlobalSettings.ExpiredAt
  fullName: Mix.Common.Models.GlobalSettings.ExpiredAt
