### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Models.SearchAccountQueryModel
  commentId: T:Mix.Identity.Models.SearchAccountQueryModel
  id: SearchAccountQueryModel
  parent: Mix.Identity.Models
  children:
  - Mix.Identity.Models.SearchAccountQueryModel.#ctor
  - Mix.Identity.Models.SearchAccountQueryModel.#ctor(Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})
  - Mix.Identity.Models.SearchAccountQueryModel.#ctor(SearchRequestDto,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})
  - Mix.Identity.Models.SearchAccountQueryModel.AndPredicate
  - Mix.Identity.Models.SearchAccountQueryModel.FromDate
  - Mix.Identity.Models.SearchAccountQueryModel.Keyword
  - Mix.Identity.Models.SearchAccountQueryModel.OrPredicate
  - Mix.Identity.Models.SearchAccountQueryModel.PagingData
  - Mix.Identity.Models.SearchAccountQueryModel.Predicate
  - Mix.Identity.Models.SearchAccountQueryModel.Status
  - Mix.Identity.Models.SearchAccountQueryModel.ToDate
  langs:
  - csharp
  - vb
  name: SearchAccountQueryModel
  nameWithType: SearchAccountQueryModel
  fullName: Mix.Identity.Models.SearchAccountQueryModel
  type: Class
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SearchAccountQueryModel
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 11
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public class SearchAccountQueryModel
    content.vb: Public Class SearchAccountQueryModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Models.SearchAccountQueryModel.FromDate
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.FromDate
  id: FromDate
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: FromDate
  nameWithType: SearchAccountQueryModel.FromDate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.FromDate
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FromDate
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 13
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public DateTime? FromDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property FromDate As Date?
  overload: Mix.Identity.Models.SearchAccountQueryModel.FromDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.ToDate
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.ToDate
  id: ToDate
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: ToDate
  nameWithType: SearchAccountQueryModel.ToDate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.ToDate
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ToDate
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 14
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public DateTime? ToDate { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ToDate As Date?
  overload: Mix.Identity.Models.SearchAccountQueryModel.ToDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.Status
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.Status
  id: Status
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: SearchAccountQueryModel.Status
  fullName: Mix.Identity.Models.SearchAccountQueryModel.Status
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Status
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 15
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public MixContentStatus? Status { get; set; }
    parameters: []
    return:
      type: System.Nullable{MixContentStatus}
    content.vb: Public Property Status As MixContentStatus?
  overload: Mix.Identity.Models.SearchAccountQueryModel.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.Keyword
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.Keyword
  id: Keyword
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: Keyword
  nameWithType: SearchAccountQueryModel.Keyword
  fullName: Mix.Identity.Models.SearchAccountQueryModel.Keyword
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Keyword
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 16
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public string Keyword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Keyword As String
  overload: Mix.Identity.Models.SearchAccountQueryModel.Keyword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.PagingData
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.PagingData
  id: PagingData
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: PagingData
  nameWithType: SearchAccountQueryModel.PagingData
  fullName: Mix.Identity.Models.SearchAccountQueryModel.PagingData
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PagingData
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 17
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public PagingRequestModel PagingData { get; set; }
    parameters: []
    return:
      type: Mix.Shared.Models.PagingRequestModel
    content.vb: Public Property PagingData As PagingRequestModel
  overload: Mix.Identity.Models.SearchAccountQueryModel.PagingData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.Predicate
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.Predicate
  id: Predicate
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: Predicate
  nameWithType: SearchAccountQueryModel.Predicate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.Predicate
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Predicate
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 18
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public Expression<Func<MixUser, bool>> Predicate { get; set; }
    parameters: []
    return:
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    content.vb: Public Property Predicate As Expression(Of Func(Of MixUser, Boolean))
  overload: Mix.Identity.Models.SearchAccountQueryModel.Predicate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.AndPredicate
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.AndPredicate
  id: AndPredicate
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: AndPredicate
  nameWithType: SearchAccountQueryModel.AndPredicate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.AndPredicate
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AndPredicate
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 20
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: protected Expression<Func<MixUser, bool>> AndPredicate { get; set; }
    parameters: []
    return:
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    content.vb: Protected Property AndPredicate As Expression(Of Func(Of MixUser, Boolean))
  overload: Mix.Identity.Models.SearchAccountQueryModel.AndPredicate*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Mix.Identity.Models.SearchAccountQueryModel.OrPredicate
  commentId: P:Mix.Identity.Models.SearchAccountQueryModel.OrPredicate
  id: OrPredicate
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: OrPredicate
  nameWithType: SearchAccountQueryModel.OrPredicate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.OrPredicate
  type: Property
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: OrPredicate
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 21
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: protected Expression<Func<MixUser, bool>> OrPredicate { get; set; }
    parameters: []
    return:
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    content.vb: Protected Property OrPredicate As Expression(Of Func(Of MixUser, Boolean))
  overload: Mix.Identity.Models.SearchAccountQueryModel.OrPredicate*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Mix.Identity.Models.SearchAccountQueryModel.#ctor
  commentId: M:Mix.Identity.Models.SearchAccountQueryModel.#ctor
  id: '#ctor'
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: SearchAccountQueryModel()
  nameWithType: SearchAccountQueryModel.SearchAccountQueryModel()
  fullName: Mix.Identity.Models.SearchAccountQueryModel.SearchAccountQueryModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 23
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public SearchAccountQueryModel()
    content.vb: Public Sub New
  overload: Mix.Identity.Models.SearchAccountQueryModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.SearchAccountQueryModel.#ctor(Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})
  commentId: M:Mix.Identity.Models.SearchAccountQueryModel.#ctor(Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})
  id: '#ctor(Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})'
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: SearchAccountQueryModel(HttpRequest, Expression<Func<MixUser, Boolean>>, Expression<Func<MixUser, Boolean>>)
  nameWithType: SearchAccountQueryModel.SearchAccountQueryModel(HttpRequest, Expression<Func<MixUser, Boolean>>, Expression<Func<MixUser, Boolean>>)
  fullName: Mix.Identity.Models.SearchAccountQueryModel.SearchAccountQueryModel(Microsoft.AspNetCore.Http.HttpRequest, System.Linq.Expressions.Expression<System.Func<Mix.Database.Entities.Account.MixUser, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<Mix.Database.Entities.Account.MixUser, System.Boolean>>)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 28
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public SearchAccountQueryModel(HttpRequest request, Expression<Func<MixUser, bool>> andPredicate = null, Expression<Func<MixUser, bool>> orPredicate = null)
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
    - id: andPredicate
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    - id: orPredicate
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    content.vb: Public Sub New(request As HttpRequest, andPredicate As Expression(Of Func(Of MixUser, Boolean)) = Nothing, orPredicate As Expression(Of Func(Of MixUser, Boolean)) = Nothing)
  overload: Mix.Identity.Models.SearchAccountQueryModel.#ctor*
  nameWithType.vb: SearchAccountQueryModel.SearchAccountQueryModel(HttpRequest, Expression(Of Func(Of MixUser, Boolean)), Expression(Of Func(Of MixUser, Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Identity.Models.SearchAccountQueryModel.SearchAccountQueryModel(Microsoft.AspNetCore.Http.HttpRequest, System.Linq.Expressions.Expression(Of System.Func(Of Mix.Database.Entities.Account.MixUser, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of Mix.Database.Entities.Account.MixUser, System.Boolean)))
  name.vb: SearchAccountQueryModel(HttpRequest, Expression(Of Func(Of MixUser, Boolean)), Expression(Of Func(Of MixUser, Boolean)))
- uid: Mix.Identity.Models.SearchAccountQueryModel.#ctor(SearchRequestDto,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})
  commentId: M:Mix.Identity.Models.SearchAccountQueryModel.#ctor(SearchRequestDto,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})
  id: '#ctor(SearchRequestDto,System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}},System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}})'
  parent: Mix.Identity.Models.SearchAccountQueryModel
  langs:
  - csharp
  - vb
  name: SearchAccountQueryModel(SearchRequestDto, Expression<Func<MixUser, Boolean>>, Expression<Func<MixUser, Boolean>>)
  nameWithType: SearchAccountQueryModel.SearchAccountQueryModel(SearchRequestDto, Expression<Func<MixUser, Boolean>>, Expression<Func<MixUser, Boolean>>)
  fullName: Mix.Identity.Models.SearchAccountQueryModel.SearchAccountQueryModel(SearchRequestDto, System.Linq.Expressions.Expression<System.Func<Mix.Database.Entities.Account.MixUser, System.Boolean>>, System.Linq.Expressions.Expression<System.Func<Mix.Database.Entities.Account.MixUser, System.Boolean>>)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.identity/Models/SearchAccountQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.identity/Models/SearchAccountQueryModel.cs
    startLine: 38
  assemblies:
  - mix.identity
  namespace: Mix.Identity.Models
  syntax:
    content: public SearchAccountQueryModel(SearchRequestDto request, Expression<Func<MixUser, bool>> andPredicate = null, Expression<Func<MixUser, bool>> orPredicate = null)
    parameters:
    - id: request
      type: SearchRequestDto
    - id: andPredicate
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    - id: orPredicate
      type: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
    content.vb: Public Sub New(request As SearchRequestDto, andPredicate As Expression(Of Func(Of MixUser, Boolean)) = Nothing, orPredicate As Expression(Of Func(Of MixUser, Boolean)) = Nothing)
  overload: Mix.Identity.Models.SearchAccountQueryModel.#ctor*
  nameWithType.vb: SearchAccountQueryModel.SearchAccountQueryModel(SearchRequestDto, Expression(Of Func(Of MixUser, Boolean)), Expression(Of Func(Of MixUser, Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Identity.Models.SearchAccountQueryModel.SearchAccountQueryModel(SearchRequestDto, System.Linq.Expressions.Expression(Of System.Func(Of Mix.Database.Entities.Account.MixUser, System.Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of Mix.Database.Entities.Account.MixUser, System.Boolean)))
  name.vb: SearchAccountQueryModel(SearchRequestDto, Expression(Of Func(Of MixUser, Boolean)), Expression(Of Func(Of MixUser, Boolean)))
references:
- uid: Mix.Identity.Models
  commentId: N:Mix.Identity.Models
  name: Mix.Identity.Models
  nameWithType: Mix.Identity.Models
  fullName: Mix.Identity.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Models.SearchAccountQueryModel.FromDate*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.FromDate
  name: FromDate
  nameWithType: SearchAccountQueryModel.FromDate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.FromDate
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Models.SearchAccountQueryModel.ToDate*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.ToDate
  name: ToDate
  nameWithType: SearchAccountQueryModel.ToDate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.ToDate
- uid: Mix.Identity.Models.SearchAccountQueryModel.Status*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.Status
  name: Status
  nameWithType: SearchAccountQueryModel.Status
  fullName: Mix.Identity.Models.SearchAccountQueryModel.Status
- uid: System.Nullable{MixContentStatus}
  commentId: T:System.Nullable{MixContentStatus}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MixContentStatus>
  nameWithType: Nullable<MixContentStatus>
  fullName: System.Nullable<MixContentStatus>
  nameWithType.vb: Nullable(Of MixContentStatus)
  fullName.vb: System.Nullable(Of MixContentStatus)
  name.vb: Nullable(Of MixContentStatus)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixContentStatus
    name: MixContentStatus
    nameWithType: MixContentStatus
    fullName: MixContentStatus
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixContentStatus
    name: MixContentStatus
    nameWithType: MixContentStatus
    fullName: MixContentStatus
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Identity.Models.SearchAccountQueryModel.Keyword*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.Keyword
  name: Keyword
  nameWithType: SearchAccountQueryModel.Keyword
  fullName: Mix.Identity.Models.SearchAccountQueryModel.Keyword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Models.SearchAccountQueryModel.PagingData*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.PagingData
  name: PagingData
  nameWithType: SearchAccountQueryModel.PagingData
  fullName: Mix.Identity.Models.SearchAccountQueryModel.PagingData
- uid: Mix.Shared.Models.PagingRequestModel
  commentId: T:Mix.Shared.Models.PagingRequestModel
  parent: Mix.Shared.Models
  name: PagingRequestModel
  nameWithType: PagingRequestModel
  fullName: Mix.Shared.Models.PagingRequestModel
- uid: Mix.Shared.Models
  commentId: N:Mix.Shared.Models
  name: Mix.Shared.Models
  nameWithType: Mix.Shared.Models
  fullName: Mix.Shared.Models
- uid: Mix.Identity.Models.SearchAccountQueryModel.Predicate*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.Predicate
  name: Predicate
  nameWithType: SearchAccountQueryModel.Predicate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.Predicate
- uid: System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Mix.Database.Entities.Account.MixUser,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<MixUser, Boolean>>
  nameWithType: Expression<Func<MixUser, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<Mix.Database.Entities.Account.MixUser, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of MixUser, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Mix.Database.Entities.Account.MixUser, System.Boolean))
  name.vb: Expression(Of Func(Of MixUser, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Mix.Identity.Models.SearchAccountQueryModel.AndPredicate*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.AndPredicate
  name: AndPredicate
  nameWithType: SearchAccountQueryModel.AndPredicate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.AndPredicate
- uid: Mix.Identity.Models.SearchAccountQueryModel.OrPredicate*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.OrPredicate
  name: OrPredicate
  nameWithType: SearchAccountQueryModel.OrPredicate
  fullName: Mix.Identity.Models.SearchAccountQueryModel.OrPredicate
- uid: Mix.Identity.Models.SearchAccountQueryModel.#ctor*
  commentId: Overload:Mix.Identity.Models.SearchAccountQueryModel.#ctor
  name: SearchAccountQueryModel
  nameWithType: SearchAccountQueryModel.SearchAccountQueryModel
  fullName: Mix.Identity.Models.SearchAccountQueryModel.SearchAccountQueryModel
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: SearchRequestDto
  isExternal: true
  name: SearchRequestDto
  nameWithType: SearchRequestDto
  fullName: SearchRequestDto
