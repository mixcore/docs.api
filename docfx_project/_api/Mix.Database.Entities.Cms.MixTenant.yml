### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Cms.MixTenant
  commentId: T:Mix.Database.Entities.Cms.MixTenant
  id: MixTenant
  parent: Mix.Database.Entities.Cms
  children:
  - Mix.Database.Entities.Cms.MixTenant.Description
  - Mix.Database.Entities.Cms.MixTenant.DisplayName
  - Mix.Database.Entities.Cms.MixTenant.MixDatabases
  - Mix.Database.Entities.Cms.MixTenant.MixModules
  - Mix.Database.Entities.Cms.MixTenant.MixPages
  - Mix.Database.Entities.Cms.MixTenant.MixPosts
  - Mix.Database.Entities.Cms.MixTenant.PrimaryDomain
  - Mix.Database.Entities.Cms.MixTenant.SystemName
  langs:
  - csharp
  - vb
  name: MixTenant
  nameWithType: MixTenant
  fullName: Mix.Database.Entities.Cms.MixTenant
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenant
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: 'public class MixTenant : EntityBase<int>'
    content.vb: >-
      Public Class MixTenant
          Inherits EntityBase(Of Integer)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Cms.MixTenant.PrimaryDomain
  commentId: P:Mix.Database.Entities.Cms.MixTenant.PrimaryDomain
  id: PrimaryDomain
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: PrimaryDomain
  nameWithType: MixTenant.PrimaryDomain
  fullName: Mix.Database.Entities.Cms.MixTenant.PrimaryDomain
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PrimaryDomain
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public string PrimaryDomain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrimaryDomain As String
  overload: Mix.Database.Entities.Cms.MixTenant.PrimaryDomain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixTenant.SystemName
  commentId: P:Mix.Database.Entities.Cms.MixTenant.SystemName
  id: SystemName
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MixTenant.SystemName
  fullName: Mix.Database.Entities.Cms.MixTenant.SystemName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Database.Entities.Cms.MixTenant.SystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixTenant.DisplayName
  commentId: P:Mix.Database.Entities.Cms.MixTenant.DisplayName
  id: DisplayName
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MixTenant.DisplayName
  fullName: Mix.Database.Entities.Cms.MixTenant.DisplayName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DisplayName
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Mix.Database.Entities.Cms.MixTenant.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixTenant.Description
  commentId: P:Mix.Database.Entities.Cms.MixTenant.Description
  id: Description
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MixTenant.Description
  fullName: Mix.Database.Entities.Cms.MixTenant.Description
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 9
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Mix.Database.Entities.Cms.MixTenant.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixTenant.MixPages
  commentId: P:Mix.Database.Entities.Cms.MixTenant.MixPages
  id: MixPages
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: MixPages
  nameWithType: MixTenant.MixPages
  fullName: Mix.Database.Entities.Cms.MixTenant.MixPages
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPages
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 11
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public virtual ICollection<MixPage> MixPages { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixPage}
    content.vb: Public Overridable Property MixPages As ICollection(Of MixPage)
  overload: Mix.Database.Entities.Cms.MixTenant.MixPages*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Cms.MixTenant.MixModules
  commentId: P:Mix.Database.Entities.Cms.MixTenant.MixModules
  id: MixModules
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: MixModules
  nameWithType: MixTenant.MixModules
  fullName: Mix.Database.Entities.Cms.MixTenant.MixModules
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixModules
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 12
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public virtual ICollection<MixModule> MixModules { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixModule}
    content.vb: Public Overridable Property MixModules As ICollection(Of MixModule)
  overload: Mix.Database.Entities.Cms.MixTenant.MixModules*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Cms.MixTenant.MixPosts
  commentId: P:Mix.Database.Entities.Cms.MixTenant.MixPosts
  id: MixPosts
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: MixPosts
  nameWithType: MixTenant.MixPosts
  fullName: Mix.Database.Entities.Cms.MixTenant.MixPosts
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPosts
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 13
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public virtual ICollection<MixPost> MixPosts { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixPost}
    content.vb: Public Overridable Property MixPosts As ICollection(Of MixPost)
  overload: Mix.Database.Entities.Cms.MixTenant.MixPosts*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Cms.MixTenant.MixDatabases
  commentId: P:Mix.Database.Entities.Cms.MixTenant.MixDatabases
  id: MixDatabases
  parent: Mix.Database.Entities.Cms.MixTenant
  langs:
  - csharp
  - vb
  name: MixDatabases
  nameWithType: MixTenant.MixDatabases
  fullName: Mix.Database.Entities.Cms.MixTenant.MixDatabases
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixTenant.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabases
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixTenant.cs
    startLine: 14
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public virtual ICollection<MixDatabase> MixDatabases { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixDatabase}
    content.vb: Public Overridable Property MixDatabases As ICollection(Of MixDatabase)
  overload: Mix.Database.Entities.Cms.MixTenant.MixDatabases*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Database.Entities.Cms
  commentId: N:Mix.Database.Entities.Cms
  name: Mix.Database.Entities.Cms
  nameWithType: Mix.Database.Entities.Cms
  fullName: Mix.Database.Entities.Cms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Cms.MixTenant.PrimaryDomain*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.PrimaryDomain
  name: PrimaryDomain
  nameWithType: MixTenant.PrimaryDomain
  fullName: Mix.Database.Entities.Cms.MixTenant.PrimaryDomain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Cms.MixTenant.SystemName*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.SystemName
  name: SystemName
  nameWithType: MixTenant.SystemName
  fullName: Mix.Database.Entities.Cms.MixTenant.SystemName
- uid: Mix.Database.Entities.Cms.MixTenant.DisplayName*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.DisplayName
  name: DisplayName
  nameWithType: MixTenant.DisplayName
  fullName: Mix.Database.Entities.Cms.MixTenant.DisplayName
- uid: Mix.Database.Entities.Cms.MixTenant.Description*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.Description
  name: Description
  nameWithType: MixTenant.Description
  fullName: Mix.Database.Entities.Cms.MixTenant.Description
- uid: Mix.Database.Entities.Cms.MixTenant.MixPages*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.MixPages
  name: MixPages
  nameWithType: MixTenant.MixPages
  fullName: Mix.Database.Entities.Cms.MixTenant.MixPages
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixPage}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixPage}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixPage>
  nameWithType: ICollection<MixPage>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Cms.MixPage>
  nameWithType.vb: ICollection(Of MixPage)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Cms.MixPage)
  name.vb: ICollection(Of MixPage)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Database.Entities.Cms.MixPage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Cms.MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: Mix.Database.Entities.Cms.MixPage
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Database.Entities.Cms.MixTenant.MixModules*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.MixModules
  name: MixModules
  nameWithType: MixTenant.MixModules
  fullName: Mix.Database.Entities.Cms.MixTenant.MixModules
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixModule}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixModule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixModule>
  nameWithType: ICollection<MixModule>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Cms.MixModule>
  nameWithType.vb: ICollection(Of MixModule)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Cms.MixModule)
  name.vb: ICollection(Of MixModule)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Cms.MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: Mix.Database.Entities.Cms.MixModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Cms.MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: Mix.Database.Entities.Cms.MixModule
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Cms.MixTenant.MixPosts*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.MixPosts
  name: MixPosts
  nameWithType: MixTenant.MixPosts
  fullName: Mix.Database.Entities.Cms.MixTenant.MixPosts
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixPost}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixPost}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixPost>
  nameWithType: ICollection<MixPost>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Cms.MixPost>
  nameWithType.vb: ICollection(Of MixPost)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Cms.MixPost)
  name.vb: ICollection(Of MixPost)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Cms.MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: Mix.Database.Entities.Cms.MixPost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Cms.MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: Mix.Database.Entities.Cms.MixPost
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Cms.MixTenant.MixDatabases*
  commentId: Overload:Mix.Database.Entities.Cms.MixTenant.MixDatabases
  name: MixDatabases
  nameWithType: MixTenant.MixDatabases
  fullName: Mix.Database.Entities.Cms.MixTenant.MixDatabases
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixDatabase}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixDatabase}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixDatabase>
  nameWithType: ICollection<MixDatabase>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Cms.MixDatabase>
  nameWithType.vb: ICollection(Of MixDatabase)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Cms.MixDatabase)
  name.vb: ICollection(Of MixDatabase)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Cms.MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: Mix.Database.Entities.Cms.MixDatabase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Cms.MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: Mix.Database.Entities.Cms.MixDatabase
  - name: )
    nameWithType: )
    fullName: )
