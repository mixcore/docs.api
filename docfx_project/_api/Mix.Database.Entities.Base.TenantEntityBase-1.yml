### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Base.TenantEntityBase`1
  commentId: T:Mix.Database.Entities.Base.TenantEntityBase`1
  id: TenantEntityBase`1
  parent: Mix.Database.Entities.Base
  children:
  - Mix.Database.Entities.Base.TenantEntityBase`1.Description
  - Mix.Database.Entities.Base.TenantEntityBase`1.DisplayName
  - Mix.Database.Entities.Base.TenantEntityBase`1.MixTenant
  - Mix.Database.Entities.Base.TenantEntityBase`1.MixTenantId
  langs:
  - csharp
  - vb
  name: TenantEntityBase<TPrimaryKey>
  nameWithType: TenantEntityBase<TPrimaryKey>
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/TenantEntityBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TenantEntityBase
    path: ../../mix.core/src/platform/mix.database/Entities/Base/TenantEntityBase.cs
    startLine: 2
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: 'public abstract class TenantEntityBase<TPrimaryKey> : EntityBase<TPrimaryKey> where TPrimaryKey : IComparable'
    typeParameters:
    - id: TPrimaryKey
    content.vb: >-
      Public MustInherit Class TenantEntityBase(Of TPrimaryKey As IComparable)
          Inherits EntityBase(Of TPrimaryKey)
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Database.Entities.Base.TenantEntityUniqueNameBase`1
  - Mix.Database.Entities.Cms.MixCulture
  - Mix.Database.Entities.Cms.MixDomain
  - Mix.Database.Entities.Cms.MixMedia
  - Mix.Database.Entities.Cms.MixPage
  - Mix.Database.Entities.Cms.MixPost
  - Mix.Database.Entities.Cms.MixUrlAlias
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey)
  name.vb: TenantEntityBase(Of TPrimaryKey)
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.DisplayName
  commentId: P:Mix.Database.Entities.Base.TenantEntityBase`1.DisplayName
  id: DisplayName
  parent: Mix.Database.Entities.Base.TenantEntityBase`1
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: TenantEntityBase<TPrimaryKey>.DisplayName
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.DisplayName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/TenantEntityBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DisplayName
    path: ../../mix.core/src/platform/mix.database/Entities/Base/TenantEntityBase.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Mix.Database.Entities.Base.TenantEntityBase`1.DisplayName*
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).DisplayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).DisplayName
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.Description
  commentId: P:Mix.Database.Entities.Base.TenantEntityBase`1.Description
  id: Description
  parent: Mix.Database.Entities.Base.TenantEntityBase`1
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: TenantEntityBase<TPrimaryKey>.Description
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.Description
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/TenantEntityBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/platform/mix.database/Entities/Base/TenantEntityBase.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public virtual string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Description As String
  overload: Mix.Database.Entities.Base.TenantEntityBase`1.Description*
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).Description
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).Description
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.MixTenantId
  commentId: P:Mix.Database.Entities.Base.TenantEntityBase`1.MixTenantId
  id: MixTenantId
  parent: Mix.Database.Entities.Base.TenantEntityBase`1
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: TenantEntityBase<TPrimaryKey>.MixTenantId
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.MixTenantId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/TenantEntityBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.database/Entities/Base/TenantEntityBase.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Database.Entities.Base.TenantEntityBase`1.MixTenantId*
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).MixTenantId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).MixTenantId
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.MixTenant
  commentId: P:Mix.Database.Entities.Base.TenantEntityBase`1.MixTenant
  id: MixTenant
  parent: Mix.Database.Entities.Base.TenantEntityBase`1
  langs:
  - csharp
  - vb
  name: MixTenant
  nameWithType: TenantEntityBase<TPrimaryKey>.MixTenant
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.MixTenant
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/TenantEntityBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenant
    path: ../../mix.core/src/platform/mix.database/Entities/Base/TenantEntityBase.cs
    startLine: 9
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public MixTenant MixTenant { get; set; }
    parameters: []
    return:
      type: MixTenant
    content.vb: Public Property MixTenant As MixTenant
  overload: Mix.Database.Entities.Base.TenantEntityBase`1.MixTenant*
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).MixTenant
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).MixTenant
references:
- uid: Mix.Database.Entities.Base
  commentId: N:Mix.Database.Entities.Base
  name: Mix.Database.Entities.Base
  nameWithType: Mix.Database.Entities.Base
  fullName: Mix.Database.Entities.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.DisplayName*
  commentId: Overload:Mix.Database.Entities.Base.TenantEntityBase`1.DisplayName
  name: DisplayName
  nameWithType: TenantEntityBase<TPrimaryKey>.DisplayName
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.DisplayName
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).DisplayName
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.Description*
  commentId: Overload:Mix.Database.Entities.Base.TenantEntityBase`1.Description
  name: Description
  nameWithType: TenantEntityBase<TPrimaryKey>.Description
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.Description
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).Description
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).Description
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.MixTenantId*
  commentId: Overload:Mix.Database.Entities.Base.TenantEntityBase`1.MixTenantId
  name: MixTenantId
  nameWithType: TenantEntityBase<TPrimaryKey>.MixTenantId
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.MixTenantId
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).MixTenantId
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Database.Entities.Base.TenantEntityBase`1.MixTenant*
  commentId: Overload:Mix.Database.Entities.Base.TenantEntityBase`1.MixTenant
  name: MixTenant
  nameWithType: TenantEntityBase<TPrimaryKey>.MixTenant
  fullName: Mix.Database.Entities.Base.TenantEntityBase<TPrimaryKey>.MixTenant
  nameWithType.vb: TenantEntityBase(Of TPrimaryKey).MixTenant
  fullName.vb: Mix.Database.Entities.Base.TenantEntityBase(Of TPrimaryKey).MixTenant
- uid: MixTenant
  isExternal: true
  name: MixTenant
  nameWithType: MixTenant
  fullName: MixTenant
