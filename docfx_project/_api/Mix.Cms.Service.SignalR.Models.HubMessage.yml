### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Service.SignalR.Models.HubMessage
  commentId: T:Mix.Cms.Service.SignalR.Models.HubMessage
  id: HubMessage
  parent: Mix.Cms.Service.SignalR.Models
  children:
  - Mix.Cms.Service.SignalR.Models.HubMessage.Connection
  - Mix.Cms.Service.SignalR.Models.HubMessage.Content
  - Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate
  langs:
  - csharp
  - vb
  name: HubMessage
  nameWithType: HubMessage
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: HubMessage
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 23
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: public class HubMessage
    content.vb: Public Class HubMessage
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Service.SignalR.Models.HubMessage.Connection
  commentId: P:Mix.Cms.Service.SignalR.Models.HubMessage.Connection
  id: Connection
  parent: Mix.Cms.Service.SignalR.Models.HubMessage
  langs:
  - csharp
  - vb
  name: Connection
  nameWithType: HubMessage.Connection
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage.Connection
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Connection
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("connection")]

      public MessengerConnection Connection { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Service.SignalR.Models.MessengerConnection
    content.vb: >-
      <JsonProperty("connection")>

      Public Property Connection As MessengerConnection
  overload: Mix.Cms.Service.SignalR.Models.HubMessage.Connection*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: connection
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.Models.HubMessage.Content
  commentId: P:Mix.Cms.Service.SignalR.Models.HubMessage.Content
  id: Content
  parent: Mix.Cms.Service.SignalR.Models.HubMessage
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: HubMessage.Content
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage.Content
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("content")]

      public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("content")>

      Public Property Content As String
  overload: Mix.Cms.Service.SignalR.Models.HubMessage.Content*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: content
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate
  commentId: P:Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate
  id: CreatedDate
  parent: Mix.Cms.Service.SignalR.Models.HubMessage
  langs:
  - csharp
  - vb
  name: CreatedDate
  nameWithType: HubMessage.CreatedDate
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Service.SignalR/Models/HubModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDate
    path: ../../mix.core/src/Mix.Cms.Service.SignalR/Models/HubModels.cs
    startLine: 32
  assemblies:
  - Mix.Cms.Service.SignalR
  namespace: Mix.Cms.Service.SignalR.Models
  syntax:
    content: >-
      [JsonProperty("createdDate")]

      public DateTime CreatedDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: >-
      <JsonProperty("createdDate")>

      Public Property CreatedDate As Date
  overload: Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: createdDate
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Service.SignalR.Models
  commentId: N:Mix.Cms.Service.SignalR.Models
  name: Mix.Cms.Service.SignalR.Models
  nameWithType: Mix.Cms.Service.SignalR.Models
  fullName: Mix.Cms.Service.SignalR.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Service.SignalR.Models.HubMessage.Connection*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubMessage.Connection
  name: Connection
  nameWithType: HubMessage.Connection
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage.Connection
- uid: Mix.Cms.Service.SignalR.Models.MessengerConnection
  commentId: T:Mix.Cms.Service.SignalR.Models.MessengerConnection
  parent: Mix.Cms.Service.SignalR.Models
  name: MessengerConnection
  nameWithType: MessengerConnection
  fullName: Mix.Cms.Service.SignalR.Models.MessengerConnection
- uid: Mix.Cms.Service.SignalR.Models.HubMessage.Content*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubMessage.Content
  name: Content
  nameWithType: HubMessage.Content
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage.Content
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate*
  commentId: Overload:Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate
  name: CreatedDate
  nameWithType: HubMessage.CreatedDate
  fullName: Mix.Cms.Service.SignalR.Models.HubMessage.CreatedDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
