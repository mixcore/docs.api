### YamlMime:ManagedReference
items:
- uid: Mix.Constant.Constants.MixFolders
  commentId: T:Mix.Constant.Constants.MixFolders
  id: MixFolders
  parent: Mix.Constant.Constants
  children:
  - Mix.Constant.Constants.MixFolders.AppConfigFolder
  - Mix.Constant.Constants.MixFolders.ExportFolder
  - Mix.Constant.Constants.MixFolders.ImportFolder
  - Mix.Constant.Constants.MixFolders.JsonDataFolder
  - Mix.Constant.Constants.MixFolders.MixCacheFolder
  - Mix.Constant.Constants.MixFolders.MixContentFolder
  - Mix.Constant.Constants.MixFolders.MixCoreConfigurationFolder
  - Mix.Constant.Constants.MixFolders.MixLogsFolder
  - Mix.Constant.Constants.MixFolders.SharedConfigurationFolder
  - Mix.Constant.Constants.MixFolders.SiteContentAssetsFolder
  - Mix.Constant.Constants.MixFolders.TempFolder
  - Mix.Constant.Constants.MixFolders.TemplatesFolder
  - Mix.Constant.Constants.MixFolders.ThemePackage
  - Mix.Constant.Constants.MixFolders.UploadsFolder
  - Mix.Constant.Constants.MixFolders.WebRootPath
  langs:
  - csharp
  - vb
  name: MixFolders
  nameWithType: MixFolders
  fullName: Mix.Constant.Constants.MixFolders
  type: Class
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixFolders
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 2
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public class MixFolders
    content.vb: Public Class MixFolders
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Constant.Constants.MixFolders.WebRootPath
  commentId: F:Mix.Constant.Constants.MixFolders.WebRootPath
  id: WebRootPath
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: WebRootPath
  nameWithType: MixFolders.WebRootPath
  fullName: Mix.Constant.Constants.MixFolders.WebRootPath
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: WebRootPath
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 4
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string WebRootPath = "wwwroot"
    return:
      type: System.String
    content.vb: Public Const WebRootPath As String = "wwwroot"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.TemplatesFolder
  commentId: F:Mix.Constant.Constants.MixFolders.TemplatesFolder
  id: TemplatesFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: TemplatesFolder
  nameWithType: MixFolders.TemplatesFolder
  fullName: Mix.Constant.Constants.MixFolders.TemplatesFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TemplatesFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 5
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string TemplatesFolder = "Views/Shared/Templates"
    return:
      type: System.String
    content.vb: Public Const TemplatesFolder As String = "Views/Shared/Templates"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.TempFolder
  commentId: F:Mix.Constant.Constants.MixFolders.TempFolder
  id: TempFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: TempFolder
  nameWithType: MixFolders.TempFolder
  fullName: Mix.Constant.Constants.MixFolders.TempFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TempFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 6
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string TempFolder = "MixContent/Temp"
    return:
      type: System.String
    content.vb: Public Const TempFolder As String = "MixContent/Temp"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.ThemePackage
  commentId: F:Mix.Constant.Constants.MixFolders.ThemePackage
  id: ThemePackage
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: ThemePackage
  nameWithType: MixFolders.ThemePackage
  fullName: Mix.Constant.Constants.MixFolders.ThemePackage
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThemePackage
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 7
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ThemePackage = "MixContent/Temp/Themes"
    return:
      type: System.String
    content.vb: Public Const ThemePackage As String = "MixContent/Temp/Themes"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.MixContentFolder
  commentId: F:Mix.Constant.Constants.MixFolders.MixContentFolder
  id: MixContentFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: MixContentFolder
  nameWithType: MixFolders.MixContentFolder
  fullName: Mix.Constant.Constants.MixFolders.MixContentFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixContentFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 8
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string MixContentFolder = "MixContent"
    return:
      type: System.String
    content.vb: Public Const MixContentFolder As String = "MixContent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.AppConfigFolder
  commentId: F:Mix.Constant.Constants.MixFolders.AppConfigFolder
  id: AppConfigFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: AppConfigFolder
  nameWithType: MixFolders.AppConfigFolder
  fullName: Mix.Constant.Constants.MixFolders.AppConfigFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AppConfigFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 9
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string AppConfigFolder = "MixContent/AppConfigs"
    return:
      type: System.String
    content.vb: Public Const AppConfigFolder As String = "MixContent/AppConfigs"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.JsonDataFolder
  commentId: F:Mix.Constant.Constants.MixFolders.JsonDataFolder
  id: JsonDataFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: JsonDataFolder
  nameWithType: MixFolders.JsonDataFolder
  fullName: Mix.Constant.Constants.MixFolders.JsonDataFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JsonDataFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 10
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string JsonDataFolder = "MixContent/Data"
    return:
      type: System.String
    content.vb: Public Const JsonDataFolder As String = "MixContent/Data"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.MixCacheFolder
  commentId: F:Mix.Constant.Constants.MixFolders.MixCacheFolder
  id: MixCacheFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: MixCacheFolder
  nameWithType: MixFolders.MixCacheFolder
  fullName: Mix.Constant.Constants.MixFolders.MixCacheFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCacheFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 11
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string MixCacheFolder = "MixContent/cache"
    return:
      type: System.String
    content.vb: Public Const MixCacheFolder As String = "MixContent/cache"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.MixLogsFolder
  commentId: F:Mix.Constant.Constants.MixFolders.MixLogsFolder
  id: MixLogsFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: MixLogsFolder
  nameWithType: MixFolders.MixLogsFolder
  fullName: Mix.Constant.Constants.MixFolders.MixLogsFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixLogsFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 12
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string MixLogsFolder = "MixContent/logs"
    return:
      type: System.String
    content.vb: Public Const MixLogsFolder As String = "MixContent/logs"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.ExportFolder
  commentId: F:Mix.Constant.Constants.MixFolders.ExportFolder
  id: ExportFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: ExportFolder
  nameWithType: MixFolders.ExportFolder
  fullName: Mix.Constant.Constants.MixFolders.ExportFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExportFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 13
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ExportFolder = "mix-content/exports"
    return:
      type: System.String
    content.vb: Public Const ExportFolder As String = "mix-content/exports"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.ImportFolder
  commentId: F:Mix.Constant.Constants.MixFolders.ImportFolder
  id: ImportFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: ImportFolder
  nameWithType: MixFolders.ImportFolder
  fullName: Mix.Constant.Constants.MixFolders.ImportFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ImportFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 14
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string ImportFolder = "mix-content/imports/themes"
    return:
      type: System.String
    content.vb: Public Const ImportFolder As String = "mix-content/imports/themes"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.UploadsFolder
  commentId: F:Mix.Constant.Constants.MixFolders.UploadsFolder
  id: UploadsFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: UploadsFolder
  nameWithType: MixFolders.UploadsFolder
  fullName: Mix.Constant.Constants.MixFolders.UploadsFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UploadsFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 15
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string UploadsFolder = "mix-content/uploads"
    return:
      type: System.String
    content.vb: Public Const UploadsFolder As String = "mix-content/uploads"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.SiteContentAssetsFolder
  commentId: F:Mix.Constant.Constants.MixFolders.SiteContentAssetsFolder
  id: SiteContentAssetsFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: SiteContentAssetsFolder
  nameWithType: MixFolders.SiteContentAssetsFolder
  fullName: Mix.Constant.Constants.MixFolders.SiteContentAssetsFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SiteContentAssetsFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 16
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string SiteContentAssetsFolder = "mix-content/assets"
    return:
      type: System.String
    content.vb: Public Const SiteContentAssetsFolder As String = "mix-content/assets"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.SharedConfigurationFolder
  commentId: F:Mix.Constant.Constants.MixFolders.SharedConfigurationFolder
  id: SharedConfigurationFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: SharedConfigurationFolder
  nameWithType: MixFolders.SharedConfigurationFolder
  fullName: Mix.Constant.Constants.MixFolders.SharedConfigurationFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SharedConfigurationFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 17
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string SharedConfigurationFolder = "../../shared/MixContent"
    return:
      type: System.String
    content.vb: Public Const SharedConfigurationFolder As String = "../../shared/MixContent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.Constant.Constants.MixFolders.MixCoreConfigurationFolder
  commentId: F:Mix.Constant.Constants.MixFolders.MixCoreConfigurationFolder
  id: MixCoreConfigurationFolder
  parent: Mix.Constant.Constants.MixFolders
  langs:
  - csharp
  - vb
  name: MixCoreConfigurationFolder
  nameWithType: MixFolders.MixCoreConfigurationFolder
  fullName: Mix.Constant.Constants.MixFolders.MixCoreConfigurationFolder
  type: Field
  source:
    remote:
      path: src/platform/mix.constant/Constants/MixFolders.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCoreConfigurationFolder
    path: ../../mix.core/src/platform/mix.constant/Constants/MixFolders.cs
    startLine: 18
  assemblies:
  - mix.constant
  namespace: Mix.Constant.Constants
  syntax:
    content: public const string MixCoreConfigurationFolder = "../../applications/Mixcore/MixContent"
    return:
      type: System.String
    content.vb: Public Const MixCoreConfigurationFolder As String = "../../applications/Mixcore/MixContent"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mix.Constant.Constants
  commentId: N:Mix.Constant.Constants
  name: Mix.Constant.Constants
  nameWithType: Mix.Constant.Constants
  fullName: Mix.Constant.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
