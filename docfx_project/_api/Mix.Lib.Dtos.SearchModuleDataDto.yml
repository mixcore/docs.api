### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Dtos.SearchModuleDataDto
  commentId: T:Mix.Lib.Dtos.SearchModuleDataDto
  id: SearchModuleDataDto
  parent: Mix.Lib.Dtos
  children:
  - Mix.Lib.Dtos.SearchModuleDataDto.#ctor
  - Mix.Lib.Dtos.SearchModuleDataDto.#ctor(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  - Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId
  langs:
  - csharp
  - vb
  name: SearchModuleDataDto
  nameWithType: SearchModuleDataDto
  fullName: Mix.Lib.Dtos.SearchModuleDataDto
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Dtos/SearchModuleDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SearchModuleDataDto
    path: ../../mix.core/src/platform/mix.library/Dtos/SearchModuleDataDto.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: 'public class SearchModuleDataDto : SearchRequestDto'
    content.vb: >-
      Public Class SearchModuleDataDto
          Inherits SearchRequestDto
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Dtos.SearchModuleDataDto.#ctor
  commentId: M:Mix.Lib.Dtos.SearchModuleDataDto.#ctor
  id: '#ctor'
  parent: Mix.Lib.Dtos.SearchModuleDataDto
  langs:
  - csharp
  - vb
  name: SearchModuleDataDto()
  nameWithType: SearchModuleDataDto.SearchModuleDataDto()
  fullName: Mix.Lib.Dtos.SearchModuleDataDto.SearchModuleDataDto()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Dtos/SearchModuleDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Dtos/SearchModuleDataDto.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public SearchModuleDataDto()
    content.vb: Public Sub New
  overload: Mix.Lib.Dtos.SearchModuleDataDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.SearchModuleDataDto.#ctor(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Mix.Lib.Dtos.SearchModuleDataDto.#ctor(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  id: '#ctor(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)'
  parent: Mix.Lib.Dtos.SearchModuleDataDto
  langs:
  - csharp
  - vb
  name: SearchModuleDataDto(SearchRequestDto, HttpRequest)
  nameWithType: SearchModuleDataDto.SearchModuleDataDto(SearchRequestDto, HttpRequest)
  fullName: Mix.Lib.Dtos.SearchModuleDataDto.SearchModuleDataDto(SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Dtos/SearchModuleDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Dtos/SearchModuleDataDto.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public SearchModuleDataDto(SearchRequestDto req, HttpRequest request)
    parameters:
    - id: req
      type: SearchRequestDto
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
    content.vb: Public Sub New(req As SearchRequestDto, request As HttpRequest)
  overload: Mix.Lib.Dtos.SearchModuleDataDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId
  commentId: P:Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId
  id: ModuleContentId
  parent: Mix.Lib.Dtos.SearchModuleDataDto
  langs:
  - csharp
  - vb
  name: ModuleContentId
  nameWithType: SearchModuleDataDto.ModuleContentId
  fullName: Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/SearchModuleDataDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleContentId
    path: ../../mix.core/src/platform/mix.library/Dtos/SearchModuleDataDto.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public int? ModuleContentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property ModuleContentId As Integer?
  overload: Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Dtos
  commentId: N:Mix.Lib.Dtos
  name: Mix.Lib.Dtos
  nameWithType: Mix.Lib.Dtos
  fullName: Mix.Lib.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Dtos.SearchModuleDataDto.#ctor*
  commentId: Overload:Mix.Lib.Dtos.SearchModuleDataDto.#ctor
  name: SearchModuleDataDto
  nameWithType: SearchModuleDataDto.SearchModuleDataDto
  fullName: Mix.Lib.Dtos.SearchModuleDataDto.SearchModuleDataDto
- uid: SearchRequestDto
  isExternal: true
  name: SearchRequestDto
  nameWithType: SearchRequestDto
  fullName: SearchRequestDto
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId*
  commentId: Overload:Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId
  name: ModuleContentId
  nameWithType: SearchModuleDataDto.ModuleContentId
  fullName: Mix.Lib.Dtos.SearchModuleDataDto.ModuleContentId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
