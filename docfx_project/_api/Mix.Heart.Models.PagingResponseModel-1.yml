### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Models.PagingResponseModel`1
  commentId: T:Mix.Heart.Models.PagingResponseModel`1
  id: PagingResponseModel`1
  parent: Mix.Heart.Models
  children:
  - Mix.Heart.Models.PagingResponseModel`1.#ctor
  - Mix.Heart.Models.PagingResponseModel`1.#ctor(System.Collections.Generic.IEnumerable{`0},Mix.Heart.Models.PagingModel)
  - Mix.Heart.Models.PagingResponseModel`1.Items
  - Mix.Heart.Models.PagingResponseModel`1.PagingData
  langs:
  - csharp
  - vb
  name: PagingResponseModel<T>
  nameWithType: PagingResponseModel<T>
  fullName: Mix.Heart.Models.PagingResponseModel<T>
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Model/PagingResponseModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: PagingResponseModel
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingResponseModel.cs
    startLine: 4
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public class PagingResponseModel<T>
    typeParameters:
    - id: T
    content.vb: Public Class PagingResponseModel(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: PagingResponseModel(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T)
  name.vb: PagingResponseModel(Of T)
- uid: Mix.Heart.Models.PagingResponseModel`1.#ctor
  commentId: M:Mix.Heart.Models.PagingResponseModel`1.#ctor
  id: '#ctor'
  parent: Mix.Heart.Models.PagingResponseModel`1
  langs:
  - csharp
  - vb
  name: PagingResponseModel()
  nameWithType: PagingResponseModel<T>.PagingResponseModel()
  fullName: Mix.Heart.Models.PagingResponseModel<T>.PagingResponseModel()
  type: Constructor
  source:
    remote:
      path: src/Mix.Heart/Model/PagingResponseModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: .ctor
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingResponseModel.cs
    startLine: 6
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public PagingResponseModel()
    content.vb: Public Sub New
  overload: Mix.Heart.Models.PagingResponseModel`1.#ctor*
  nameWithType.vb: PagingResponseModel(Of T).PagingResponseModel()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).PagingResponseModel()
- uid: Mix.Heart.Models.PagingResponseModel`1.#ctor(System.Collections.Generic.IEnumerable{`0},Mix.Heart.Models.PagingModel)
  commentId: M:Mix.Heart.Models.PagingResponseModel`1.#ctor(System.Collections.Generic.IEnumerable{`0},Mix.Heart.Models.PagingModel)
  id: '#ctor(System.Collections.Generic.IEnumerable{`0},Mix.Heart.Models.PagingModel)'
  parent: Mix.Heart.Models.PagingResponseModel`1
  langs:
  - csharp
  - vb
  name: PagingResponseModel(IEnumerable<T>, PagingModel)
  nameWithType: PagingResponseModel<T>.PagingResponseModel(IEnumerable<T>, PagingModel)
  fullName: Mix.Heart.Models.PagingResponseModel<T>.PagingResponseModel(System.Collections.Generic.IEnumerable<T>, Mix.Heart.Models.PagingModel)
  type: Constructor
  source:
    remote:
      path: src/Mix.Heart/Model/PagingResponseModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: .ctor
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingResponseModel.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public PagingResponseModel(IEnumerable<T> data, PagingModel pagingData)
    parameters:
    - id: data
      type: System.Collections.Generic.IEnumerable{{T}}
    - id: pagingData
      type: Mix.Heart.Models.PagingModel
    content.vb: Public Sub New(data As IEnumerable(Of T), pagingData As PagingModel)
  overload: Mix.Heart.Models.PagingResponseModel`1.#ctor*
  nameWithType.vb: PagingResponseModel(Of T).PagingResponseModel(IEnumerable(Of T), PagingModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).PagingResponseModel(System.Collections.Generic.IEnumerable(Of T), Mix.Heart.Models.PagingModel)
  name.vb: PagingResponseModel(IEnumerable(Of T), PagingModel)
- uid: Mix.Heart.Models.PagingResponseModel`1.Items
  commentId: P:Mix.Heart.Models.PagingResponseModel`1.Items
  id: Items
  parent: Mix.Heart.Models.PagingResponseModel`1
  langs:
  - csharp
  - vb
  name: Items
  nameWithType: PagingResponseModel<T>.Items
  fullName: Mix.Heart.Models.PagingResponseModel<T>.Items
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingResponseModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Items
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingResponseModel.cs
    startLine: 15
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public IEnumerable<T> Items { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{{T}}
    content.vb: Public Property Items As IEnumerable(Of T)
  overload: Mix.Heart.Models.PagingResponseModel`1.Items*
  nameWithType.vb: PagingResponseModel(Of T).Items
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).Items
- uid: Mix.Heart.Models.PagingResponseModel`1.PagingData
  commentId: P:Mix.Heart.Models.PagingResponseModel`1.PagingData
  id: PagingData
  parent: Mix.Heart.Models.PagingResponseModel`1
  langs:
  - csharp
  - vb
  name: PagingData
  nameWithType: PagingResponseModel<T>.PagingData
  fullName: Mix.Heart.Models.PagingResponseModel<T>.PagingData
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingResponseModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: PagingData
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingResponseModel.cs
    startLine: 16
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public PagingModel PagingData { get; set; }
    parameters: []
    return:
      type: Mix.Heart.Models.PagingModel
    content.vb: Public Property PagingData As PagingModel
  overload: Mix.Heart.Models.PagingResponseModel`1.PagingData*
  nameWithType.vb: PagingResponseModel(Of T).PagingData
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).PagingData
references:
- uid: Mix.Heart.Models
  commentId: N:Mix.Heart.Models
  name: Mix.Heart.Models
  nameWithType: Mix.Heart.Models
  fullName: Mix.Heart.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.Models.PagingResponseModel`1.#ctor*
  commentId: Overload:Mix.Heart.Models.PagingResponseModel`1.#ctor
  name: PagingResponseModel
  nameWithType: PagingResponseModel<T>.PagingResponseModel
  fullName: Mix.Heart.Models.PagingResponseModel<T>.PagingResponseModel
  nameWithType.vb: PagingResponseModel(Of T).PagingResponseModel
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).PagingResponseModel
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Models.PagingModel
  commentId: T:Mix.Heart.Models.PagingModel
  parent: Mix.Heart.Models
  name: PagingModel
  nameWithType: PagingModel
  fullName: Mix.Heart.Models.PagingModel
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Heart.Models.PagingResponseModel`1.Items*
  commentId: Overload:Mix.Heart.Models.PagingResponseModel`1.Items
  name: Items
  nameWithType: PagingResponseModel<T>.Items
  fullName: Mix.Heart.Models.PagingResponseModel<T>.Items
  nameWithType.vb: PagingResponseModel(Of T).Items
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).Items
- uid: Mix.Heart.Models.PagingResponseModel`1.PagingData*
  commentId: Overload:Mix.Heart.Models.PagingResponseModel`1.PagingData
  name: PagingData
  nameWithType: PagingResponseModel<T>.PagingData
  fullName: Mix.Heart.Models.PagingResponseModel<T>.PagingData
  nameWithType.vb: PagingResponseModel(Of T).PagingData
  fullName.vb: Mix.Heart.Models.PagingResponseModel(Of T).PagingData
