### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.AuditLog.AuditLogDbContext
  commentId: T:Mix.Database.Entities.AuditLog.AuditLogDbContext
  id: AuditLogDbContext
  parent: Mix.Database.Entities.AuditLog
  children:
  - Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog
  - Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring(DbContextOptionsBuilder)
  langs:
  - csharp
  - vb
  name: AuditLogDbContext
  nameWithType: AuditLogDbContext
  fullName: Mix.Database.Entities.AuditLog.AuditLogDbContext
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/_AuditLogDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AuditLogDbContext
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/_AuditLogDbContext.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: 'public class AuditLogDbContext : DbContext'
    content.vb: >-
      Public Class AuditLogDbContext
          Inherits DbContext
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring(DbContextOptionsBuilder)
  commentId: M:Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring(DbContextOptionsBuilder)
  id: OnConfiguring(DbContextOptionsBuilder)
  parent: Mix.Database.Entities.AuditLog.AuditLogDbContext
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: AuditLogDbContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring(DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/_AuditLogDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: OnConfiguring
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/_AuditLogDbContext.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overload: Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog
  commentId: P:Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog
  id: AuditLog
  parent: Mix.Database.Entities.AuditLog.AuditLogDbContext
  langs:
  - csharp
  - vb
  name: AuditLog
  nameWithType: AuditLogDbContext.AuditLog
  fullName: Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/AuditLog/_AuditLogDbContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AuditLog
    path: ../../mix.core/src/platform/mix.database/Entities/AuditLog/_AuditLogDbContext.cs
    startLine: 13
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.AuditLog
  syntax:
    content: public virtual DbSet<AuditLog> AuditLog { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.AuditLog.AuditLog}
    content.vb: Public Overridable Property AuditLog As DbSet(Of AuditLog)
  overload: Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Database.Entities.AuditLog
  commentId: N:Mix.Database.Entities.AuditLog
  name: Mix.Database.Entities.AuditLog
  nameWithType: Mix.Database.Entities.AuditLog
  fullName: Mix.Database.Entities.AuditLog
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring
  name: OnConfiguring
  nameWithType: AuditLogDbContext.OnConfiguring
  fullName: Mix.Database.Entities.AuditLog.AuditLogDbContext.OnConfiguring
- uid: DbContextOptionsBuilder
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: DbContextOptionsBuilder
- uid: Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog*
  commentId: Overload:Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog
  name: AuditLog
  nameWithType: AuditLogDbContext.AuditLog
  fullName: Mix.Database.Entities.AuditLog.AuditLogDbContext.AuditLog
- uid: DbSet{Mix.Database.Entities.AuditLog.AuditLog}
  commentId: '!:DbSet{Mix.Database.Entities.AuditLog.AuditLog}'
  definition: DbSet`1
  name: DbSet<AuditLog>
  nameWithType: DbSet<AuditLog>
  fullName: DbSet<Mix.Database.Entities.AuditLog.AuditLog>
  nameWithType.vb: DbSet(Of AuditLog)
  fullName.vb: DbSet(Of Mix.Database.Entities.AuditLog.AuditLog)
  name.vb: DbSet(Of AuditLog)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.AuditLog.AuditLog
    name: AuditLog
    nameWithType: AuditLog
    fullName: Mix.Database.Entities.AuditLog.AuditLog
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.AuditLog.AuditLog
    name: AuditLog
    nameWithType: AuditLog
    fullName: Mix.Database.Entities.AuditLog.AuditLog
  - name: )
    nameWithType: )
    fullName: )
- uid: DbSet`1
  isExternal: true
  name: DbSet<>
  nameWithType: DbSet<>
  fullName: DbSet<>
  nameWithType.vb: DbSet(Of )
  fullName.vb: DbSet(Of )
  name.vb: DbSet(Of )
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
