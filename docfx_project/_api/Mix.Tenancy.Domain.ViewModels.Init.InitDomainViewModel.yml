### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel
  commentId: T:Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel
  id: InitDomainViewModel
  parent: Mix.Tenancy.Domain.ViewModels.Init
  children:
  - Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host
  - Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  langs:
  - csharp
  - vb
  name: InitDomainViewModel
  nameWithType: InitDomainViewModel
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitDomainViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDomainViewModel
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitDomainViewModel.cs
    startLine: 3
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: 'public class InitDomainViewModel : TenantDataViewModelBase<MixCmsContext, MixDomain, int, InitDomainViewModel>'
    content.vb: >-
      Public Class InitDomainViewModel
          Inherits TenantDataViewModelBase(Of MixCmsContext, MixDomain, Integer, InitDomainViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host
  id: Host
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel
  langs:
  - csharp
  - vb
  name: Host
  nameWithType: InitDomainViewModel.Host
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitDomainViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Host
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitDomainViewModel.cs
    startLine: 5
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public string Host { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Host As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  id: InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel
  langs:
  - csharp
  - vb
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: InitDomainViewModel.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitDomainViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDefaultValues
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitDomainViewModel.cs
    startLine: 6
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public override void InitDefaultValues(string language = null, int? DomainId = default(int? ))
    parameters:
    - id: language
      type: System.String
    - id: DomainId
      type: System.Nullable{System.Int32}
    content.vb: Public Overrides Sub InitDefaultValues(language As String = Nothing, DomainId As Integer? = Nothing)
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues*
  nameWithType.vb: InitDomainViewModel.InitDefaultValues(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
references:
- uid: Mix.Tenancy.Domain.ViewModels.Init
  commentId: N:Mix.Tenancy.Domain.ViewModels.Init
  name: Mix.Tenancy.Domain.ViewModels.Init
  nameWithType: Mix.Tenancy.Domain.ViewModels.Init
  fullName: Mix.Tenancy.Domain.ViewModels.Init
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host
  name: Host
  nameWithType: InitDomainViewModel.Host
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.Host
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues
  name: InitDefaultValues
  nameWithType: InitDomainViewModel.InitDefaultValues
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitDomainViewModel.InitDefaultValues
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
