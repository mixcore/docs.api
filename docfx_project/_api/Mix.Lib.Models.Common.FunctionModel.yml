### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.Common.FunctionModel
  commentId: T:Mix.Lib.Models.Common.FunctionModel
  id: FunctionModel
  parent: Mix.Lib.Models.Common
  children:
  - Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind,System.String,System.String)
  - Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind,System.String,System.String,System.String)
  - Mix.Lib.Models.Common.FunctionModel.FieldName
  - Mix.Lib.Models.Common.FunctionModel.MaxValue
  - Mix.Lib.Models.Common.FunctionModel.MinValue
  - Mix.Lib.Models.Common.FunctionModel.Rule
  - Mix.Lib.Models.Common.FunctionModel.Value
  langs:
  - csharp
  - vb
  name: FunctionModel
  nameWithType: FunctionModel
  fullName: Mix.Lib.Models.Common.FunctionModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FunctionModel
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public class FunctionModel
    content.vb: Public Class FunctionModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.Common.FunctionModel.FieldName
  commentId: P:Mix.Lib.Models.Common.FunctionModel.FieldName
  id: FieldName
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: FieldName
  nameWithType: FunctionModel.FieldName
  fullName: Mix.Lib.Models.Common.FunctionModel.FieldName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FieldName
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string FieldName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FieldName As String
  overload: Mix.Lib.Models.Common.FunctionModel.FieldName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.FunctionModel.Rule
  commentId: P:Mix.Lib.Models.Common.FunctionModel.Rule
  id: Rule
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: Rule
  nameWithType: FunctionModel.Rule
  fullName: Mix.Lib.Models.Common.FunctionModel.Rule
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Rule
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public MixCompareOperatorKind Rule { get; set; }
    parameters: []
    return:
      type: MixCompareOperatorKind
    content.vb: Public Property Rule As MixCompareOperatorKind
  overload: Mix.Lib.Models.Common.FunctionModel.Rule*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.FunctionModel.Value
  commentId: P:Mix.Lib.Models.Common.FunctionModel.Value
  id: Value
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: FunctionModel.Value
  fullName: Mix.Lib.Models.Common.FunctionModel.Value
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Value
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Mix.Lib.Models.Common.FunctionModel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.FunctionModel.MinValue
  commentId: P:Mix.Lib.Models.Common.FunctionModel.MinValue
  id: MinValue
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: MinValue
  nameWithType: FunctionModel.MinValue
  fullName: Mix.Lib.Models.Common.FunctionModel.MinValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MinValue
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string MinValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MinValue As String
  overload: Mix.Lib.Models.Common.FunctionModel.MinValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.FunctionModel.MaxValue
  commentId: P:Mix.Lib.Models.Common.FunctionModel.MaxValue
  id: MaxValue
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: MaxValue
  nameWithType: FunctionModel.MaxValue
  fullName: Mix.Lib.Models.Common.FunctionModel.MaxValue
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MaxValue
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string MaxValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MaxValue As String
  overload: Mix.Lib.Models.Common.FunctionModel.MaxValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind,System.String,System.String)
  commentId: M:Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind,System.String,System.String)
  id: Create(MixCompareOperatorKind,System.String,System.String)
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: Create(MixCompareOperatorKind, String, String)
  nameWithType: FunctionModel.Create(MixCompareOperatorKind, String, String)
  fullName: Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Create
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public static FunctionModel Create(MixCompareOperatorKind rule, string fieldName, string value)
    parameters:
    - id: rule
      type: MixCompareOperatorKind
    - id: fieldName
      type: System.String
    - id: value
      type: System.String
    return:
      type: Mix.Lib.Models.Common.FunctionModel
    content.vb: Public Shared Function Create(rule As MixCompareOperatorKind, fieldName As String, value As String) As FunctionModel
  overload: Mix.Lib.Models.Common.FunctionModel.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind,System.String,System.String,System.String)
  commentId: M:Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind,System.String,System.String,System.String)
  id: Create(MixCompareOperatorKind,System.String,System.String,System.String)
  parent: Mix.Lib.Models.Common.FunctionModel
  langs:
  - csharp
  - vb
  name: Create(MixCompareOperatorKind, String, String, String)
  nameWithType: FunctionModel.Create(MixCompareOperatorKind, String, String, String)
  fullName: Mix.Lib.Models.Common.FunctionModel.Create(MixCompareOperatorKind, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Models/Common/FunctionModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Create
    path: ../../mix.core/src/platform/mix.library/Models/Common/FunctionModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public static FunctionModel Create(MixCompareOperatorKind operatorKind, string fieldName, string minValue = "", string maxValue = "")
    parameters:
    - id: operatorKind
      type: MixCompareOperatorKind
    - id: fieldName
      type: System.String
    - id: minValue
      type: System.String
    - id: maxValue
      type: System.String
    return:
      type: Mix.Lib.Models.Common.FunctionModel
    content.vb: Public Shared Function Create(operatorKind As MixCompareOperatorKind, fieldName As String, minValue As String = "", maxValue As String = "") As FunctionModel
  overload: Mix.Lib.Models.Common.FunctionModel.Create*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Lib.Models.Common
  commentId: N:Mix.Lib.Models.Common
  name: Mix.Lib.Models.Common
  nameWithType: Mix.Lib.Models.Common
  fullName: Mix.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.Common.FunctionModel.FieldName*
  commentId: Overload:Mix.Lib.Models.Common.FunctionModel.FieldName
  name: FieldName
  nameWithType: FunctionModel.FieldName
  fullName: Mix.Lib.Models.Common.FunctionModel.FieldName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Models.Common.FunctionModel.Rule*
  commentId: Overload:Mix.Lib.Models.Common.FunctionModel.Rule
  name: Rule
  nameWithType: FunctionModel.Rule
  fullName: Mix.Lib.Models.Common.FunctionModel.Rule
- uid: MixCompareOperatorKind
  isExternal: true
  name: MixCompareOperatorKind
  nameWithType: MixCompareOperatorKind
  fullName: MixCompareOperatorKind
- uid: Mix.Lib.Models.Common.FunctionModel.Value*
  commentId: Overload:Mix.Lib.Models.Common.FunctionModel.Value
  name: Value
  nameWithType: FunctionModel.Value
  fullName: Mix.Lib.Models.Common.FunctionModel.Value
- uid: Mix.Lib.Models.Common.FunctionModel.MinValue*
  commentId: Overload:Mix.Lib.Models.Common.FunctionModel.MinValue
  name: MinValue
  nameWithType: FunctionModel.MinValue
  fullName: Mix.Lib.Models.Common.FunctionModel.MinValue
- uid: Mix.Lib.Models.Common.FunctionModel.MaxValue*
  commentId: Overload:Mix.Lib.Models.Common.FunctionModel.MaxValue
  name: MaxValue
  nameWithType: FunctionModel.MaxValue
  fullName: Mix.Lib.Models.Common.FunctionModel.MaxValue
- uid: Mix.Lib.Models.Common.FunctionModel.Create*
  commentId: Overload:Mix.Lib.Models.Common.FunctionModel.Create
  name: Create
  nameWithType: FunctionModel.Create
  fullName: Mix.Lib.Models.Common.FunctionModel.Create
- uid: Mix.Lib.Models.Common.FunctionModel
  commentId: T:Mix.Lib.Models.Common.FunctionModel
  parent: Mix.Lib.Models.Common
  name: FunctionModel
  nameWithType: FunctionModel
  fullName: Mix.Lib.Models.Common.FunctionModel
