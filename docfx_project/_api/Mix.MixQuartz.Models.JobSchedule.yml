### YamlMime:ManagedReference
items:
- uid: Mix.MixQuartz.Models.JobSchedule
  commentId: T:Mix.MixQuartz.Models.JobSchedule
  id: JobSchedule
  parent: Mix.MixQuartz.Models
  children:
  - Mix.MixQuartz.Models.JobSchedule.#ctor
  - Mix.MixQuartz.Models.JobSchedule.#ctor(ITrigger,TriggerState)
  - Mix.MixQuartz.Models.JobSchedule.#ctor(System.Type)
  - Mix.MixQuartz.Models.JobSchedule.CronExpression
  - Mix.MixQuartz.Models.JobSchedule.Description
  - Mix.MixQuartz.Models.JobSchedule.EndAt
  - Mix.MixQuartz.Models.JobSchedule.GroupName
  - Mix.MixQuartz.Models.JobSchedule.Interval
  - Mix.MixQuartz.Models.JobSchedule.IntervalType
  - Mix.MixQuartz.Models.JobSchedule.IsStartNow
  - Mix.MixQuartz.Models.JobSchedule.JobData
  - Mix.MixQuartz.Models.JobSchedule.JobKey
  - Mix.MixQuartz.Models.JobSchedule.JobName
  - Mix.MixQuartz.Models.JobSchedule.Key
  - Mix.MixQuartz.Models.JobSchedule.Name
  - Mix.MixQuartz.Models.JobSchedule.RepeatCount
  - Mix.MixQuartz.Models.JobSchedule.StartAt
  - Mix.MixQuartz.Models.JobSchedule.State
  - Mix.MixQuartz.Models.JobSchedule.Trigger
  langs:
  - csharp
  - vb
  name: JobSchedule
  nameWithType: JobSchedule
  fullName: Mix.MixQuartz.Models.JobSchedule
  type: Class
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JobSchedule
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 5
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public class JobSchedule
    content.vb: Public Class JobSchedule
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.MixQuartz.Models.JobSchedule.#ctor
  commentId: M:Mix.MixQuartz.Models.JobSchedule.#ctor
  id: '#ctor'
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: JobSchedule()
  nameWithType: JobSchedule.JobSchedule()
  fullName: Mix.MixQuartz.Models.JobSchedule.JobSchedule()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 7
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public JobSchedule()
    content.vb: Public Sub New
  overload: Mix.MixQuartz.Models.JobSchedule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.#ctor(System.Type)
  commentId: M:Mix.MixQuartz.Models.JobSchedule.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: JobSchedule(Type)
  nameWithType: JobSchedule.JobSchedule(Type)
  fullName: Mix.MixQuartz.Models.JobSchedule.JobSchedule(System.Type)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 11
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public JobSchedule(Type jobType)
    parameters:
    - id: jobType
      type: System.Type
    content.vb: Public Sub New(jobType As Type)
  overload: Mix.MixQuartz.Models.JobSchedule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.#ctor(ITrigger,TriggerState)
  commentId: M:Mix.MixQuartz.Models.JobSchedule.#ctor(ITrigger,TriggerState)
  id: '#ctor(ITrigger,TriggerState)'
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: JobSchedule(ITrigger, TriggerState)
  nameWithType: JobSchedule.JobSchedule(ITrigger, TriggerState)
  fullName: Mix.MixQuartz.Models.JobSchedule.JobSchedule(ITrigger, TriggerState)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 17
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public JobSchedule(ITrigger trigger, TriggerState state)
    parameters:
    - id: trigger
      type: ITrigger
    - id: state
      type: TriggerState
    content.vb: Public Sub New(trigger As ITrigger, state As TriggerState)
  overload: Mix.MixQuartz.Models.JobSchedule.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.Trigger
  commentId: P:Mix.MixQuartz.Models.JobSchedule.Trigger
  id: Trigger
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: Trigger
  nameWithType: JobSchedule.Trigger
  fullName: Mix.MixQuartz.Models.JobSchedule.Trigger
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Trigger
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 27
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public ITrigger Trigger { get; set; }
    parameters: []
    return:
      type: ITrigger
    content.vb: Public Property Trigger As ITrigger
  overload: Mix.MixQuartz.Models.JobSchedule.Trigger*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.Key
  commentId: P:Mix.MixQuartz.Models.JobSchedule.Key
  id: Key
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: JobSchedule.Key
  fullName: Mix.MixQuartz.Models.JobSchedule.Key
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Key
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 28
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public TriggerKey Key { get; set; }
    parameters: []
    return:
      type: TriggerKey
    content.vb: Public Property Key As TriggerKey
  overload: Mix.MixQuartz.Models.JobSchedule.Key*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.Name
  commentId: P:Mix.MixQuartz.Models.JobSchedule.Name
  id: Name
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: JobSchedule.Name
  fullName: Mix.MixQuartz.Models.JobSchedule.Name
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 29
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.MixQuartz.Models.JobSchedule.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.JobKey
  commentId: P:Mix.MixQuartz.Models.JobSchedule.JobKey
  id: JobKey
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: JobKey
  nameWithType: JobSchedule.JobKey
  fullName: Mix.MixQuartz.Models.JobSchedule.JobKey
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JobKey
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 30
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public JobKey JobKey { get; set; }
    parameters: []
    return:
      type: JobKey
    content.vb: Public Property JobKey As JobKey
  overload: Mix.MixQuartz.Models.JobSchedule.JobKey*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.State
  commentId: P:Mix.MixQuartz.Models.JobSchedule.State
  id: State
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: State
  nameWithType: JobSchedule.State
  fullName: Mix.MixQuartz.Models.JobSchedule.State
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: State
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 31
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public TriggerState State { get; set; }
    parameters: []
    return:
      type: TriggerState
    content.vb: Public Property State As TriggerState
  overload: Mix.MixQuartz.Models.JobSchedule.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.JobData
  commentId: P:Mix.MixQuartz.Models.JobSchedule.JobData
  id: JobData
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: JobData
  nameWithType: JobSchedule.JobData
  fullName: Mix.MixQuartz.Models.JobSchedule.JobData
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JobData
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 33
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public Dictionary<string, object> JobData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public Property JobData As Dictionary(Of String, Object)
  overload: Mix.MixQuartz.Models.JobSchedule.JobData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.CronExpression
  commentId: P:Mix.MixQuartz.Models.JobSchedule.CronExpression
  id: CronExpression
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: CronExpression
  nameWithType: JobSchedule.CronExpression
  fullName: Mix.MixQuartz.Models.JobSchedule.CronExpression
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CronExpression
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 34
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public string CronExpression { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CronExpression As String
  overload: Mix.MixQuartz.Models.JobSchedule.CronExpression*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.GroupName
  commentId: P:Mix.MixQuartz.Models.JobSchedule.GroupName
  id: GroupName
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: GroupName
  nameWithType: JobSchedule.GroupName
  fullName: Mix.MixQuartz.Models.JobSchedule.GroupName
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GroupName
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 35
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public string GroupName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property GroupName As String
  overload: Mix.MixQuartz.Models.JobSchedule.GroupName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.JobName
  commentId: P:Mix.MixQuartz.Models.JobSchedule.JobName
  id: JobName
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: JobName
  nameWithType: JobSchedule.JobName
  fullName: Mix.MixQuartz.Models.JobSchedule.JobName
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JobName
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 36
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public string JobName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JobName As String
  overload: Mix.MixQuartz.Models.JobSchedule.JobName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.Description
  commentId: P:Mix.MixQuartz.Models.JobSchedule.Description
  id: Description
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: JobSchedule.Description
  fullName: Mix.MixQuartz.Models.JobSchedule.Description
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 37
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Mix.MixQuartz.Models.JobSchedule.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.StartAt
  commentId: P:Mix.MixQuartz.Models.JobSchedule.StartAt
  id: StartAt
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: StartAt
  nameWithType: JobSchedule.StartAt
  fullName: Mix.MixQuartz.Models.JobSchedule.StartAt
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StartAt
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 38
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public DateTime? StartAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property StartAt As Date?
  overload: Mix.MixQuartz.Models.JobSchedule.StartAt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.EndAt
  commentId: P:Mix.MixQuartz.Models.JobSchedule.EndAt
  id: EndAt
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: EndAt
  nameWithType: JobSchedule.EndAt
  fullName: Mix.MixQuartz.Models.JobSchedule.EndAt
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EndAt
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 39
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public DateTime? EndAt { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property EndAt As Date?
  overload: Mix.MixQuartz.Models.JobSchedule.EndAt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.IsStartNow
  commentId: P:Mix.MixQuartz.Models.JobSchedule.IsStartNow
  id: IsStartNow
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: IsStartNow
  nameWithType: JobSchedule.IsStartNow
  fullName: Mix.MixQuartz.Models.JobSchedule.IsStartNow
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsStartNow
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 40
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public bool IsStartNow { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsStartNow As Boolean
  overload: Mix.MixQuartz.Models.JobSchedule.IsStartNow*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.Interval
  commentId: P:Mix.MixQuartz.Models.JobSchedule.Interval
  id: Interval
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: Interval
  nameWithType: JobSchedule.Interval
  fullName: Mix.MixQuartz.Models.JobSchedule.Interval
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Interval
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 41
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public int? Interval { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Interval As Integer?
  overload: Mix.MixQuartz.Models.JobSchedule.Interval*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.IntervalType
  commentId: P:Mix.MixQuartz.Models.JobSchedule.IntervalType
  id: IntervalType
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: IntervalType
  nameWithType: JobSchedule.IntervalType
  fullName: Mix.MixQuartz.Models.JobSchedule.IntervalType
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IntervalType
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 42
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public MixIntevalType? IntervalType { get; set; }
    parameters: []
    return:
      type: System.Nullable{MixIntevalType}
    content.vb: Public Property IntervalType As MixIntevalType?
  overload: Mix.MixQuartz.Models.JobSchedule.IntervalType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.MixQuartz.Models.JobSchedule.RepeatCount
  commentId: P:Mix.MixQuartz.Models.JobSchedule.RepeatCount
  id: RepeatCount
  parent: Mix.MixQuartz.Models.JobSchedule
  langs:
  - csharp
  - vb
  name: RepeatCount
  nameWithType: JobSchedule.RepeatCount
  fullName: Mix.MixQuartz.Models.JobSchedule.RepeatCount
  type: Property
  source:
    remote:
      path: src/platform/mix.quartz/Models/JobSchedule.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RepeatCount
    path: ../../mix.core/src/platform/mix.quartz/Models/JobSchedule.cs
    startLine: 43
  assemblies:
  - mix.quartz
  namespace: Mix.MixQuartz.Models
  syntax:
    content: public int? RepeatCount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property RepeatCount As Integer?
  overload: Mix.MixQuartz.Models.JobSchedule.RepeatCount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.MixQuartz.Models
  commentId: N:Mix.MixQuartz.Models
  name: Mix.MixQuartz.Models
  nameWithType: Mix.MixQuartz.Models
  fullName: Mix.MixQuartz.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.MixQuartz.Models.JobSchedule.#ctor*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.#ctor
  name: JobSchedule
  nameWithType: JobSchedule.JobSchedule
  fullName: Mix.MixQuartz.Models.JobSchedule.JobSchedule
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: ITrigger
  isExternal: true
  name: ITrigger
  nameWithType: ITrigger
  fullName: ITrigger
- uid: TriggerState
  isExternal: true
  name: TriggerState
  nameWithType: TriggerState
  fullName: TriggerState
- uid: Mix.MixQuartz.Models.JobSchedule.Trigger*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.Trigger
  name: Trigger
  nameWithType: JobSchedule.Trigger
  fullName: Mix.MixQuartz.Models.JobSchedule.Trigger
- uid: Mix.MixQuartz.Models.JobSchedule.Key*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.Key
  name: Key
  nameWithType: JobSchedule.Key
  fullName: Mix.MixQuartz.Models.JobSchedule.Key
- uid: TriggerKey
  commentId: '!:TriggerKey'
  isExternal: true
  name: TriggerKey
  nameWithType: TriggerKey
  fullName: TriggerKey
- uid: Mix.MixQuartz.Models.JobSchedule.Name*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.Name
  name: Name
  nameWithType: JobSchedule.Name
  fullName: Mix.MixQuartz.Models.JobSchedule.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.MixQuartz.Models.JobSchedule.JobKey*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.JobKey
  name: JobKey
  nameWithType: JobSchedule.JobKey
  fullName: Mix.MixQuartz.Models.JobSchedule.JobKey
- uid: JobKey
  commentId: '!:JobKey'
  isExternal: true
  name: JobKey
  nameWithType: JobKey
  fullName: JobKey
- uid: Mix.MixQuartz.Models.JobSchedule.State*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.State
  name: State
  nameWithType: JobSchedule.State
  fullName: Mix.MixQuartz.Models.JobSchedule.State
- uid: Mix.MixQuartz.Models.JobSchedule.JobData*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.JobData
  name: JobData
  nameWithType: JobSchedule.JobData
  fullName: Mix.MixQuartz.Models.JobSchedule.JobData
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, Object>
  nameWithType: Dictionary<String, Object>
  fullName: System.Collections.Generic.Dictionary<System.String, System.Object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.MixQuartz.Models.JobSchedule.CronExpression*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.CronExpression
  name: CronExpression
  nameWithType: JobSchedule.CronExpression
  fullName: Mix.MixQuartz.Models.JobSchedule.CronExpression
- uid: Mix.MixQuartz.Models.JobSchedule.GroupName*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.GroupName
  name: GroupName
  nameWithType: JobSchedule.GroupName
  fullName: Mix.MixQuartz.Models.JobSchedule.GroupName
- uid: Mix.MixQuartz.Models.JobSchedule.JobName*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.JobName
  name: JobName
  nameWithType: JobSchedule.JobName
  fullName: Mix.MixQuartz.Models.JobSchedule.JobName
- uid: Mix.MixQuartz.Models.JobSchedule.Description*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.Description
  name: Description
  nameWithType: JobSchedule.Description
  fullName: Mix.MixQuartz.Models.JobSchedule.Description
- uid: Mix.MixQuartz.Models.JobSchedule.StartAt*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.StartAt
  name: StartAt
  nameWithType: JobSchedule.StartAt
  fullName: Mix.MixQuartz.Models.JobSchedule.StartAt
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.MixQuartz.Models.JobSchedule.EndAt*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.EndAt
  name: EndAt
  nameWithType: JobSchedule.EndAt
  fullName: Mix.MixQuartz.Models.JobSchedule.EndAt
- uid: Mix.MixQuartz.Models.JobSchedule.IsStartNow*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.IsStartNow
  name: IsStartNow
  nameWithType: JobSchedule.IsStartNow
  fullName: Mix.MixQuartz.Models.JobSchedule.IsStartNow
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.MixQuartz.Models.JobSchedule.Interval*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.Interval
  name: Interval
  nameWithType: JobSchedule.Interval
  fullName: Mix.MixQuartz.Models.JobSchedule.Interval
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.MixQuartz.Models.JobSchedule.IntervalType*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.IntervalType
  name: IntervalType
  nameWithType: JobSchedule.IntervalType
  fullName: Mix.MixQuartz.Models.JobSchedule.IntervalType
- uid: System.Nullable{MixIntevalType}
  commentId: T:System.Nullable{MixIntevalType}
  parent: System
  definition: System.Nullable`1
  name: Nullable<MixIntevalType>
  nameWithType: Nullable<MixIntevalType>
  fullName: System.Nullable<MixIntevalType>
  nameWithType.vb: Nullable(Of MixIntevalType)
  fullName.vb: System.Nullable(Of MixIntevalType)
  name.vb: Nullable(Of MixIntevalType)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixIntevalType
    name: MixIntevalType
    nameWithType: MixIntevalType
    fullName: MixIntevalType
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixIntevalType
    name: MixIntevalType
    nameWithType: MixIntevalType
    fullName: MixIntevalType
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.MixQuartz.Models.JobSchedule.RepeatCount*
  commentId: Overload:Mix.MixQuartz.Models.JobSchedule.RepeatCount
  name: RepeatCount
  nameWithType: JobSchedule.RepeatCount
  fullName: Mix.MixQuartz.Models.JobSchedule.RepeatCount
