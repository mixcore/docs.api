### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Helpers.RSAEncryptionHelper
  commentId: T:Mix.Heart.Helpers.RSAEncryptionHelper
  id: RSAEncryptionHelper
  parent: Mix.Heart.Helpers
  children:
  - Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys
  - Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText(System.String,System.String)
  - Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText(System.String,System.String)
  langs:
  - csharp
  - vb
  name: RSAEncryptionHelper
  nameWithType: RSAEncryptionHelper
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: RSAEncryptionHelper
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
    startLine: 7
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Helpers
  syntax:
    content: public class RSAEncryptionHelper
    content.vb: Public Class RSAEncryptionHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys
  commentId: M:Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys
  id: GenerateKeys
  parent: Mix.Heart.Helpers.RSAEncryptionHelper
  langs:
  - csharp
  - vb
  name: GenerateKeys()
  nameWithType: RSAEncryptionHelper.GenerateKeys()
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys()
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: GenerateKeys
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
    startLine: 11
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Helpers
  syntax:
    content: public static Dictionary<string, string> GenerateKeys()
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Shared Function GenerateKeys As Dictionary(Of String, String)
  overload: Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText(System.String,System.String)
  commentId: M:Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText(System.String,System.String)
  id: GetEncryptedText(System.String,System.String)
  parent: Mix.Heart.Helpers.RSAEncryptionHelper
  langs:
  - csharp
  - vb
  name: GetEncryptedText(String, String)
  nameWithType: RSAEncryptionHelper.GetEncryptedText(String, String)
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: GetEncryptedText
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
    startLine: 55
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Helpers
  syntax:
    content: public static string GetEncryptedText(string plainTextData, string pubKeyString)
    parameters:
    - id: plainTextData
      type: System.String
    - id: pubKeyString
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetEncryptedText(plainTextData As String, pubKeyString As String) As String
  overload: Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText(System.String,System.String)
  commentId: M:Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText(System.String,System.String)
  id: GetDecryptedText(System.String,System.String)
  parent: Mix.Heart.Helpers.RSAEncryptionHelper
  langs:
  - csharp
  - vb
  name: GetDecryptedText(String, String)
  nameWithType: RSAEncryptionHelper.GetDecryptedText(String, String)
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: GetDecryptedText
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Helpers/RSAEncryptionHelper.cs
    startLine: 72
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Helpers
  syntax:
    content: public static string GetDecryptedText(string cypherText, string privKeyString)
    parameters:
    - id: cypherText
      type: System.String
    - id: privKeyString
      type: System.String
    return:
      type: System.String
    content.vb: Public Shared Function GetDecryptedText(cypherText As String, privKeyString As String) As String
  overload: Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Heart.Helpers
  commentId: N:Mix.Heart.Helpers
  name: Mix.Heart.Helpers
  nameWithType: Mix.Heart.Helpers
  fullName: Mix.Heart.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys*
  commentId: Overload:Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys
  name: GenerateKeys
  nameWithType: RSAEncryptionHelper.GenerateKeys
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper.GenerateKeys
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText*
  commentId: Overload:Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText
  name: GetEncryptedText
  nameWithType: RSAEncryptionHelper.GetEncryptedText
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper.GetEncryptedText
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText*
  commentId: Overload:Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText
  name: GetDecryptedText
  nameWithType: RSAEncryptionHelper.GetDecryptedText
  fullName: Mix.Heart.Helpers.RSAEncryptionHelper.GetDecryptedText
