### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixModuleViewModel
  id: MixModuleViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor(MixModule,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName
  - Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type
  langs:
  - csharp
  - vb
  name: MixModuleViewModel
  nameWithType: MixModuleViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixModuleViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixModuleViewModel : SiteDataWithContentViewModelBase<MixCmsContext, MixModule, int, MixModuleViewModel, MixModuleContent, MixModuleContentViewModel>'
    content.vb: >-
      Public Class MixModuleViewModel
          Inherits SiteDataWithContentViewModelBase(Of MixCmsContext, MixModule, Integer, MixModuleViewModel, MixModuleContent, MixModuleContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  langs:
  - csharp
  - vb
  name: MixModuleViewModel()
  nameWithType: MixModuleViewModel.MixModuleViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.MixModuleViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
    startLine: 8
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixModuleViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor(MixModule,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor(MixModule,UnitOfWorkInfo)
  id: '#ctor(MixModule,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  langs:
  - csharp
  - vb
  name: MixModuleViewModel(MixModule, UnitOfWorkInfo)
  nameWithType: MixModuleViewModel.MixModuleViewModel(MixModule, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.MixModuleViewModel(MixModule, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
    startLine: 12
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixModuleViewModel(MixModule entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixModule
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixModule, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  langs:
  - csharp
  - vb
  name: MixModuleViewModel(UnitOfWorkInfo)
  nameWithType: MixModuleViewModel.MixModuleViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.MixModuleViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
    startLine: 18
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixModuleViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName
  commentId: P:Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName
  id: SystemName
  parent: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MixModuleViewModel.SystemName
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
    startLine: 26
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type
  commentId: P:Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type
  id: Type
  parent: Mix.Portal.Domain.ViewModels.MixModuleViewModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MixModuleViewModel.Type
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleViewModel.cs
    startLine: 29
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public virtual MixModuleType Type { get; set; }
    parameters: []
    return:
      type: MixModuleType
    content.vb: Public Overridable Property Type As MixModuleType
  overload: Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleViewModel.#ctor
  name: MixModuleViewModel
  nameWithType: MixModuleViewModel.MixModuleViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.MixModuleViewModel
- uid: MixModule
  commentId: '!:MixModule'
  isExternal: true
  name: MixModule
  nameWithType: MixModule
  fullName: MixModule
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName
  name: SystemName
  nameWithType: MixModuleViewModel.SystemName
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.SystemName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type
  name: Type
  nameWithType: MixModuleViewModel.Type
  fullName: Mix.Portal.Domain.ViewModels.MixModuleViewModel.Type
- uid: MixModuleType
  isExternal: true
  name: MixModuleType
  nameWithType: MixModuleType
  fullName: MixModuleType
