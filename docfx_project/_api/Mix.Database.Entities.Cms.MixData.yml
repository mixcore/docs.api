### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Cms.MixData
  commentId: T:Mix.Database.Entities.Cms.MixData
  id: MixData
  parent: Mix.Database.Entities.Cms
  children:
  - Mix.Database.Entities.Cms.MixData.MixDatabase
  - Mix.Database.Entities.Cms.MixData.MixDatabaseId
  - Mix.Database.Entities.Cms.MixData.MixDatabaseName
  - Mix.Database.Entities.Cms.MixData.MixDataContents
  - Mix.Database.Entities.Cms.MixData.MixTenantId
  langs:
  - csharp
  - vb
  name: MixData
  nameWithType: MixData
  fullName: Mix.Database.Entities.Cms.MixData
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixData.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixData
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixData.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: 'public class MixData : EntityBase<Guid>'
    content.vb: >-
      Public Class MixData
          Inherits EntityBase(Of Guid)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Cms.MixData.MixTenantId
  commentId: P:Mix.Database.Entities.Cms.MixData.MixTenantId
  id: MixTenantId
  parent: Mix.Database.Entities.Cms.MixData
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: MixData.MixTenantId
  fullName: Mix.Database.Entities.Cms.MixData.MixTenantId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixData.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixData.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Database.Entities.Cms.MixData.MixTenantId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixData.MixDatabaseId
  commentId: P:Mix.Database.Entities.Cms.MixData.MixDatabaseId
  id: MixDatabaseId
  parent: Mix.Database.Entities.Cms.MixData
  langs:
  - csharp
  - vb
  name: MixDatabaseId
  nameWithType: MixData.MixDatabaseId
  fullName: Mix.Database.Entities.Cms.MixData.MixDatabaseId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixData.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseId
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixData.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public int MixDatabaseId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseId As Integer
  overload: Mix.Database.Entities.Cms.MixData.MixDatabaseId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixData.MixDatabaseName
  commentId: P:Mix.Database.Entities.Cms.MixData.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Database.Entities.Cms.MixData
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: MixData.MixDatabaseName
  fullName: Mix.Database.Entities.Cms.MixData.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixData.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixData.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Database.Entities.Cms.MixData.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Cms.MixData.MixDatabase
  commentId: P:Mix.Database.Entities.Cms.MixData.MixDatabase
  id: MixDatabase
  parent: Mix.Database.Entities.Cms.MixData
  langs:
  - csharp
  - vb
  name: MixDatabase
  nameWithType: MixData.MixDatabase
  fullName: Mix.Database.Entities.Cms.MixData.MixDatabase
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixData.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabase
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixData.cs
    startLine: 10
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public virtual MixDatabase MixDatabase { get; set; }
    parameters: []
    return:
      type: Mix.Database.Entities.Cms.MixDatabase
    content.vb: Public Overridable Property MixDatabase As MixDatabase
  overload: Mix.Database.Entities.Cms.MixData.MixDatabase*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Cms.MixData.MixDataContents
  commentId: P:Mix.Database.Entities.Cms.MixData.MixDataContents
  id: MixDataContents
  parent: Mix.Database.Entities.Cms.MixData
  langs:
  - csharp
  - vb
  name: MixDataContents
  nameWithType: MixData.MixDataContents
  fullName: Mix.Database.Entities.Cms.MixData.MixDataContents
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Cms/MixData.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDataContents
    path: ../../mix.core/src/platform/mix.database/Entities/Cms/MixData.cs
    startLine: 11
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Cms
  syntax:
    content: public virtual ICollection<MixDataContent> MixDataContents { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixDataContent}
    content.vb: Public Overridable Property MixDataContents As ICollection(Of MixDataContent)
  overload: Mix.Database.Entities.Cms.MixData.MixDataContents*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Database.Entities.Cms
  commentId: N:Mix.Database.Entities.Cms
  name: Mix.Database.Entities.Cms
  nameWithType: Mix.Database.Entities.Cms
  fullName: Mix.Database.Entities.Cms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Cms.MixData.MixTenantId*
  commentId: Overload:Mix.Database.Entities.Cms.MixData.MixTenantId
  name: MixTenantId
  nameWithType: MixData.MixTenantId
  fullName: Mix.Database.Entities.Cms.MixData.MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Database.Entities.Cms.MixData.MixDatabaseId*
  commentId: Overload:Mix.Database.Entities.Cms.MixData.MixDatabaseId
  name: MixDatabaseId
  nameWithType: MixData.MixDatabaseId
  fullName: Mix.Database.Entities.Cms.MixData.MixDatabaseId
- uid: Mix.Database.Entities.Cms.MixData.MixDatabaseName*
  commentId: Overload:Mix.Database.Entities.Cms.MixData.MixDatabaseName
  name: MixDatabaseName
  nameWithType: MixData.MixDatabaseName
  fullName: Mix.Database.Entities.Cms.MixData.MixDatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Cms.MixData.MixDatabase*
  commentId: Overload:Mix.Database.Entities.Cms.MixData.MixDatabase
  name: MixDatabase
  nameWithType: MixData.MixDatabase
  fullName: Mix.Database.Entities.Cms.MixData.MixDatabase
- uid: Mix.Database.Entities.Cms.MixDatabase
  commentId: T:Mix.Database.Entities.Cms.MixDatabase
  parent: Mix.Database.Entities.Cms
  name: MixDatabase
  nameWithType: MixDatabase
  fullName: Mix.Database.Entities.Cms.MixDatabase
- uid: Mix.Database.Entities.Cms.MixData.MixDataContents*
  commentId: Overload:Mix.Database.Entities.Cms.MixData.MixDataContents
  name: MixDataContents
  nameWithType: MixData.MixDataContents
  fullName: Mix.Database.Entities.Cms.MixData.MixDataContents
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixDataContent}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Cms.MixDataContent}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixDataContent>
  nameWithType: ICollection<MixDataContent>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Cms.MixDataContent>
  nameWithType.vb: ICollection(Of MixDataContent)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Cms.MixDataContent)
  name.vb: ICollection(Of MixDataContent)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Cms.MixDataContent
    name: MixDataContent
    nameWithType: MixDataContent
    fullName: Mix.Database.Entities.Cms.MixDataContent
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Cms.MixDataContent
    name: MixDataContent
    nameWithType: MixDataContent
    fullName: Mix.Database.Entities.Cms.MixDataContent
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
