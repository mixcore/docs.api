### YamlMime:ManagedReference
items:
- uid: Mix.Shared.Services.JsonConfigurationServiceBase
  commentId: T:Mix.Shared.Services.JsonConfigurationServiceBase
  id: JsonConfigurationServiceBase
  parent: Mix.Shared.Services
  children:
  - Mix.Shared.Services.JsonConfigurationServiceBase.#ctor(System.String)
  - Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings
  - Mix.Shared.Services.JsonConfigurationServiceBase.FilePath
  - Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig``1(System.String,``0)
  - Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig``1(System.String,System.String,``0)
  - Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig``1(System.String)
  - Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings
  - Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings
  - Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig``1(System.String,``0)
  - Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig``1(System.String,System.String,``0)
  - Mix.Shared.Services.JsonConfigurationServiceBase.watcher
  - Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile
  langs:
  - csharp
  - vb
  name: JsonConfigurationServiceBase
  nameWithType: JsonConfigurationServiceBase
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase
  type: Class
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JsonConfigurationServiceBase
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 4
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public class JsonConfigurationServiceBase
    content.vb: Public Class JsonConfigurationServiceBase
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Shared.Services.IPSecurityConfigService
  - Mix.Shared.Services.MixEndpointService
  - Mix.Shared.Services.PortalConfigService
  - Mix.Shared.Services.SmtpConfigService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings
  commentId: P:Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings
  id: AppSettings
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: AppSettings
  nameWithType: JsonConfigurationServiceBase.AppSettings
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AppSettings
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 7
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public JObject AppSettings { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Property AppSettings As JObject
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.FilePath
  commentId: P:Mix.Shared.Services.JsonConfigurationServiceBase.FilePath
  id: FilePath
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: JsonConfigurationServiceBase.FilePath
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.FilePath
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FilePath
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 8
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: protected string FilePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Protected Property FilePath As String
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.FilePath*
  modifiers.csharp:
  - protected
  - get
  - set
  modifiers.vb:
  - Protected
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.watcher
  commentId: F:Mix.Shared.Services.JsonConfigurationServiceBase.watcher
  id: watcher
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: watcher
  nameWithType: JsonConfigurationServiceBase.watcher
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.watcher
  type: Field
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: watcher
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 10
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: protected readonly FileSystemWatcher watcher
    return:
      type: FileSystemWatcher
    content.vb: Protected ReadOnly watcher As FileSystemWatcher
  modifiers.csharp:
  - protected
  - readonly
  modifiers.vb:
  - Protected
  - ReadOnly
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.#ctor(System.String)
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: JsonConfigurationServiceBase(String)
  nameWithType: JsonConfigurationServiceBase.JsonConfigurationServiceBase(String)
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.JsonConfigurationServiceBase(System.String)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 12
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public JsonConfigurationServiceBase(string filePath)
    parameters:
    - id: filePath
      type: System.String
    content.vb: Public Sub New(filePath As String)
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig``1(System.String,``0)
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig``1(System.String,``0)
  id: GetConfig``1(System.String,``0)
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: GetConfig<T>(String, T)
  nameWithType: JsonConfigurationServiceBase.GetConfig<T>(String, T)
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetConfig
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 19
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public T GetConfig<T>(string name, T defaultValue = null)
    parameters:
    - id: name
      type: System.String
    - id: defaultValue
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetConfig(Of T)(name As String, defaultValue As T = Nothing) As T
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig*
  nameWithType.vb: JsonConfigurationServiceBase.GetConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig(Of T)(System.String, T)
  name.vb: GetConfig(Of T)(String, T)
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig``1(System.String,System.String,``0)
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig``1(System.String,System.String,``0)
  id: GetConfig``1(System.String,System.String,``0)
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: GetConfig<T>(String, String, T)
  nameWithType: JsonConfigurationServiceBase.GetConfig<T>(String, String, T)
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig<T>(System.String, System.String, T)
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetConfig
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 25
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public T GetConfig<T>(string culture, string name, T defaultValue = null)
    parameters:
    - id: culture
      type: System.String
    - id: name
      type: System.String
    - id: defaultValue
      type: '{T}'
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetConfig(Of T)(culture As String, name As String, defaultValue As T = Nothing) As T
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig*
  nameWithType.vb: JsonConfigurationServiceBase.GetConfig(Of T)(String, String, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig(Of T)(System.String, System.String, T)
  name.vb: GetConfig(Of T)(String, String, T)
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig``1(System.String)
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig``1(System.String)
  id: GetEnumConfig``1(System.String)
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: GetEnumConfig<T>(String)
  nameWithType: JsonConfigurationServiceBase.GetEnumConfig<T>(String)
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig<T>(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetEnumConfig
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 35
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public T GetEnumConfig<T>(string name)
    parameters:
    - id: name
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function GetEnumConfig(Of T)(name As String) As T
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig*
  nameWithType.vb: JsonConfigurationServiceBase.GetEnumConfig(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig(Of T)(System.String)
  name.vb: GetEnumConfig(Of T)(String)
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig``1(System.String,``0)
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig``1(System.String,``0)
  id: SetConfig``1(System.String,``0)
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: SetConfig<T>(String, T)
  nameWithType: JsonConfigurationServiceBase.SetConfig<T>(String, T)
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig<T>(System.String, T)
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetConfig
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 41
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public void SetConfig<T>(string name, T value)
    parameters:
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub SetConfig(Of T)(name As String, value As T)
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig*
  nameWithType.vb: JsonConfigurationServiceBase.SetConfig(Of T)(String, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig(Of T)(System.String, T)
  name.vb: SetConfig(Of T)(String, T)
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig``1(System.String,System.String,``0)
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig``1(System.String,System.String,``0)
  id: SetConfig``1(System.String,System.String,``0)
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: SetConfig<T>(String, String, T)
  nameWithType: JsonConfigurationServiceBase.SetConfig<T>(String, String, T)
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig<T>(System.String, System.String, T)
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SetConfig
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 47
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public void SetConfig<T>(string culture, string name, T value)
    parameters:
    - id: culture
      type: System.String
    - id: name
      type: System.String
    - id: value
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub SetConfig(Of T)(culture As String, name As String, value As T)
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig*
  nameWithType.vb: JsonConfigurationServiceBase.SetConfig(Of T)(String, String, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig(Of T)(System.String, System.String, T)
  name.vb: SetConfig(Of T)(String, String, T)
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings
  id: SaveSettings
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: SaveSettings()
  nameWithType: JsonConfigurationServiceBase.SaveSettings()
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings()
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveSettings
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 53
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: public bool SaveSettings()
    return:
      type: System.Boolean
    content.vb: Public Function SaveSettings As Boolean
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile
  id: WatchFile
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: WatchFile()
  nameWithType: JsonConfigurationServiceBase.WatchFile()
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile()
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: WatchFile
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 67
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: protected void WatchFile()
    content.vb: Protected Sub WatchFile
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile*
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings
  commentId: M:Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings
  id: LoadAppSettings
  parent: Mix.Shared.Services.JsonConfigurationServiceBase
  langs:
  - csharp
  - vb
  name: LoadAppSettings()
  nameWithType: JsonConfigurationServiceBase.LoadAppSettings()
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings()
  type: Method
  source:
    remote:
      path: src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadAppSettings
    path: ../../mix.core/src/platform/mix.shared/Services/JsonConfigurationServiceBase.cs
    startLine: 81
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Services
  syntax:
    content: protected virtual void LoadAppSettings()
    content.vb: Protected Overridable Sub LoadAppSettings
  overload: Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings*
  modifiers.csharp:
  - protected
  - virtual
  modifiers.vb:
  - Protected
  - Overridable
references:
- uid: Mix.Shared.Services
  commentId: N:Mix.Shared.Services
  name: Mix.Shared.Services
  nameWithType: Mix.Shared.Services
  fullName: Mix.Shared.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings
  name: AppSettings
  nameWithType: JsonConfigurationServiceBase.AppSettings
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.AppSettings
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.FilePath*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.FilePath
  name: FilePath
  nameWithType: JsonConfigurationServiceBase.FilePath
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.FilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: FileSystemWatcher
  isExternal: true
  name: FileSystemWatcher
  nameWithType: FileSystemWatcher
  fullName: FileSystemWatcher
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.#ctor*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.#ctor
  name: JsonConfigurationServiceBase
  nameWithType: JsonConfigurationServiceBase.JsonConfigurationServiceBase
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.JsonConfigurationServiceBase
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig
  name: GetConfig
  nameWithType: JsonConfigurationServiceBase.GetConfig
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.GetConfig
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig
  name: GetEnumConfig
  nameWithType: JsonConfigurationServiceBase.GetEnumConfig
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.GetEnumConfig
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig
  name: SetConfig
  nameWithType: JsonConfigurationServiceBase.SetConfig
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.SetConfig
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings
  name: SaveSettings
  nameWithType: JsonConfigurationServiceBase.SaveSettings
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.SaveSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile
  name: WatchFile
  nameWithType: JsonConfigurationServiceBase.WatchFile
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.WatchFile
- uid: Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings*
  commentId: Overload:Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings
  name: LoadAppSettings
  nameWithType: JsonConfigurationServiceBase.LoadAppSettings
  fullName: Mix.Shared.Services.JsonConfigurationServiceBase.LoadAppSettings
