### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Controllers.MixFileController
  commentId: T:Mix.Portal.Controllers.MixFileController
  id: MixFileController
  parent: Mix.Portal.Controllers
  children:
  - Mix.Portal.Controllers.MixFileController.#ctor(IHttpContextAccessor,IConfiguration,MixCmsContext,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,IQueueService{MessageQueueModel})
  - Mix.Portal.Controllers.MixFileController.Delete
  - Mix.Portal.Controllers.MixFileController.Details(System.String,System.String)
  - Mix.Portal.Controllers.MixFileController.GetList(SearchFileRequestDto)
  - Mix.Portal.Controllers.MixFileController.Save(FileModel)
  - Mix.Portal.Controllers.MixFileController.Upload(System.String,IFormFile)
  langs:
  - csharp
  - vb
  name: MixFileController
  nameWithType: MixFileController
  fullName: Mix.Portal.Controllers.MixFileController
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixFileController
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 5
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [Route("api/v2/rest/mix-portal/mix-file")]

      [ApiController]

      public class MixFileController : MixApiControllerBase
    content.vb: >-
      <Route("api/v2/rest/mix-portal/mix-file")>

      <ApiController>

      Public Class MixFileController
          Inherits MixApiControllerBase
  inheritance:
  - System.Object
  attributes:
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: api/v2/rest/mix-portal/mix-file
  - type: Microsoft.AspNetCore.Mvc.ApiControllerAttribute
    ctor: Microsoft.AspNetCore.Mvc.ApiControllerAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Controllers.MixFileController.#ctor(IHttpContextAccessor,IConfiguration,MixCmsContext,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,IQueueService{MessageQueueModel})
  commentId: M:Mix.Portal.Controllers.MixFileController.#ctor(IHttpContextAccessor,IConfiguration,MixCmsContext,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,IQueueService{MessageQueueModel})
  id: '#ctor(IHttpContextAccessor,IConfiguration,MixCmsContext,MixService,TranslatorService,EntityRepository{MixCmsContext,MixCulture,System.Int32},MixIdentityService,IQueueService{MessageQueueModel})'
  parent: Mix.Portal.Controllers.MixFileController
  langs:
  - csharp
  - vb
  name: MixFileController(IHttpContextAccessor, IConfiguration, MixCmsContext, MixService, TranslatorService, EntityRepository<MixCmsContext, MixCulture, Int32>, MixIdentityService, IQueueService<MessageQueueModel>)
  nameWithType: MixFileController.MixFileController(IHttpContextAccessor, IConfiguration, MixCmsContext, MixService, TranslatorService, EntityRepository<MixCmsContext, MixCulture, Int32>, MixIdentityService, IQueueService<MessageQueueModel>)
  fullName: Mix.Portal.Controllers.MixFileController.MixFileController(IHttpContextAccessor, IConfiguration, MixCmsContext, MixService, TranslatorService, EntityRepository<MixCmsContext, MixCulture, System.Int32>, MixIdentityService, IQueueService<MessageQueueModel>)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 10
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: public MixFileController(IHttpContextAccessor httpContextAccessor, IConfiguration configuration, MixCmsContext context, MixService mixService, TranslatorService translator, EntityRepository<MixCmsContext, MixCulture, int> cultureRepository, MixIdentityService mixIdentityService, IQueueService<MessageQueueModel> queueService)
    parameters:
    - id: httpContextAccessor
      type: IHttpContextAccessor
    - id: configuration
      type: IConfiguration
    - id: context
      type: MixCmsContext
    - id: mixService
      type: MixService
    - id: translator
      type: TranslatorService
    - id: cultureRepository
      type: EntityRepository{MixCmsContext,MixCulture,System.Int32}
    - id: mixIdentityService
      type: MixIdentityService
    - id: queueService
      type: IQueueService{MessageQueueModel}
    content.vb: Public Sub New(httpContextAccessor As IHttpContextAccessor, configuration As IConfiguration, context As MixCmsContext, mixService As MixService, translator As TranslatorService, cultureRepository As EntityRepository(Of MixCmsContext, MixCulture, Integer), mixIdentityService As MixIdentityService, queueService As IQueueService(Of MessageQueueModel))
  overload: Mix.Portal.Controllers.MixFileController.#ctor*
  nameWithType.vb: MixFileController.MixFileController(IHttpContextAccessor, IConfiguration, MixCmsContext, MixService, TranslatorService, EntityRepository(Of MixCmsContext, MixCulture, Int32), MixIdentityService, IQueueService(Of MessageQueueModel))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Portal.Controllers.MixFileController.MixFileController(IHttpContextAccessor, IConfiguration, MixCmsContext, MixService, TranslatorService, EntityRepository(Of MixCmsContext, MixCulture, System.Int32), MixIdentityService, IQueueService(Of MessageQueueModel))
  name.vb: MixFileController(IHttpContextAccessor, IConfiguration, MixCmsContext, MixService, TranslatorService, EntityRepository(Of MixCmsContext, MixCulture, Int32), MixIdentityService, IQueueService(Of MessageQueueModel))
- uid: Mix.Portal.Controllers.MixFileController.Details(System.String,System.String)
  commentId: M:Mix.Portal.Controllers.MixFileController.Details(System.String,System.String)
  id: Details(System.String,System.String)
  parent: Mix.Portal.Controllers.MixFileController
  langs:
  - csharp
  - vb
  name: Details(String, String)
  nameWithType: MixFileController.Details(String, String)
  fullName: Mix.Portal.Controllers.MixFileController.Details(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Details
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 27
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpGet]

      [Route("details")]

      public ActionResult<FileModel> Details(string folder, string filename)
    parameters:
    - id: folder
      type: System.String
    - id: filename
      type: System.String
    return:
      type: Microsoft.AspNetCore.Mvc.ActionResult{FileModel}
    content.vb: >-
      <HttpGet>

      <Route("details")>

      Public Function Details(folder As String, filename As String) As ActionResult(Of FileModel)
  overload: Mix.Portal.Controllers.MixFileController.Details*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: details
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixFileController.Delete
  commentId: M:Mix.Portal.Controllers.MixFileController.Delete
  id: Delete
  parent: Mix.Portal.Controllers.MixFileController
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: MixFileController.Delete()
  fullName: Mix.Portal.Controllers.MixFileController.Delete()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Delete
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 44
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpGet]

      [Route("delete")]

      public ActionResult<bool> Delete()
    return:
      type: Microsoft.AspNetCore.Mvc.ActionResult{System.Boolean}
    content.vb: >-
      <HttpGet>

      <Route("delete")>

      Public Function Delete As ActionResult(Of Boolean)
  overload: Mix.Portal.Controllers.MixFileController.Delete*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: delete
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixFileController.Upload(System.String,IFormFile)
  commentId: M:Mix.Portal.Controllers.MixFileController.Upload(System.String,IFormFile)
  id: Upload(System.String,IFormFile)
  parent: Mix.Portal.Controllers.MixFileController
  langs:
  - csharp
  - vb
  name: Upload(String, IFormFile)
  nameWithType: MixFileController.Upload(String, IFormFile)
  fullName: Mix.Portal.Controllers.MixFileController.Upload(System.String, IFormFile)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Upload
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 60
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  summary: "\nUploads the image.\n"
  example: []
  syntax:
    content: >-
      [Route("upload-file")]

      [HttpPost]

      public IActionResult Upload([FromForm] string folder, [FromForm] IFormFile file)
    parameters:
    - id: folder
      type: System.String
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromFormAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromFormAttribute.#ctor
        arguments: []
    - id: file
      type: IFormFile
      description: ''
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromFormAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromFormAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.AspNetCore.Mvc.IActionResult
      description: ''
    content.vb: >-
      <Route("upload-file")>

      <HttpPost>

      Public Function Upload(folder As String, file As IFormFile) As IActionResult
  overload: Mix.Portal.Controllers.MixFileController.Upload*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: upload-file
  - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixFileController.Save(FileModel)
  commentId: M:Mix.Portal.Controllers.MixFileController.Save(FileModel)
  id: Save(FileModel)
  parent: Mix.Portal.Controllers.MixFileController
  langs:
  - csharp
  - vb
  name: Save(FileModel)
  nameWithType: MixFileController.Save(FileModel)
  fullName: Mix.Portal.Controllers.MixFileController.Save(FileModel)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Save
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 79
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpPost]

      [Route("save")]

      public ActionResult<FileModel> Save([FromBody] FileModel model)
    parameters:
    - id: model
      type: FileModel
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromBodyAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromBodyAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.AspNetCore.Mvc.ActionResult{FileModel}
    content.vb: >-
      <HttpPost>

      <Route("save")>

      Public Function Save(model As FileModel) As ActionResult(Of FileModel)
  overload: Mix.Portal.Controllers.MixFileController.Save*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpPostAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpPostAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: save
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Controllers.MixFileController.GetList(SearchFileRequestDto)
  commentId: M:Mix.Portal.Controllers.MixFileController.GetList(SearchFileRequestDto)
  id: GetList(SearchFileRequestDto)
  parent: Mix.Portal.Controllers.MixFileController
  langs:
  - csharp
  - vb
  name: GetList(SearchFileRequestDto)
  nameWithType: MixFileController.GetList(SearchFileRequestDto)
  fullName: Mix.Portal.Controllers.MixFileController.GetList(SearchFileRequestDto)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Controllers/MixFileController.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetList
    path: ../../mix.core/src/modules/mix.portal/Controllers/MixFileController.cs
    startLine: 92
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Controllers
  syntax:
    content: >-
      [HttpGet]

      [Route("")]

      public ActionResult<MixFileResponseModel> GetList([FromQuery] SearchFileRequestDto request)
    parameters:
    - id: request
      type: SearchFileRequestDto
      attributes:
      - type: Microsoft.AspNetCore.Mvc.FromQueryAttribute
        ctor: Microsoft.AspNetCore.Mvc.FromQueryAttribute.#ctor
        arguments: []
    return:
      type: Microsoft.AspNetCore.Mvc.ActionResult{MixFileResponseModel}
    content.vb: >-
      <HttpGet>

      <Route("")>

      Public Function GetList(request As SearchFileRequestDto) As ActionResult(Of MixFileResponseModel)
  overload: Mix.Portal.Controllers.MixFileController.GetList*
  attributes:
  - type: Microsoft.AspNetCore.Mvc.HttpGetAttribute
    ctor: Microsoft.AspNetCore.Mvc.HttpGetAttribute.#ctor
    arguments: []
  - type: Microsoft.AspNetCore.Mvc.RouteAttribute
    ctor: Microsoft.AspNetCore.Mvc.RouteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ''
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Portal.Controllers
  commentId: N:Mix.Portal.Controllers
  name: Mix.Portal.Controllers
  nameWithType: Mix.Portal.Controllers
  fullName: Mix.Portal.Controllers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Controllers.MixFileController.#ctor*
  commentId: Overload:Mix.Portal.Controllers.MixFileController.#ctor
  name: MixFileController
  nameWithType: MixFileController.MixFileController
  fullName: Mix.Portal.Controllers.MixFileController.MixFileController
- uid: IHttpContextAccessor
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: IHttpContextAccessor
- uid: IConfiguration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: IConfiguration
- uid: MixCmsContext
  isExternal: true
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: MixCmsContext
- uid: MixService
  isExternal: true
  name: MixService
  nameWithType: MixService
  fullName: MixService
- uid: TranslatorService
  isExternal: true
  name: TranslatorService
  nameWithType: TranslatorService
  fullName: TranslatorService
- uid: EntityRepository{MixCmsContext,MixCulture,System.Int32}
  commentId: '!:EntityRepository{MixCmsContext,MixCulture,System.Int32}'
  definition: EntityRepository`3
  name: EntityRepository<MixCmsContext, MixCulture, Int32>
  nameWithType: EntityRepository<MixCmsContext, MixCulture, Int32>
  fullName: EntityRepository<MixCmsContext, MixCulture, System.Int32>
  nameWithType.vb: EntityRepository(Of MixCmsContext, MixCulture, Int32)
  fullName.vb: EntityRepository(Of MixCmsContext, MixCulture, System.Int32)
  name.vb: EntityRepository(Of MixCmsContext, MixCulture, Int32)
  spec.csharp:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MixCulture
    name: MixCulture
    nameWithType: MixCulture
    fullName: MixCulture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: MixCulture
    name: MixCulture
    nameWithType: MixCulture
    fullName: MixCulture
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MixIdentityService
  isExternal: true
  name: MixIdentityService
  nameWithType: MixIdentityService
  fullName: MixIdentityService
- uid: IQueueService{MessageQueueModel}
  commentId: '!:IQueueService{MessageQueueModel}'
  definition: IQueueService`1
  name: IQueueService<MessageQueueModel>
  nameWithType: IQueueService<MessageQueueModel>
  fullName: IQueueService<MessageQueueModel>
  nameWithType.vb: IQueueService(Of MessageQueueModel)
  fullName.vb: IQueueService(Of MessageQueueModel)
  name.vb: IQueueService(Of MessageQueueModel)
  spec.csharp:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: MessageQueueModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: MessageQueueModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EntityRepository`3
  isExternal: true
  name: EntityRepository<, , >
  nameWithType: EntityRepository<, , >
  fullName: EntityRepository<, , >
  nameWithType.vb: EntityRepository(Of , , )
  fullName.vb: EntityRepository(Of , , )
  name.vb: EntityRepository(Of , , )
  spec.csharp:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityRepository`3
    name: EntityRepository
    nameWithType: EntityRepository
    fullName: EntityRepository
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: IQueueService`1
  isExternal: true
  name: IQueueService<>
  nameWithType: IQueueService<>
  fullName: IQueueService<>
  nameWithType.vb: IQueueService(Of )
  fullName.vb: IQueueService(Of )
  name.vb: IQueueService(Of )
  spec.csharp:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: IQueueService
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Controllers.MixFileController.Details*
  commentId: Overload:Mix.Portal.Controllers.MixFileController.Details
  name: Details
  nameWithType: MixFileController.Details
  fullName: Mix.Portal.Controllers.MixFileController.Details
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.AspNetCore.Mvc.ActionResult{FileModel}
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult{FileModel}
  parent: Microsoft.AspNetCore.Mvc
  definition: Microsoft.AspNetCore.Mvc.ActionResult`1
  name: ActionResult<FileModel>
  nameWithType: ActionResult<FileModel>
  fullName: Microsoft.AspNetCore.Mvc.ActionResult<FileModel>
  nameWithType.vb: ActionResult(Of FileModel)
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionResult(Of FileModel)
  name.vb: ActionResult(Of FileModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: FileModel
    name: FileModel
    nameWithType: FileModel
    fullName: FileModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: FileModel
    name: FileModel
    nameWithType: FileModel
    fullName: FileModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc.ActionResult`1
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult`1
  isExternal: true
  name: ActionResult<TValue>
  nameWithType: ActionResult<TValue>
  fullName: Microsoft.AspNetCore.Mvc.ActionResult<TValue>
  nameWithType.vb: ActionResult(Of TValue)
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionResult(Of TValue)
  name.vb: ActionResult(Of TValue)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Mvc
  commentId: N:Microsoft.AspNetCore.Mvc
  isExternal: true
  name: Microsoft.AspNetCore.Mvc
  nameWithType: Microsoft.AspNetCore.Mvc
  fullName: Microsoft.AspNetCore.Mvc
- uid: Mix.Portal.Controllers.MixFileController.Delete*
  commentId: Overload:Mix.Portal.Controllers.MixFileController.Delete
  name: Delete
  nameWithType: MixFileController.Delete
  fullName: Mix.Portal.Controllers.MixFileController.Delete
- uid: Microsoft.AspNetCore.Mvc.ActionResult{System.Boolean}
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult{System.Boolean}
  parent: Microsoft.AspNetCore.Mvc
  definition: Microsoft.AspNetCore.Mvc.ActionResult`1
  name: ActionResult<Boolean>
  nameWithType: ActionResult<Boolean>
  fullName: Microsoft.AspNetCore.Mvc.ActionResult<System.Boolean>
  nameWithType.vb: ActionResult(Of Boolean)
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionResult(Of System.Boolean)
  name.vb: ActionResult(Of Boolean)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Controllers.MixFileController.Upload*
  commentId: Overload:Mix.Portal.Controllers.MixFileController.Upload
  name: Upload
  nameWithType: MixFileController.Upload
  fullName: Mix.Portal.Controllers.MixFileController.Upload
- uid: IFormFile
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: IFormFile
- uid: Microsoft.AspNetCore.Mvc.IActionResult
  commentId: T:Microsoft.AspNetCore.Mvc.IActionResult
  parent: Microsoft.AspNetCore.Mvc
  isExternal: true
  name: IActionResult
  nameWithType: IActionResult
  fullName: Microsoft.AspNetCore.Mvc.IActionResult
- uid: Mix.Portal.Controllers.MixFileController.Save*
  commentId: Overload:Mix.Portal.Controllers.MixFileController.Save
  name: Save
  nameWithType: MixFileController.Save
  fullName: Mix.Portal.Controllers.MixFileController.Save
- uid: FileModel
  isExternal: true
  name: FileModel
  nameWithType: FileModel
  fullName: FileModel
- uid: Mix.Portal.Controllers.MixFileController.GetList*
  commentId: Overload:Mix.Portal.Controllers.MixFileController.GetList
  name: GetList
  nameWithType: MixFileController.GetList
  fullName: Mix.Portal.Controllers.MixFileController.GetList
- uid: SearchFileRequestDto
  commentId: '!:SearchFileRequestDto'
  isExternal: true
  name: SearchFileRequestDto
  nameWithType: SearchFileRequestDto
  fullName: SearchFileRequestDto
- uid: Microsoft.AspNetCore.Mvc.ActionResult{MixFileResponseModel}
  commentId: T:Microsoft.AspNetCore.Mvc.ActionResult{MixFileResponseModel}
  parent: Microsoft.AspNetCore.Mvc
  definition: Microsoft.AspNetCore.Mvc.ActionResult`1
  name: ActionResult<MixFileResponseModel>
  nameWithType: ActionResult<MixFileResponseModel>
  fullName: Microsoft.AspNetCore.Mvc.ActionResult<MixFileResponseModel>
  nameWithType.vb: ActionResult(Of MixFileResponseModel)
  fullName.vb: Microsoft.AspNetCore.Mvc.ActionResult(Of MixFileResponseModel)
  name.vb: ActionResult(Of MixFileResponseModel)
  spec.csharp:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixFileResponseModel
    name: MixFileResponseModel
    nameWithType: MixFileResponseModel
    fullName: MixFileResponseModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Microsoft.AspNetCore.Mvc.ActionResult`1
    name: ActionResult
    nameWithType: ActionResult
    fullName: Microsoft.AspNetCore.Mvc.ActionResult
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixFileResponseModel
    name: MixFileResponseModel
    nameWithType: MixFileResponseModel
    fullName: MixFileResponseModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
