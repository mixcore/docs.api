### YamlMime:ManagedReference
items:
- uid: Mixcore.Domain.ViewModels.PageContentViewModel
  commentId: T:Mixcore.Domain.ViewModels.PageContentViewModel
  id: PageContentViewModel
  parent: Mixcore.Domain.ViewModels
  children:
  - Mixcore.Domain.ViewModels.PageContentViewModel.#ctor
  - Mixcore.Domain.ViewModels.PageContentViewModel.#ctor(MixPageContent,UnitOfWorkInfo)
  - Mixcore.Domain.ViewModels.PageContentViewModel.#ctor(UnitOfWorkInfo)
  - Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData
  - Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId
  - Mixcore.Domain.ViewModels.PageContentViewModel.ClassName
  - Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl
  - Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView
  - Mixcore.Domain.ViewModels.PageContentViewModel.GetModule(System.String)
  - Mixcore.Domain.ViewModels.PageContentViewModel.Modules
  - Mixcore.Domain.ViewModels.PageContentViewModel.Property``1(System.String)
  langs:
  - csharp
  - vb
  name: PageContentViewModel
  nameWithType: PageContentViewModel
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel
  type: Class
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageContentViewModel
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 4
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: 'public class PageContentViewModel : ExtraColumnMultilingualSEOContentViewModelBase<MixCmsContext, MixPageContent, int, PageContentViewModel>'
    content.vb: >-
      Public Class PageContentViewModel
          Inherits ExtraColumnMultilingualSEOContentViewModelBase(Of MixCmsContext, MixPageContent, Integer, PageContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor
  commentId: M:Mixcore.Domain.ViewModels.PageContentViewModel.#ctor
  id: '#ctor'
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: PageContentViewModel()
  nameWithType: PageContentViewModel.PageContentViewModel()
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.PageContentViewModel()
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 11
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public PageContentViewModel()
    content.vb: Public Sub New
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor(MixPageContent,UnitOfWorkInfo)
  commentId: M:Mixcore.Domain.ViewModels.PageContentViewModel.#ctor(MixPageContent,UnitOfWorkInfo)
  id: '#ctor(MixPageContent,UnitOfWorkInfo)'
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: PageContentViewModel(MixPageContent, UnitOfWorkInfo)
  nameWithType: PageContentViewModel.PageContentViewModel(MixPageContent, UnitOfWorkInfo)
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.PageContentViewModel(MixPageContent, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 15
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public PageContentViewModel(MixPageContent entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixPageContent
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixPageContent, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mixcore.Domain.ViewModels.PageContentViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: PageContentViewModel(UnitOfWorkInfo)
  nameWithType: PageContentViewModel.PageContentViewModel(UnitOfWorkInfo)
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.PageContentViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 21
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public PageContentViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.ClassName
  commentId: P:Mixcore.Domain.ViewModels.PageContentViewModel.ClassName
  id: ClassName
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: ClassName
  nameWithType: PageContentViewModel.ClassName
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.ClassName
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ClassName
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 28
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public string ClassName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClassName As String
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.ClassName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl
  commentId: P:Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl
  id: DetailUrl
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: DetailUrl
  nameWithType: PageContentViewModel.DetailUrl
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DetailUrl
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 30
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public string DetailUrl { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DetailUrl As String
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId
  commentId: P:Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId
  id: AdditionalDataId
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: AdditionalDataId
  nameWithType: PageContentViewModel.AdditionalDataId
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AdditionalDataId
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 32
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public Guid? AdditionalDataId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public Property AdditionalDataId As Guid?
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.Modules
  commentId: P:Mixcore.Domain.ViewModels.PageContentViewModel.Modules
  id: Modules
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: PageContentViewModel.Modules
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.Modules
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Modules
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 34
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public List<ModuleContentViewModel> Modules { get; set; }
    parameters: []
    return:
      type: List{Mixcore.Domain.ViewModels.ModuleContentViewModel}
    content.vb: Public Property Modules As List(Of ModuleContentViewModel)
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.Modules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData
  commentId: P:Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData
  id: AdditionalData
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: AdditionalData
  nameWithType: PageContentViewModel.AdditionalData
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AdditionalData
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 35
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public AdditionalDataViewModel AdditionalData { get; set; }
    parameters: []
    return:
      type: Mixcore.Domain.ViewModels.AdditionalDataViewModel
    content.vb: Public Property AdditionalData As AdditionalDataViewModel
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView
  commentId: M:Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView
  id: ExpandView
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: PageContentViewModel.ExpandView()
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 39
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.GetModule(System.String)
  commentId: M:Mixcore.Domain.ViewModels.PageContentViewModel.GetModule(System.String)
  id: GetModule(System.String)
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: GetModule(String)
  nameWithType: PageContentViewModel.GetModule(String)
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.GetModule(System.String)
  type: Method
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetModule
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 51
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public ModuleContentViewModel GetModule(string moduleName)
    parameters:
    - id: moduleName
      type: System.String
    return:
      type: Mixcore.Domain.ViewModels.ModuleContentViewModel
    content.vb: Public Function GetModule(moduleName As String) As ModuleContentViewModel
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.GetModule*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.Property``1(System.String)
  commentId: M:Mixcore.Domain.ViewModels.PageContentViewModel.Property``1(System.String)
  id: Property``1(System.String)
  parent: Mixcore.Domain.ViewModels.PageContentViewModel
  langs:
  - csharp
  - vb
  name: Property<T>(String)
  nameWithType: PageContentViewModel.Property<T>(String)
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.Property<T>(System.String)
  type: Method
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/PageContentViewModel.cs
    startLine: 55
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public T Property<T>(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Property(Of T)(fieldName As String) As T
  overload: Mixcore.Domain.ViewModels.PageContentViewModel.Property*
  nameWithType.vb: PageContentViewModel.Property(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mixcore.Domain.ViewModels.PageContentViewModel.Property(Of T)(System.String)
  name.vb: Property(Of T)(String)
references:
- uid: Mixcore.Domain.ViewModels
  commentId: N:Mixcore.Domain.ViewModels
  name: Mixcore.Domain.ViewModels
  nameWithType: Mixcore.Domain.ViewModels
  fullName: Mixcore.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.#ctor*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.#ctor
  name: PageContentViewModel
  nameWithType: PageContentViewModel.PageContentViewModel
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.PageContentViewModel
- uid: MixPageContent
  isExternal: true
  name: MixPageContent
  nameWithType: MixPageContent
  fullName: MixPageContent
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.ClassName*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.ClassName
  name: ClassName
  nameWithType: PageContentViewModel.ClassName
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.ClassName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl
  name: DetailUrl
  nameWithType: PageContentViewModel.DetailUrl
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.DetailUrl
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId
  name: AdditionalDataId
  nameWithType: PageContentViewModel.AdditionalDataId
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalDataId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.Modules*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.Modules
  name: Modules
  nameWithType: PageContentViewModel.Modules
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.Modules
- uid: List{Mixcore.Domain.ViewModels.ModuleContentViewModel}
  commentId: '!:List{Mixcore.Domain.ViewModels.ModuleContentViewModel}'
  definition: List`1
  name: List<ModuleContentViewModel>
  nameWithType: List<ModuleContentViewModel>
  fullName: List<Mixcore.Domain.ViewModels.ModuleContentViewModel>
  nameWithType.vb: List(Of ModuleContentViewModel)
  fullName.vb: List(Of Mixcore.Domain.ViewModels.ModuleContentViewModel)
  name.vb: List(Of ModuleContentViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mixcore.Domain.ViewModels.ModuleContentViewModel
    name: ModuleContentViewModel
    nameWithType: ModuleContentViewModel
    fullName: Mixcore.Domain.ViewModels.ModuleContentViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mixcore.Domain.ViewModels.ModuleContentViewModel
    name: ModuleContentViewModel
    nameWithType: ModuleContentViewModel
    fullName: Mixcore.Domain.ViewModels.ModuleContentViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData
  name: AdditionalData
  nameWithType: PageContentViewModel.AdditionalData
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.AdditionalData
- uid: Mixcore.Domain.ViewModels.AdditionalDataViewModel
  commentId: T:Mixcore.Domain.ViewModels.AdditionalDataViewModel
  parent: Mixcore.Domain.ViewModels
  name: AdditionalDataViewModel
  nameWithType: AdditionalDataViewModel
  fullName: Mixcore.Domain.ViewModels.AdditionalDataViewModel
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView
  name: ExpandView
  nameWithType: PageContentViewModel.ExpandView
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.GetModule*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.GetModule
  name: GetModule
  nameWithType: PageContentViewModel.GetModule
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.GetModule
- uid: Mixcore.Domain.ViewModels.ModuleContentViewModel
  commentId: T:Mixcore.Domain.ViewModels.ModuleContentViewModel
  parent: Mixcore.Domain.ViewModels
  name: ModuleContentViewModel
  nameWithType: ModuleContentViewModel
  fullName: Mixcore.Domain.ViewModels.ModuleContentViewModel
- uid: Mixcore.Domain.ViewModels.PageContentViewModel.Property*
  commentId: Overload:Mixcore.Domain.ViewModels.PageContentViewModel.Property
  name: Property
  nameWithType: PageContentViewModel.Property
  fullName: Mixcore.Domain.ViewModels.PageContentViewModel.Property
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
