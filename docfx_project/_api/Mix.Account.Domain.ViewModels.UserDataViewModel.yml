### YamlMime:ManagedReference
items:
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel
  commentId: T:Mix.Account.Domain.ViewModels.UserDataViewModel
  id: UserDataViewModel
  parent: Mix.Account.Domain.ViewModels
  children:
  - Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor
  - Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor(MixDataContent,UnitOfWorkInfo)
  - Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Account.Domain.ViewModels.UserDataViewModel.Data
  - Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView
  - Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId
  - Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId
  - Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId
  - Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName
  - Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType
  langs:
  - csharp
  - vb
  name: UserDataViewModel
  nameWithType: UserDataViewModel
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserDataViewModel
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 4
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: 'public class UserDataViewModel : HaveParentContentViewModelBase<MixCmsContext, MixDataContent, Guid, UserDataViewModel>'
    content.vb: >-
      Public Class UserDataViewModel
          Inherits HaveParentContentViewModelBase(Of MixCmsContext, MixDataContent, Guid, UserDataViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor
  commentId: M:Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor
  id: '#ctor'
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: UserDataViewModel()
  nameWithType: UserDataViewModel.UserDataViewModel()
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.UserDataViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 9
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public UserDataViewModel()
    content.vb: Public Sub New
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: UserDataViewModel(UnitOfWorkInfo)
  nameWithType: UserDataViewModel.UserDataViewModel(UnitOfWorkInfo)
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.UserDataViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 13
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public UserDataViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor(MixDataContent,UnitOfWorkInfo)
  commentId: M:Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor(MixDataContent,UnitOfWorkInfo)
  id: '#ctor(MixDataContent,UnitOfWorkInfo)'
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: UserDataViewModel(MixDataContent, UnitOfWorkInfo)
  nameWithType: UserDataViewModel.UserDataViewModel(MixDataContent, UnitOfWorkInfo)
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.UserDataViewModel(MixDataContent, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 17
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public UserDataViewModel(MixDataContent entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixDataContent
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixDataContent, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId
  commentId: P:Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId
  id: MixDatabaseId
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseId
  nameWithType: UserDataViewModel.MixDatabaseId
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseId
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 26
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public int MixDatabaseId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixDatabaseId As Integer
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName
  commentId: P:Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName
  id: MixDatabaseName
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseName
  nameWithType: UserDataViewModel.MixDatabaseName
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseName
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 27
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public string MixDatabaseName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property MixDatabaseName As String
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.Data
  commentId: P:Mix.Account.Domain.ViewModels.UserDataViewModel.Data
  id: Data
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: UserDataViewModel.Data
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.Data
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 28
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public JObject Data { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Property Data As JObject
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId
  commentId: P:Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId
  id: GuidParentId
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: GuidParentId
  nameWithType: UserDataViewModel.GuidParentId
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GuidParentId
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 30
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public Guid? GuidParentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public Property GuidParentId As Guid?
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId
  commentId: P:Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId
  id: IntParentId
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: IntParentId
  nameWithType: UserDataViewModel.IntParentId
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IntParentId
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 31
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public int? IntParentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IntParentId As Integer?
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType
  commentId: P:Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType
  id: ParentType
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: ParentType
  nameWithType: UserDataViewModel.ParentType
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentType
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 32
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public MixDatabaseParentType ParentType { get; set; }
    parameters: []
    return:
      type: MixDatabaseParentType
    content.vb: Public Property ParentType As MixDatabaseParentType
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView
  commentId: M:Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView
  id: ExpandView
  parent: Mix.Account.Domain.ViewModels.UserDataViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: UserDataViewModel.ExpandView()
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/UserDataViewModel.cs
    startLine: 37
  assemblies:
  - mix.account
  namespace: Mix.Account.Domain.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.Account.Domain.ViewModels
  commentId: N:Mix.Account.Domain.ViewModels
  name: Mix.Account.Domain.ViewModels
  nameWithType: Mix.Account.Domain.ViewModels
  fullName: Mix.Account.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.#ctor
  name: UserDataViewModel
  nameWithType: UserDataViewModel.UserDataViewModel
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.UserDataViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: MixDataContent
  isExternal: true
  name: MixDataContent
  nameWithType: MixDataContent
  fullName: MixDataContent
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId
  name: MixDatabaseId
  nameWithType: UserDataViewModel.MixDatabaseId
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName
  name: MixDatabaseName
  nameWithType: UserDataViewModel.MixDatabaseName
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.MixDatabaseName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.Data*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.Data
  name: Data
  nameWithType: UserDataViewModel.Data
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.Data
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId
  name: GuidParentId
  nameWithType: UserDataViewModel.GuidParentId
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.GuidParentId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId
  name: IntParentId
  nameWithType: UserDataViewModel.IntParentId
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.IntParentId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType
  name: ParentType
  nameWithType: UserDataViewModel.ParentType
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.ParentType
- uid: MixDatabaseParentType
  isExternal: true
  name: MixDatabaseParentType
  nameWithType: MixDatabaseParentType
  fullName: MixDatabaseParentType
- uid: Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView*
  commentId: Overload:Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView
  name: ExpandView
  nameWithType: UserDataViewModel.ExpandView
  fullName: Mix.Account.Domain.ViewModels.UserDataViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
