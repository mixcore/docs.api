### YamlMime:ManagedReference
items:
- uid: Mix.Shared.Commands.LogAuditLogCommand
  commentId: T:Mix.Shared.Commands.LogAuditLogCommand
  id: LogAuditLogCommand
  parent: Mix.Shared.Commands
  children:
  - Mix.Shared.Commands.LogAuditLogCommand.#ctor
  - Mix.Shared.Commands.LogAuditLogCommand.#ctor(System.String,Mix.Shared.Models.ParsedRequestModel,Exception)
  - Mix.Shared.Commands.LogAuditLogCommand.Exception
  - Mix.Shared.Commands.LogAuditLogCommand.Request
  - Mix.Shared.Commands.LogAuditLogCommand.UserName
  langs:
  - csharp
  - vb
  name: LogAuditLogCommand
  nameWithType: LogAuditLogCommand
  fullName: Mix.Shared.Commands.LogAuditLogCommand
  type: Class
  source:
    remote:
      path: src/platform/mix.shared/Commands/LogAuditLogCommand.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LogAuditLogCommand
    path: ../../mix.core/src/platform/mix.shared/Commands/LogAuditLogCommand.cs
    startLine: 5
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Commands
  syntax:
    content: public class LogAuditLogCommand
    content.vb: Public Class LogAuditLogCommand
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Shared.Commands.LogAuditLogCommand.#ctor
  commentId: M:Mix.Shared.Commands.LogAuditLogCommand.#ctor
  id: '#ctor'
  parent: Mix.Shared.Commands.LogAuditLogCommand
  langs:
  - csharp
  - vb
  name: LogAuditLogCommand()
  nameWithType: LogAuditLogCommand.LogAuditLogCommand()
  fullName: Mix.Shared.Commands.LogAuditLogCommand.LogAuditLogCommand()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.shared/Commands/LogAuditLogCommand.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.shared/Commands/LogAuditLogCommand.cs
    startLine: 7
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Commands
  syntax:
    content: public LogAuditLogCommand()
    content.vb: Public Sub New
  overload: Mix.Shared.Commands.LogAuditLogCommand.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Shared.Commands.LogAuditLogCommand.#ctor(System.String,Mix.Shared.Models.ParsedRequestModel,Exception)
  commentId: M:Mix.Shared.Commands.LogAuditLogCommand.#ctor(System.String,Mix.Shared.Models.ParsedRequestModel,Exception)
  id: '#ctor(System.String,Mix.Shared.Models.ParsedRequestModel,Exception)'
  parent: Mix.Shared.Commands.LogAuditLogCommand
  langs:
  - csharp
  - vb
  name: LogAuditLogCommand(String, ParsedRequestModel, Exception)
  nameWithType: LogAuditLogCommand.LogAuditLogCommand(String, ParsedRequestModel, Exception)
  fullName: Mix.Shared.Commands.LogAuditLogCommand.LogAuditLogCommand(System.String, Mix.Shared.Models.ParsedRequestModel, Exception)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.shared/Commands/LogAuditLogCommand.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.shared/Commands/LogAuditLogCommand.cs
    startLine: 11
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Commands
  syntax:
    content: public LogAuditLogCommand(string userName, ParsedRequestModel request, Exception ex = null)
    parameters:
    - id: userName
      type: System.String
    - id: request
      type: Mix.Shared.Models.ParsedRequestModel
    - id: ex
      type: Exception
    content.vb: Public Sub New(userName As String, request As ParsedRequestModel, ex As Exception = Nothing)
  overload: Mix.Shared.Commands.LogAuditLogCommand.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Shared.Commands.LogAuditLogCommand.UserName
  commentId: P:Mix.Shared.Commands.LogAuditLogCommand.UserName
  id: UserName
  parent: Mix.Shared.Commands.LogAuditLogCommand
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: LogAuditLogCommand.UserName
  fullName: Mix.Shared.Commands.LogAuditLogCommand.UserName
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Commands/LogAuditLogCommand.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserName
    path: ../../mix.core/src/platform/mix.shared/Commands/LogAuditLogCommand.cs
    startLine: 17
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Commands
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Mix.Shared.Commands.LogAuditLogCommand.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Commands.LogAuditLogCommand.Request
  commentId: P:Mix.Shared.Commands.LogAuditLogCommand.Request
  id: Request
  parent: Mix.Shared.Commands.LogAuditLogCommand
  langs:
  - csharp
  - vb
  name: Request
  nameWithType: LogAuditLogCommand.Request
  fullName: Mix.Shared.Commands.LogAuditLogCommand.Request
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Commands/LogAuditLogCommand.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Request
    path: ../../mix.core/src/platform/mix.shared/Commands/LogAuditLogCommand.cs
    startLine: 18
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Commands
  syntax:
    content: public ParsedRequestModel Request { get; set; }
    parameters: []
    return:
      type: Mix.Shared.Models.ParsedRequestModel
    content.vb: Public Property Request As ParsedRequestModel
  overload: Mix.Shared.Commands.LogAuditLogCommand.Request*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Commands.LogAuditLogCommand.Exception
  commentId: P:Mix.Shared.Commands.LogAuditLogCommand.Exception
  id: Exception
  parent: Mix.Shared.Commands.LogAuditLogCommand
  langs:
  - csharp
  - vb
  name: Exception
  nameWithType: LogAuditLogCommand.Exception
  fullName: Mix.Shared.Commands.LogAuditLogCommand.Exception
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Commands/LogAuditLogCommand.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Exception
    path: ../../mix.core/src/platform/mix.shared/Commands/LogAuditLogCommand.cs
    startLine: 19
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Commands
  syntax:
    content: public Exception Exception { get; set; }
    parameters: []
    return:
      type: Exception
    content.vb: Public Property Exception As Exception
  overload: Mix.Shared.Commands.LogAuditLogCommand.Exception*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Shared.Commands
  commentId: N:Mix.Shared.Commands
  name: Mix.Shared.Commands
  nameWithType: Mix.Shared.Commands
  fullName: Mix.Shared.Commands
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Shared.Commands.LogAuditLogCommand.#ctor*
  commentId: Overload:Mix.Shared.Commands.LogAuditLogCommand.#ctor
  name: LogAuditLogCommand
  nameWithType: LogAuditLogCommand.LogAuditLogCommand
  fullName: Mix.Shared.Commands.LogAuditLogCommand.LogAuditLogCommand
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Shared.Models.ParsedRequestModel
  commentId: T:Mix.Shared.Models.ParsedRequestModel
  parent: Mix.Shared.Models
  name: ParsedRequestModel
  nameWithType: ParsedRequestModel
  fullName: Mix.Shared.Models.ParsedRequestModel
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: Mix.Shared.Models
  commentId: N:Mix.Shared.Models
  name: Mix.Shared.Models
  nameWithType: Mix.Shared.Models
  fullName: Mix.Shared.Models
- uid: Mix.Shared.Commands.LogAuditLogCommand.UserName*
  commentId: Overload:Mix.Shared.Commands.LogAuditLogCommand.UserName
  name: UserName
  nameWithType: LogAuditLogCommand.UserName
  fullName: Mix.Shared.Commands.LogAuditLogCommand.UserName
- uid: Mix.Shared.Commands.LogAuditLogCommand.Request*
  commentId: Overload:Mix.Shared.Commands.LogAuditLogCommand.Request
  name: Request
  nameWithType: LogAuditLogCommand.Request
  fullName: Mix.Shared.Commands.LogAuditLogCommand.Request
- uid: Mix.Shared.Commands.LogAuditLogCommand.Exception*
  commentId: Overload:Mix.Shared.Commands.LogAuditLogCommand.Exception
  name: Exception
  nameWithType: LogAuditLogCommand.Exception
  fullName: Mix.Shared.Commands.LogAuditLogCommand.Exception
