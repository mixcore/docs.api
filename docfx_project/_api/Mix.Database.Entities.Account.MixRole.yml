### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Account.MixRole
  commentId: T:Mix.Database.Entities.Account.MixRole
  id: MixRole
  parent: Mix.Database.Entities.Account
  children:
  - Mix.Database.Entities.Account.MixRole.#ctor
  - Mix.Database.Entities.Account.MixRole.#ctor(System.String)
  - Mix.Database.Entities.Account.MixRole.AspNetRoleClaims
  - Mix.Database.Entities.Account.MixRole.AspNetUserRoles
  langs:
  - csharp
  - vb
  name: MixRole
  nameWithType: MixRole
  fullName: Mix.Database.Entities.Account.MixRole
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixRole.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixRole
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixRole.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: 'public class MixRole : IdentityRole<Guid>, IEntity<Guid>'
    content.vb: >-
      Public Class MixRole
          Inherits IdentityRole(Of Guid)
          Implements IEntity(Of Guid)
  inheritance:
  - System.Object
  implements:
  - IEntity{Guid}
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Account.MixRole.#ctor
  commentId: M:Mix.Database.Entities.Account.MixRole.#ctor
  id: '#ctor'
  parent: Mix.Database.Entities.Account.MixRole
  langs:
  - csharp
  - vb
  name: MixRole()
  nameWithType: MixRole.MixRole()
  fullName: Mix.Database.Entities.Account.MixRole.MixRole()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixRole.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixRole.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public MixRole()
    content.vb: Public Sub New
  overload: Mix.Database.Entities.Account.MixRole.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixRole.#ctor(System.String)
  commentId: M:Mix.Database.Entities.Account.MixRole.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Mix.Database.Entities.Account.MixRole
  langs:
  - csharp
  - vb
  name: MixRole(String)
  nameWithType: MixRole.MixRole(String)
  fullName: Mix.Database.Entities.Account.MixRole.MixRole(System.String)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixRole.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixRole.cs
    startLine: 10
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public MixRole(string roleName)
    parameters:
    - id: roleName
      type: System.String
    content.vb: Public Sub New(roleName As String)
  overload: Mix.Database.Entities.Account.MixRole.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixRole.AspNetRoleClaims
  commentId: P:Mix.Database.Entities.Account.MixRole.AspNetRoleClaims
  id: AspNetRoleClaims
  parent: Mix.Database.Entities.Account.MixRole
  langs:
  - csharp
  - vb
  name: AspNetRoleClaims
  nameWithType: MixRole.AspNetRoleClaims
  fullName: Mix.Database.Entities.Account.MixRole.AspNetRoleClaims
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixRole.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetRoleClaims
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixRole.cs
    startLine: 14
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetRoleClaims> AspNetRoleClaims { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetRoleClaims}
    content.vb: Public Overridable Property AspNetRoleClaims As ICollection(Of AspNetRoleClaims)
  overload: Mix.Database.Entities.Account.MixRole.AspNetRoleClaims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixRole.AspNetUserRoles
  commentId: P:Mix.Database.Entities.Account.MixRole.AspNetUserRoles
  id: AspNetUserRoles
  parent: Mix.Database.Entities.Account.MixRole
  langs:
  - csharp
  - vb
  name: AspNetUserRoles
  nameWithType: MixRole.AspNetUserRoles
  fullName: Mix.Database.Entities.Account.MixRole.AspNetUserRoles
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/MixRole.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserRoles
    path: ../../mix.core/src/platform/mix.database/Entities/Account/MixRole.cs
    startLine: 15
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual ICollection<AspNetUserRoles> AspNetUserRoles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserRoles}
    content.vb: Public Overridable Property AspNetUserRoles As ICollection(Of AspNetUserRoles)
  overload: Mix.Database.Entities.Account.MixRole.AspNetUserRoles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: IEntity{Guid}
  commentId: '!:IEntity{Guid}'
  definition: IEntity`1
  name: IEntity<Guid>
  nameWithType: IEntity<Guid>
  fullName: IEntity<Guid>
  nameWithType.vb: IEntity(Of Guid)
  fullName.vb: IEntity(Of Guid)
  name.vb: IEntity(Of Guid)
  spec.csharp:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: IEntity`1
  isExternal: true
  name: IEntity<>
  nameWithType: IEntity<>
  fullName: IEntity<>
  nameWithType.vb: IEntity(Of )
  fullName.vb: IEntity(Of )
  name.vb: IEntity(Of )
  spec.csharp:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: IEntity
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixRole.#ctor*
  commentId: Overload:Mix.Database.Entities.Account.MixRole.#ctor
  name: MixRole
  nameWithType: MixRole.MixRole
  fullName: Mix.Database.Entities.Account.MixRole.MixRole
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Account.MixRole.AspNetRoleClaims*
  commentId: Overload:Mix.Database.Entities.Account.MixRole.AspNetRoleClaims
  name: AspNetRoleClaims
  nameWithType: MixRole.AspNetRoleClaims
  fullName: Mix.Database.Entities.Account.MixRole.AspNetRoleClaims
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetRoleClaims}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetRoleClaims}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetRoleClaims>
  nameWithType: ICollection<AspNetRoleClaims>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Account.AspNetRoleClaims>
  nameWithType.vb: ICollection(Of AspNetRoleClaims)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Account.AspNetRoleClaims)
  name.vb: ICollection(Of AspNetRoleClaims)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Database.Entities.Account.MixRole.AspNetUserRoles*
  commentId: Overload:Mix.Database.Entities.Account.MixRole.AspNetUserRoles
  name: AspNetUserRoles
  nameWithType: MixRole.AspNetUserRoles
  fullName: Mix.Database.Entities.Account.MixRole.AspNetUserRoles
- uid: System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserRoles}
  commentId: T:System.Collections.Generic.ICollection{Mix.Database.Entities.Account.AspNetUserRoles}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<AspNetUserRoles>
  nameWithType: ICollection<AspNetUserRoles>
  fullName: System.Collections.Generic.ICollection<Mix.Database.Entities.Account.AspNetUserRoles>
  nameWithType.vb: ICollection(Of AspNetUserRoles)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Database.Entities.Account.AspNetUserRoles)
  name.vb: ICollection(Of AspNetUserRoles)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: )
    nameWithType: )
    fullName: )
