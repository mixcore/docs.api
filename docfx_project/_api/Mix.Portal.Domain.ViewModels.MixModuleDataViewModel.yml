### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  id: MixModuleDataViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor(MixModuleData,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property(System.String)
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns
  - Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value
  langs:
  - csharp
  - vb
  name: MixModuleDataViewModel
  nameWithType: MixModuleDataViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixModuleDataViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixModuleDataViewModel : MultilingualSEOContentViewModelBase<MixCmsContext, MixModuleData, int, MixModuleDataViewModel>'
    content.vb: >-
      Public Class MixModuleDataViewModel
          Inherits MultilingualSEOContentViewModelBase(Of MixCmsContext, MixModuleData, Integer, MixModuleDataViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: MixModuleDataViewModel()
  nameWithType: MixModuleDataViewModel.MixModuleDataViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.MixModuleDataViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 8
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixModuleDataViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor(MixModuleData,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor(MixModuleData,UnitOfWorkInfo)
  id: '#ctor(MixModuleData,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: MixModuleDataViewModel(MixModuleData, UnitOfWorkInfo)
  nameWithType: MixModuleDataViewModel.MixModuleDataViewModel(MixModuleData, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.MixModuleDataViewModel(MixModuleData, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 12
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixModuleDataViewModel(MixModuleData entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixModuleData
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixModuleData, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: MixModuleDataViewModel(UnitOfWorkInfo)
  nameWithType: MixModuleDataViewModel.MixModuleDataViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.MixModuleDataViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 18
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixModuleDataViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns
  commentId: P:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns
  id: SimpleDataColumns
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: SimpleDataColumns
  nameWithType: MixModuleDataViewModel.SimpleDataColumns
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SimpleDataColumns
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 24
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string SimpleDataColumns { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SimpleDataColumns As String
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value
  commentId: P:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value
  id: Value
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: MixModuleDataViewModel.Value
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Value
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 25
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data
  commentId: P:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data
  id: Data
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: MixModuleDataViewModel.Data
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 26
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public JObject Data { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property Data As JObject
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns
  commentId: P:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns
  id: Columns
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Columns
  nameWithType: MixModuleDataViewModel.Columns
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Columns
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 27
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public List<ModuleColumnModel> Columns { get; set; }
    parameters: []
    return:
      type: List{ModuleColumnModel}
    content.vb: Public Property Columns As List(Of ModuleColumnModel)
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity
  id: ParseEntity
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: ParseEntity()
  nameWithType: MixModuleDataViewModel.ParseEntity()
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEntity
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 32
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public override Task<MixModuleData> ParseEntity()
    return:
      type: Task{MixModuleData}
    content.vb: Public Overrides Function ParseEntity As Task(Of MixModuleData)
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView
  id: ExpandView
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixModuleDataViewModel.ExpandView()
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 40
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property(System.String)
  commentId: M:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property(System.String)
  id: Property(System.String)
  parent: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Property(String)
  nameWithType: MixModuleDataViewModel.Property(String)
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property(System.String)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixModuleDataViewModel.cs
    startLine: 61
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Property(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Function Property(name As String) As String
  overload: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.#ctor
  name: MixModuleDataViewModel
  nameWithType: MixModuleDataViewModel.MixModuleDataViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.MixModuleDataViewModel
- uid: MixModuleData
  isExternal: true
  name: MixModuleData
  nameWithType: MixModuleData
  fullName: MixModuleData
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns
  name: SimpleDataColumns
  nameWithType: MixModuleDataViewModel.SimpleDataColumns
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.SimpleDataColumns
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value
  name: Value
  nameWithType: MixModuleDataViewModel.Value
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Value
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data
  name: Data
  nameWithType: MixModuleDataViewModel.Data
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Data
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns
  name: Columns
  nameWithType: MixModuleDataViewModel.Columns
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Columns
- uid: List{ModuleColumnModel}
  commentId: '!:List{ModuleColumnModel}'
  definition: List`1
  name: List<ModuleColumnModel>
  nameWithType: List<ModuleColumnModel>
  fullName: List<ModuleColumnModel>
  nameWithType.vb: List(Of ModuleColumnModel)
  fullName.vb: List(Of ModuleColumnModel)
  name.vb: List(Of ModuleColumnModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: ModuleColumnModel
    name: ModuleColumnModel
    nameWithType: ModuleColumnModel
    fullName: ModuleColumnModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: ModuleColumnModel
    name: ModuleColumnModel
    nameWithType: ModuleColumnModel
    fullName: ModuleColumnModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity
  name: ParseEntity
  nameWithType: MixModuleDataViewModel.ParseEntity
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ParseEntity
- uid: Task{MixModuleData}
  commentId: '!:Task{MixModuleData}'
  definition: Task`1
  name: Task<MixModuleData>
  nameWithType: Task<MixModuleData>
  fullName: Task<MixModuleData>
  nameWithType.vb: Task(Of MixModuleData)
  fullName.vb: Task(Of MixModuleData)
  name.vb: Task(Of MixModuleData)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: MixModuleData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: MixModuleData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView
  name: ExpandView
  nameWithType: MixModuleDataViewModel.ExpandView
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property
  name: Property
  nameWithType: MixModuleDataViewModel.Property
  fullName: Mix.Portal.Domain.ViewModels.MixModuleDataViewModel.Property
