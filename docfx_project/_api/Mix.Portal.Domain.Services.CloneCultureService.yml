### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.Services.CloneCultureService
  commentId: T:Mix.Portal.Domain.Services.CloneCultureService
  id: CloneCultureService
  parent: Mix.Portal.Domain.Services
  children:
  - Mix.Portal.Domain.Services.CloneCultureService.#ctor(UnitOfWorkInfo{MixCmsContext},MixService)
  - Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture(System.String,System.String)
  langs:
  - csharp
  - vb
  name: CloneCultureService
  nameWithType: CloneCultureService
  fullName: Mix.Portal.Domain.Services.CloneCultureService
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/Services/CloneCultureService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CloneCultureService
    path: ../../mix.core/src/modules/mix.portal/Domain/Services/CloneCultureService.cs
    startLine: 7
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Services
  syntax:
    content: public class CloneCultureService
    content.vb: Public Class CloneCultureService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.Services.CloneCultureService.#ctor(UnitOfWorkInfo{MixCmsContext},MixService)
  commentId: M:Mix.Portal.Domain.Services.CloneCultureService.#ctor(UnitOfWorkInfo{MixCmsContext},MixService)
  id: '#ctor(UnitOfWorkInfo{MixCmsContext},MixService)'
  parent: Mix.Portal.Domain.Services.CloneCultureService
  langs:
  - csharp
  - vb
  name: CloneCultureService(UnitOfWorkInfo<MixCmsContext>, MixService)
  nameWithType: CloneCultureService.CloneCultureService(UnitOfWorkInfo<MixCmsContext>, MixService)
  fullName: Mix.Portal.Domain.Services.CloneCultureService.CloneCultureService(UnitOfWorkInfo<MixCmsContext>, MixService)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/Services/CloneCultureService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/Services/CloneCultureService.cs
    startLine: 21
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Services
  syntax:
    content: public CloneCultureService(UnitOfWorkInfo<MixCmsContext> cmsUOW, MixService mixService)
    parameters:
    - id: cmsUOW
      type: UnitOfWorkInfo{MixCmsContext}
    - id: mixService
      type: MixService
    content.vb: Public Sub New(cmsUOW As UnitOfWorkInfo(Of MixCmsContext), mixService As MixService)
  overload: Mix.Portal.Domain.Services.CloneCultureService.#ctor*
  nameWithType.vb: CloneCultureService.CloneCultureService(UnitOfWorkInfo(Of MixCmsContext), MixService)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Portal.Domain.Services.CloneCultureService.CloneCultureService(UnitOfWorkInfo(Of MixCmsContext), MixService)
  name.vb: CloneCultureService(UnitOfWorkInfo(Of MixCmsContext), MixService)
- uid: Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture(System.String,System.String)
  commentId: M:Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture(System.String,System.String)
  id: CloneDefaultCulture(System.String,System.String)
  parent: Mix.Portal.Domain.Services.CloneCultureService
  langs:
  - csharp
  - vb
  name: CloneDefaultCulture(String, String)
  nameWithType: CloneCultureService.CloneDefaultCulture(String, String)
  fullName: Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/Services/CloneCultureService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CloneDefaultCulture
    path: ../../mix.core/src/modules/mix.portal/Domain/Services/CloneCultureService.cs
    startLine: 30
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.Services
  syntax:
    content: public Task CloneDefaultCulture(string srcCulture, string destCulture)
    parameters:
    - id: srcCulture
      type: System.String
    - id: destCulture
      type: System.String
    return:
      type: Task
    content.vb: Public Function CloneDefaultCulture(srcCulture As String, destCulture As String) As Task
  overload: Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Portal.Domain.Services
  commentId: N:Mix.Portal.Domain.Services
  name: Mix.Portal.Domain.Services
  nameWithType: Mix.Portal.Domain.Services
  fullName: Mix.Portal.Domain.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.Services.CloneCultureService.#ctor*
  commentId: Overload:Mix.Portal.Domain.Services.CloneCultureService.#ctor
  name: CloneCultureService
  nameWithType: CloneCultureService.CloneCultureService
  fullName: Mix.Portal.Domain.Services.CloneCultureService.CloneCultureService
- uid: UnitOfWorkInfo{MixCmsContext}
  commentId: '!:UnitOfWorkInfo{MixCmsContext}'
  definition: UnitOfWorkInfo`1
  name: UnitOfWorkInfo<MixCmsContext>
  nameWithType: UnitOfWorkInfo<MixCmsContext>
  fullName: UnitOfWorkInfo<MixCmsContext>
  nameWithType.vb: UnitOfWorkInfo(Of MixCmsContext)
  fullName.vb: UnitOfWorkInfo(Of MixCmsContext)
  name.vb: UnitOfWorkInfo(Of MixCmsContext)
  spec.csharp:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixCmsContext
    name: MixCmsContext
    nameWithType: MixCmsContext
    fullName: MixCmsContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: MixService
  isExternal: true
  name: MixService
  nameWithType: MixService
  fullName: MixService
- uid: UnitOfWorkInfo`1
  isExternal: true
  name: UnitOfWorkInfo<>
  nameWithType: UnitOfWorkInfo<>
  fullName: UnitOfWorkInfo<>
  nameWithType.vb: UnitOfWorkInfo(Of )
  fullName.vb: UnitOfWorkInfo(Of )
  name.vb: UnitOfWorkInfo(Of )
  spec.csharp:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnitOfWorkInfo`1
    name: UnitOfWorkInfo
    nameWithType: UnitOfWorkInfo
    fullName: UnitOfWorkInfo
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture*
  commentId: Overload:Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture
  name: CloneDefaultCulture
  nameWithType: CloneCultureService.CloneDefaultCulture
  fullName: Mix.Portal.Domain.Services.CloneCultureService.CloneDefaultCulture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
