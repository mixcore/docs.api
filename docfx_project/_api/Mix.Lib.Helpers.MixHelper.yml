### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Helpers.MixHelper
  commentId: T:Mix.Lib.Helpers.MixHelper
  id: MixHelper
  parent: Mix.Lib.Helpers
  children:
  - Mix.Lib.Helpers.MixHelper.CopyFolder(System.String,System.String)
  - Mix.Lib.Helpers.MixHelper.CreateHostBuilder``1(System.String[])
  - Mix.Lib.Helpers.MixHelper.GetFileModel(Microsoft.AspNetCore.Http.IFormFile,System.String)
  - Mix.Lib.Helpers.MixHelper.HandleException``1(``0,Exception)
  - Mix.Lib.Helpers.MixHelper.IsDefaultId``1(``0)
  - Mix.Lib.Helpers.MixHelper.LoadEnumValues(Type)
  - Mix.Lib.Helpers.MixHelper.MixCli(System.String[])
  - Mix.Lib.Helpers.MixHelper.ParseEnumToObject(Type)
  - Mix.Lib.Helpers.MixHelper.SerializeObject(System.Object)
  langs:
  - csharp
  - vb
  name: MixHelper
  nameWithType: MixHelper
  fullName: Mix.Lib.Helpers.MixHelper
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixHelper
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public class MixHelper
    content.vb: Public Class MixHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Helpers.MixHelper.CreateHostBuilder``1(System.String[])
  commentId: M:Mix.Lib.Helpers.MixHelper.CreateHostBuilder``1(System.String[])
  id: CreateHostBuilder``1(System.String[])
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: CreateHostBuilder<Startup>(String[])
  nameWithType: MixHelper.CreateHostBuilder<Startup>(String[])
  fullName: Mix.Lib.Helpers.MixHelper.CreateHostBuilder<Startup>(System.String[])
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreateHostBuilder
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: >-
      public static IHostBuilder CreateHostBuilder<Startup>(string[] args)
          where Startup : class
    parameters:
    - id: args
      type: System.String[]
    typeParameters:
    - id: Startup
    return:
      type: Microsoft.Extensions.Hosting.IHostBuilder
    content.vb: Public Shared Function CreateHostBuilder(Of Startup As Class)(args As String()) As IHostBuilder
  overload: Mix.Lib.Helpers.MixHelper.CreateHostBuilder*
  nameWithType.vb: MixHelper.CreateHostBuilder(Of Startup)(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Lib.Helpers.MixHelper.CreateHostBuilder(Of Startup)(System.String())
  name.vb: CreateHostBuilder(Of Startup)(String())
- uid: Mix.Lib.Helpers.MixHelper.MixCli(System.String[])
  commentId: M:Mix.Lib.Helpers.MixHelper.MixCli(System.String[])
  id: MixCli(System.String[])
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: MixCli(String[])
  nameWithType: MixHelper.MixCli(String[])
  fullName: Mix.Lib.Helpers.MixHelper.MixCli(System.String[])
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCli
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 58
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static void MixCli(string[] args)
    parameters:
    - id: args
      type: System.String[]
    content.vb: Public Shared Sub MixCli(args As String())
  overload: Mix.Lib.Helpers.MixHelper.MixCli*
  nameWithType.vb: MixHelper.MixCli(String())
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Lib.Helpers.MixHelper.MixCli(System.String())
  name.vb: MixCli(String())
- uid: Mix.Lib.Helpers.MixHelper.CopyFolder(System.String,System.String)
  commentId: M:Mix.Lib.Helpers.MixHelper.CopyFolder(System.String,System.String)
  id: CopyFolder(System.String,System.String)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: CopyFolder(String, String)
  nameWithType: MixHelper.CopyFolder(String, String)
  fullName: Mix.Lib.Helpers.MixHelper.CopyFolder(System.String, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CopyFolder
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 99
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static bool CopyFolder(string srcPath, string desPath)
    parameters:
    - id: srcPath
      type: System.String
    - id: desPath
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function CopyFolder(srcPath As String, desPath As String) As Boolean
  overload: Mix.Lib.Helpers.MixHelper.CopyFolder*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.MixHelper.IsDefaultId``1(``0)
  commentId: M:Mix.Lib.Helpers.MixHelper.IsDefaultId``1(``0)
  id: IsDefaultId``1(``0)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: IsDefaultId<TPrimaryKey>(TPrimaryKey)
  nameWithType: MixHelper.IsDefaultId<TPrimaryKey>(TPrimaryKey)
  fullName: Mix.Lib.Helpers.MixHelper.IsDefaultId<TPrimaryKey>(TPrimaryKey)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsDefaultId
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 121
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static bool IsDefaultId<TPrimaryKey>(TPrimaryKey id)
    parameters:
    - id: id
      type: '{TPrimaryKey}'
    typeParameters:
    - id: TPrimaryKey
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsDefaultId(Of TPrimaryKey)(id As TPrimaryKey) As Boolean
  overload: Mix.Lib.Helpers.MixHelper.IsDefaultId*
  nameWithType.vb: MixHelper.IsDefaultId(Of TPrimaryKey)(TPrimaryKey)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Lib.Helpers.MixHelper.IsDefaultId(Of TPrimaryKey)(TPrimaryKey)
  name.vb: IsDefaultId(Of TPrimaryKey)(TPrimaryKey)
- uid: Mix.Lib.Helpers.MixHelper.SerializeObject(System.Object)
  commentId: M:Mix.Lib.Helpers.MixHelper.SerializeObject(System.Object)
  id: SerializeObject(System.Object)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: SerializeObject(Object)
  nameWithType: MixHelper.SerializeObject(Object)
  fullName: Mix.Lib.Helpers.MixHelper.SerializeObject(System.Object)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SerializeObject
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 126
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static string SerializeObject(object obj)
    parameters:
    - id: obj
      type: System.Object
    return:
      type: System.String
    content.vb: Public Shared Function SerializeObject(obj As Object) As String
  overload: Mix.Lib.Helpers.MixHelper.SerializeObject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.MixHelper.GetFileModel(Microsoft.AspNetCore.Http.IFormFile,System.String)
  commentId: M:Mix.Lib.Helpers.MixHelper.GetFileModel(Microsoft.AspNetCore.Http.IFormFile,System.String)
  id: GetFileModel(Microsoft.AspNetCore.Http.IFormFile,System.String)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: GetFileModel(IFormFile, String)
  nameWithType: MixHelper.GetFileModel(IFormFile, String)
  fullName: Mix.Lib.Helpers.MixHelper.GetFileModel(Microsoft.AspNetCore.Http.IFormFile, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetFileModel
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 141
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static FileModel GetFileModel(IFormFile file, string folder)
    parameters:
    - id: file
      type: Microsoft.AspNetCore.Http.IFormFile
    - id: folder
      type: System.String
    return:
      type: FileModel
    content.vb: Public Shared Function GetFileModel(file As IFormFile, folder As String) As FileModel
  overload: Mix.Lib.Helpers.MixHelper.GetFileModel*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.MixHelper.ParseEnumToObject(Type)
  commentId: M:Mix.Lib.Helpers.MixHelper.ParseEnumToObject(Type)
  id: ParseEnumToObject(Type)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: ParseEnumToObject(Type)
  nameWithType: MixHelper.ParseEnumToObject(Type)
  fullName: Mix.Lib.Helpers.MixHelper.ParseEnumToObject(Type)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseEnumToObject
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 151
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static List<object> ParseEnumToObject(Type enumType)
    parameters:
    - id: enumType
      type: Type
    return:
      type: List{System.Object}
    content.vb: Public Shared Function ParseEnumToObject(enumType As Type) As List(Of Object)
  overload: Mix.Lib.Helpers.MixHelper.ParseEnumToObject*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.MixHelper.LoadEnumValues(Type)
  commentId: M:Mix.Lib.Helpers.MixHelper.LoadEnumValues(Type)
  id: LoadEnumValues(Type)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: LoadEnumValues(Type)
  nameWithType: MixHelper.LoadEnumValues(Type)
  fullName: Mix.Lib.Helpers.MixHelper.LoadEnumValues(Type)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadEnumValues
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 162
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static List<object> LoadEnumValues(Type enumType)
    parameters:
    - id: enumType
      type: Type
    return:
      type: List{System.Object}
    content.vb: Public Shared Function LoadEnumValues(enumType As Type) As List(Of Object)
  overload: Mix.Lib.Helpers.MixHelper.LoadEnumValues*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.MixHelper.HandleException``1(``0,Exception)
  commentId: M:Mix.Lib.Helpers.MixHelper.HandleException``1(``0,Exception)
  id: HandleException``1(``0,Exception)
  parent: Mix.Lib.Helpers.MixHelper
  langs:
  - csharp
  - vb
  name: HandleException<TResult>(TResult, Exception)
  nameWithType: MixHelper.HandleException<TResult>(TResult, Exception)
  fullName: Mix.Lib.Helpers.MixHelper.HandleException<TResult>(TResult, Exception)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/MixHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: HandleException
    path: ../../mix.core/src/platform/mix.library/Helpers/MixHelper.cs
    startLine: 173
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  syntax:
    content: public static void HandleException<TResult>(TResult result, Exception ex)
    parameters:
    - id: result
      type: '{TResult}'
    - id: ex
      type: Exception
    typeParameters:
    - id: TResult
    content.vb: Public Shared Sub HandleException(Of TResult)(result As TResult, ex As Exception)
  overload: Mix.Lib.Helpers.MixHelper.HandleException*
  nameWithType.vb: MixHelper.HandleException(Of TResult)(TResult, Exception)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Lib.Helpers.MixHelper.HandleException(Of TResult)(TResult, Exception)
  name.vb: HandleException(Of TResult)(TResult, Exception)
references:
- uid: Mix.Lib.Helpers
  commentId: N:Mix.Lib.Helpers
  name: Mix.Lib.Helpers
  nameWithType: Mix.Lib.Helpers
  fullName: Mix.Lib.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Helpers.MixHelper.CreateHostBuilder*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.CreateHostBuilder
  name: CreateHostBuilder
  nameWithType: MixHelper.CreateHostBuilder
  fullName: Mix.Lib.Helpers.MixHelper.CreateHostBuilder
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Microsoft.Extensions.Hosting.IHostBuilder
  commentId: T:Microsoft.Extensions.Hosting.IHostBuilder
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostBuilder
  nameWithType: IHostBuilder
  fullName: Microsoft.Extensions.Hosting.IHostBuilder
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
- uid: Mix.Lib.Helpers.MixHelper.MixCli*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.MixCli
  name: MixCli
  nameWithType: MixHelper.MixCli
  fullName: Mix.Lib.Helpers.MixHelper.MixCli
- uid: Mix.Lib.Helpers.MixHelper.CopyFolder*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.CopyFolder
  name: CopyFolder
  nameWithType: MixHelper.CopyFolder
  fullName: Mix.Lib.Helpers.MixHelper.CopyFolder
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.Helpers.MixHelper.IsDefaultId*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.IsDefaultId
  name: IsDefaultId
  nameWithType: MixHelper.IsDefaultId
  fullName: Mix.Lib.Helpers.MixHelper.IsDefaultId
- uid: '{TPrimaryKey}'
  commentId: '!:TPrimaryKey'
  definition: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: Mix.Lib.Helpers.MixHelper.SerializeObject*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.SerializeObject
  name: SerializeObject
  nameWithType: MixHelper.SerializeObject
  fullName: Mix.Lib.Helpers.MixHelper.SerializeObject
- uid: Mix.Lib.Helpers.MixHelper.GetFileModel*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.GetFileModel
  name: GetFileModel
  nameWithType: MixHelper.GetFileModel
  fullName: Mix.Lib.Helpers.MixHelper.GetFileModel
- uid: Microsoft.AspNetCore.Http.IFormFile
  commentId: T:Microsoft.AspNetCore.Http.IFormFile
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: FileModel
  isExternal: true
  name: FileModel
  nameWithType: FileModel
  fullName: FileModel
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Mix.Lib.Helpers.MixHelper.ParseEnumToObject*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.ParseEnumToObject
  name: ParseEnumToObject
  nameWithType: MixHelper.ParseEnumToObject
  fullName: Mix.Lib.Helpers.MixHelper.ParseEnumToObject
- uid: Type
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: Type
- uid: List{System.Object}
  commentId: '!:List{System.Object}'
  definition: List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: List<System.Object>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Helpers.MixHelper.LoadEnumValues*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.LoadEnumValues
  name: LoadEnumValues
  nameWithType: MixHelper.LoadEnumValues
  fullName: Mix.Lib.Helpers.MixHelper.LoadEnumValues
- uid: Mix.Lib.Helpers.MixHelper.HandleException*
  commentId: Overload:Mix.Lib.Helpers.MixHelper.HandleException
  name: HandleException
  nameWithType: MixHelper.HandleException
  fullName: Mix.Lib.Helpers.MixHelper.HandleException
- uid: '{TResult}'
  commentId: '!:TResult'
  definition: TResult
  name: TResult
  nameWithType: TResult
  fullName: TResult
- uid: Exception
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: Exception
- uid: TResult
  commentId: '!:TResult'
  name: TResult
  nameWithType: TResult
  fullName: TResult
