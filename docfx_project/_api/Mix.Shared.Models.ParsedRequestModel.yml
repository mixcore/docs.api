### YamlMime:ManagedReference
items:
- uid: Mix.Shared.Models.ParsedRequestModel
  commentId: T:Mix.Shared.Models.ParsedRequestModel
  id: ParsedRequestModel
  parent: Mix.Shared.Models
  children:
  - Mix.Shared.Models.ParsedRequestModel.#ctor
  - Mix.Shared.Models.ParsedRequestModel.#ctor(System.String,System.String,System.String,System.String)
  - Mix.Shared.Models.ParsedRequestModel.Body
  - Mix.Shared.Models.ParsedRequestModel.Endpoint
  - Mix.Shared.Models.ParsedRequestModel.Method
  - Mix.Shared.Models.ParsedRequestModel.RequestIp
  langs:
  - csharp
  - vb
  name: ParsedRequestModel
  nameWithType: ParsedRequestModel
  fullName: Mix.Shared.Models.ParsedRequestModel
  type: Class
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParsedRequestModel
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 2
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public class ParsedRequestModel
    content.vb: Public Class ParsedRequestModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Shared.Models.ParsedRequestModel.Body
  commentId: P:Mix.Shared.Models.ParsedRequestModel.Body
  id: Body
  parent: Mix.Shared.Models.ParsedRequestModel
  langs:
  - csharp
  - vb
  name: Body
  nameWithType: ParsedRequestModel.Body
  fullName: Mix.Shared.Models.ParsedRequestModel.Body
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Body
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 4
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public string Body { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Body As String
  overload: Mix.Shared.Models.ParsedRequestModel.Body*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Models.ParsedRequestModel.RequestIp
  commentId: P:Mix.Shared.Models.ParsedRequestModel.RequestIp
  id: RequestIp
  parent: Mix.Shared.Models.ParsedRequestModel
  langs:
  - csharp
  - vb
  name: RequestIp
  nameWithType: ParsedRequestModel.RequestIp
  fullName: Mix.Shared.Models.ParsedRequestModel.RequestIp
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RequestIp
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 5
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public string RequestIp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RequestIp As String
  overload: Mix.Shared.Models.ParsedRequestModel.RequestIp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Models.ParsedRequestModel.Endpoint
  commentId: P:Mix.Shared.Models.ParsedRequestModel.Endpoint
  id: Endpoint
  parent: Mix.Shared.Models.ParsedRequestModel
  langs:
  - csharp
  - vb
  name: Endpoint
  nameWithType: ParsedRequestModel.Endpoint
  fullName: Mix.Shared.Models.ParsedRequestModel.Endpoint
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Endpoint
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 6
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public string Endpoint { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Endpoint As String
  overload: Mix.Shared.Models.ParsedRequestModel.Endpoint*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Models.ParsedRequestModel.Method
  commentId: P:Mix.Shared.Models.ParsedRequestModel.Method
  id: Method
  parent: Mix.Shared.Models.ParsedRequestModel
  langs:
  - csharp
  - vb
  name: Method
  nameWithType: ParsedRequestModel.Method
  fullName: Mix.Shared.Models.ParsedRequestModel.Method
  type: Property
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Method
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 7
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public string Method { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Method As String
  overload: Mix.Shared.Models.ParsedRequestModel.Method*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Shared.Models.ParsedRequestModel.#ctor
  commentId: M:Mix.Shared.Models.ParsedRequestModel.#ctor
  id: '#ctor'
  parent: Mix.Shared.Models.ParsedRequestModel
  langs:
  - csharp
  - vb
  name: ParsedRequestModel()
  nameWithType: ParsedRequestModel.ParsedRequestModel()
  fullName: Mix.Shared.Models.ParsedRequestModel.ParsedRequestModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 9
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public ParsedRequestModel()
    content.vb: Public Sub New
  overload: Mix.Shared.Models.ParsedRequestModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Shared.Models.ParsedRequestModel.#ctor(System.String,System.String,System.String,System.String)
  commentId: M:Mix.Shared.Models.ParsedRequestModel.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: Mix.Shared.Models.ParsedRequestModel
  langs:
  - csharp
  - vb
  name: ParsedRequestModel(String, String, String, String)
  nameWithType: ParsedRequestModel.ParsedRequestModel(String, String, String, String)
  fullName: Mix.Shared.Models.ParsedRequestModel.ParsedRequestModel(System.String, System.String, System.String, System.String)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.shared/Models/ParsedRequestModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.shared/Models/ParsedRequestModel.cs
    startLine: 13
  assemblies:
  - mix.shared
  namespace: Mix.Shared.Models
  syntax:
    content: public ParsedRequestModel(string ip, string endpoint, string method, string body)
    parameters:
    - id: ip
      type: System.String
    - id: endpoint
      type: System.String
    - id: method
      type: System.String
    - id: body
      type: System.String
    content.vb: Public Sub New(ip As String, endpoint As String, method As String, body As String)
  overload: Mix.Shared.Models.ParsedRequestModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Shared.Models
  commentId: N:Mix.Shared.Models
  name: Mix.Shared.Models
  nameWithType: Mix.Shared.Models
  fullName: Mix.Shared.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Shared.Models.ParsedRequestModel.Body*
  commentId: Overload:Mix.Shared.Models.ParsedRequestModel.Body
  name: Body
  nameWithType: ParsedRequestModel.Body
  fullName: Mix.Shared.Models.ParsedRequestModel.Body
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Shared.Models.ParsedRequestModel.RequestIp*
  commentId: Overload:Mix.Shared.Models.ParsedRequestModel.RequestIp
  name: RequestIp
  nameWithType: ParsedRequestModel.RequestIp
  fullName: Mix.Shared.Models.ParsedRequestModel.RequestIp
- uid: Mix.Shared.Models.ParsedRequestModel.Endpoint*
  commentId: Overload:Mix.Shared.Models.ParsedRequestModel.Endpoint
  name: Endpoint
  nameWithType: ParsedRequestModel.Endpoint
  fullName: Mix.Shared.Models.ParsedRequestModel.Endpoint
- uid: Mix.Shared.Models.ParsedRequestModel.Method*
  commentId: Overload:Mix.Shared.Models.ParsedRequestModel.Method
  name: Method
  nameWithType: ParsedRequestModel.Method
  fullName: Mix.Shared.Models.ParsedRequestModel.Method
- uid: Mix.Shared.Models.ParsedRequestModel.#ctor*
  commentId: Overload:Mix.Shared.Models.ParsedRequestModel.#ctor
  name: ParsedRequestModel
  nameWithType: ParsedRequestModel.ParsedRequestModel
  fullName: Mix.Shared.Models.ParsedRequestModel.ParsedRequestModel
