### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixContributorViewModel
  commentId: T:Mix.Lib.ViewModels.MixContributorViewModel
  id: MixContributorViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixContributorViewModel.#ctor
  - Mix.Lib.ViewModels.MixContributorViewModel.#ctor(MixContributor,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixContributorViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixContributorViewModel.Avatar
  - Mix.Lib.ViewModels.MixContributorViewModel.ContentType
  - Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId
  - Mix.Lib.ViewModels.MixContributorViewModel.IntContentId
  - Mix.Lib.ViewModels.MixContributorViewModel.IsOwner
  - Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync(Mix.Lib.Services.MixIdentityService)
  - Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId
  - Mix.Lib.ViewModels.MixContributorViewModel.UserId
  - Mix.Lib.ViewModels.MixContributorViewModel.UserName
  langs:
  - csharp
  - vb
  name: MixContributorViewModel
  nameWithType: MixContributorViewModel
  fullName: Mix.Lib.ViewModels.MixContributorViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixContributorViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixContributorViewModel : ViewModelBase<MixCmsContext, MixContributor, int, MixContributorViewModel>'
    content.vb: >-
      Public Class MixContributorViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixContributor, Integer, MixContributorViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId
  id: MixTenantId
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: MixContributorViewModel.MixTenantId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.UserId
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.UserId
  id: UserId
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: MixContributorViewModel.UserId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.UserId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid UserId { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property UserId As Guid
  overload: Mix.Lib.ViewModels.MixContributorViewModel.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.IsOwner
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.IsOwner
  id: IsOwner
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: IsOwner
  nameWithType: MixContributorViewModel.IsOwner
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.IsOwner
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsOwner
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public bool IsOwner { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsOwner As Boolean
  overload: Mix.Lib.ViewModels.MixContributorViewModel.IsOwner*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.IntContentId
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.IntContentId
  id: IntContentId
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: IntContentId
  nameWithType: MixContributorViewModel.IntContentId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.IntContentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IntContentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int? IntContentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property IntContentId As Integer?
  overload: Mix.Lib.ViewModels.MixContributorViewModel.IntContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId
  id: GuidContentId
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: GuidContentId
  nameWithType: MixContributorViewModel.GuidContentId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GuidContentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid? GuidContentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public Property GuidContentId As Guid?
  overload: Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.ContentType
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.ContentType
  id: ContentType
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: MixContributorViewModel.ContentType
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.ContentType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ContentType
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixContentType ContentType { get; set; }
    parameters: []
    return:
      type: MixContentType
    content.vb: Public Property ContentType As MixContentType
  overload: Mix.Lib.ViewModels.MixContributorViewModel.ContentType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.Avatar
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.Avatar
  id: Avatar
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: MixContributorViewModel.Avatar
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.Avatar
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Avatar
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Avatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Avatar As String
  overload: Mix.Lib.ViewModels.MixContributorViewModel.Avatar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.UserName
  commentId: P:Mix.Lib.ViewModels.MixContributorViewModel.UserName
  id: UserName
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: MixContributorViewModel.UserName
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.UserName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Mix.Lib.ViewModels.MixContributorViewModel.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixContributorViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: MixContributorViewModel()
  nameWithType: MixContributorViewModel.MixContributorViewModel()
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.MixContributorViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 21
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixContributorViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixContributorViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.#ctor(MixContributor,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixContributorViewModel.#ctor(MixContributor,UnitOfWorkInfo)
  id: '#ctor(MixContributor,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: MixContributorViewModel(MixContributor, UnitOfWorkInfo)
  nameWithType: MixContributorViewModel.MixContributorViewModel(MixContributor, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.MixContributorViewModel(MixContributor, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 25
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixContributorViewModel(MixContributor entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixContributor
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixContributor, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixContributorViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixContributorViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: MixContributorViewModel(UnitOfWorkInfo)
  nameWithType: MixContributorViewModel.MixContributorViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.MixContributorViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixContributorViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixContributorViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync(Mix.Lib.Services.MixIdentityService)
  commentId: M:Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync(Mix.Lib.Services.MixIdentityService)
  id: LoadUserDataAsync(Mix.Lib.Services.MixIdentityService)
  parent: Mix.Lib.ViewModels.MixContributorViewModel
  langs:
  - csharp
  - vb
  name: LoadUserDataAsync(MixIdentityService)
  nameWithType: MixContributorViewModel.LoadUserDataAsync(MixIdentityService)
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync(Mix.Lib.Services.MixIdentityService)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixContributorViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadUserDataAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixContributorViewModel.cs
    startLine: 44
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Task LoadUserDataAsync(MixIdentityService identityService)
    parameters:
    - id: identityService
      type: Mix.Lib.Services.MixIdentityService
    return:
      type: Task
    content.vb: Public Function LoadUserDataAsync(identityService As MixIdentityService) As Task
  overload: Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId
  name: MixTenantId
  nameWithType: MixContributorViewModel.MixTenantId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.MixContributorViewModel.UserId*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.UserId
  name: UserId
  nameWithType: MixContributorViewModel.UserId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.UserId
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Mix.Lib.ViewModels.MixContributorViewModel.IsOwner*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.IsOwner
  name: IsOwner
  nameWithType: MixContributorViewModel.IsOwner
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.IsOwner
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.ViewModels.MixContributorViewModel.IntContentId*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.IntContentId
  name: IntContentId
  nameWithType: MixContributorViewModel.IntContentId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.IntContentId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId
  name: GuidContentId
  nameWithType: MixContributorViewModel.GuidContentId
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.GuidContentId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixContributorViewModel.ContentType*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.ContentType
  name: ContentType
  nameWithType: MixContributorViewModel.ContentType
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.ContentType
- uid: MixContentType
  isExternal: true
  name: MixContentType
  nameWithType: MixContentType
  fullName: MixContentType
- uid: Mix.Lib.ViewModels.MixContributorViewModel.Avatar*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.Avatar
  name: Avatar
  nameWithType: MixContributorViewModel.Avatar
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.Avatar
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixContributorViewModel.UserName*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.UserName
  name: UserName
  nameWithType: MixContributorViewModel.UserName
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.UserName
- uid: Mix.Lib.ViewModels.MixContributorViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.#ctor
  name: MixContributorViewModel
  nameWithType: MixContributorViewModel.MixContributorViewModel
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.MixContributorViewModel
- uid: MixContributor
  commentId: '!:MixContributor'
  isExternal: true
  name: MixContributor
  nameWithType: MixContributor
  fullName: MixContributor
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync
  name: LoadUserDataAsync
  nameWithType: MixContributorViewModel.LoadUserDataAsync
  fullName: Mix.Lib.ViewModels.MixContributorViewModel.LoadUserDataAsync
- uid: Mix.Lib.Services.MixIdentityService
  commentId: T:Mix.Lib.Services.MixIdentityService
  parent: Mix.Lib.Services
  name: MixIdentityService
  nameWithType: MixIdentityService
  fullName: Mix.Lib.Services.MixIdentityService
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.Services
  commentId: N:Mix.Lib.Services
  name: Mix.Lib.Services
  nameWithType: Mix.Lib.Services
  fullName: Mix.Lib.Services
