### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Helpers.QueryFilterHelper
  commentId: T:Mix.Cms.Lib.Helpers.QueryFilterHelper
  id: QueryFilterHelper
  parent: Mix.Cms.Lib.Helpers
  children:
  - Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression(Newtonsoft.Json.Linq.JObject)
  - Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel
  langs:
  - csharp
  - vb
  name: QueryFilterHelper
  nameWithType: QueryFilterHelper
  fullName: Mix.Cms.Lib.Helpers.QueryFilterHelper
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Helpers/QueryFilterHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QueryFilterHelper
    path: ../../mix.core/src/Mix.Cms.Lib/Helpers/QueryFilterHelper.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Helpers
  syntax:
    content: public class QueryFilterHelper
    content.vb: Public Class QueryFilterHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel
  commentId: M:Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel
  id: TestCreateModel
  parent: Mix.Cms.Lib.Helpers.QueryFilterHelper
  langs:
  - csharp
  - vb
  name: TestCreateModel()
  nameWithType: QueryFilterHelper.TestCreateModel()
  fullName: Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel()
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Helpers/QueryFilterHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TestCreateModel
    path: ../../mix.core/src/Mix.Cms.Lib/Helpers/QueryFilterHelper.cs
    startLine: 13
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Helpers
  syntax:
    content: public void TestCreateModel()
    content.vb: Public Sub TestCreateModel
  overload: Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression(Newtonsoft.Json.Linq.JObject)
  commentId: M:Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression(Newtonsoft.Json.Linq.JObject)
  id: CreateExpression(Newtonsoft.Json.Linq.JObject)
  parent: Mix.Cms.Lib.Helpers.QueryFilterHelper
  langs:
  - csharp
  - vb
  name: CreateExpression(JObject)
  nameWithType: QueryFilterHelper.CreateExpression(JObject)
  fullName: Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression(Newtonsoft.Json.Linq.JObject)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/Helpers/QueryFilterHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreateExpression
    path: ../../mix.core/src/Mix.Cms.Lib/Helpers/QueryFilterHelper.cs
    startLine: 38
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Helpers
  syntax:
    content: public static Expression<Func<MixAttributeSetValue, bool>> CreateExpression(JObject jsonQuery)
    parameters:
    - id: jsonQuery
      type: Newtonsoft.Json.Linq.JObject
    return:
      type: System.Linq.Expressions.Expression{System.Func{Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,System.Boolean}}
    content.vb: Public Shared Function CreateExpression(jsonQuery As JObject) As Expression(Of Func(Of MixAttributeSetValue, Boolean))
  overload: Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Cms.Lib.Helpers
  commentId: N:Mix.Cms.Lib.Helpers
  name: Mix.Cms.Lib.Helpers
  nameWithType: Mix.Cms.Lib.Helpers
  fullName: Mix.Cms.Lib.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel*
  commentId: Overload:Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel
  name: TestCreateModel
  nameWithType: QueryFilterHelper.TestCreateModel
  fullName: Mix.Cms.Lib.Helpers.QueryFilterHelper.TestCreateModel
- uid: Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression*
  commentId: Overload:Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression
  name: CreateExpression
  nameWithType: QueryFilterHelper.CreateExpression
  fullName: Mix.Cms.Lib.Helpers.QueryFilterHelper.CreateExpression
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: System.Linq.Expressions.Expression{System.Func{Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{Mix.Cms.Lib.Models.Cms.MixAttributeSetValue,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<MixAttributeSetValue, Boolean>>
  nameWithType: Expression<Func<MixAttributeSetValue, Boolean>>
  fullName: System.Linq.Expressions.Expression<System.Func<Mix.Cms.Lib.Models.Cms.MixAttributeSetValue, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of MixAttributeSetValue, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of Mix.Cms.Lib.Models.Cms.MixAttributeSetValue, System.Boolean))
  name.vb: Expression(Of Func(Of MixAttributeSetValue, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
    name: MixAttributeSetValue
    nameWithType: MixAttributeSetValue
    fullName: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: System.Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
    name: MixAttributeSetValue
    nameWithType: MixAttributeSetValue
    fullName: Mix.Cms.Lib.Models.Cms.MixAttributeSetValue
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
