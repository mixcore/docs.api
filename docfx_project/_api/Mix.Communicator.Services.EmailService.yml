### YamlMime:ManagedReference
items:
- uid: Mix.Communicator.Services.EmailService
  commentId: T:Mix.Communicator.Services.EmailService
  id: EmailService
  parent: Mix.Communicator.Services
  children:
  - Mix.Communicator.Services.EmailService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  - Mix.Communicator.Services.EmailService.SendMail(System.String,System.String,System.String,System.String)
  - Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate(System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: EmailService
  nameWithType: EmailService
  fullName: Mix.Communicator.Services.EmailService
  type: Class
  source:
    remote:
      path: src/platform/mix.communicator/Services/EmailService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EmailService
    path: ../../mix.core/src/platform/mix.communicator/Services/EmailService.cs
    startLine: 9
  assemblies:
  - mix.communicator
  namespace: Mix.Communicator.Services
  syntax:
    content: public class EmailService
    content.vb: Public Class EmailService
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Communicator.Services.EmailService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:Mix.Communicator.Services.EmailService.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration)'
  parent: Mix.Communicator.Services.EmailService
  langs:
  - csharp
  - vb
  name: EmailService(IConfiguration)
  nameWithType: EmailService.EmailService(IConfiguration)
  fullName: Mix.Communicator.Services.EmailService.EmailService(Microsoft.Extensions.Configuration.IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.communicator/Services/EmailService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.communicator/Services/EmailService.cs
    startLine: 13
  assemblies:
  - mix.communicator
  namespace: Mix.Communicator.Services
  syntax:
    content: public EmailService(IConfiguration configuration)
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
    content.vb: Public Sub New(configuration As IConfiguration)
  overload: Mix.Communicator.Services.EmailService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Communicator.Services.EmailService.SendMail(System.String,System.String,System.String,System.String)
  commentId: M:Mix.Communicator.Services.EmailService.SendMail(System.String,System.String,System.String,System.String)
  id: SendMail(System.String,System.String,System.String,System.String)
  parent: Mix.Communicator.Services.EmailService
  langs:
  - csharp
  - vb
  name: SendMail(String, String, String, String)
  nameWithType: EmailService.SendMail(String, String, String, String)
  fullName: Mix.Communicator.Services.EmailService.SendMail(System.String, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.communicator/Services/EmailService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendMail
    path: ../../mix.core/src/platform/mix.communicator/Services/EmailService.cs
    startLine: 20
  assemblies:
  - mix.communicator
  namespace: Mix.Communicator.Services
  syntax:
    content: public void SendMail(string subject, string message, string to, string from = null)
    parameters:
    - id: subject
      type: System.String
    - id: message
      type: System.String
    - id: to
      type: System.String
    - id: from
      type: System.String
    content.vb: Public Sub SendMail(subject As String, message As String, to As String, from As String = Nothing)
  overload: Mix.Communicator.Services.EmailService.SendMail*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate(System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)
  commentId: M:Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate(System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)
  id: SendMailWithEdmTemplate(System.String,Newtonsoft.Json.Linq.JObject,System.String,System.String,System.String)
  parent: Mix.Communicator.Services.EmailService
  langs:
  - csharp
  - vb
  name: SendMailWithEdmTemplate(String, JObject, String, String, String)
  nameWithType: EmailService.SendMailWithEdmTemplate(String, JObject, String, String, String)
  fullName: Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate(System.String, Newtonsoft.Json.Linq.JObject, System.String, System.String, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.communicator/Services/EmailService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendMailWithEdmTemplate
    path: ../../mix.core/src/platform/mix.communicator/Services/EmailService.cs
    startLine: 50
  assemblies:
  - mix.communicator
  namespace: Mix.Communicator.Services
  syntax:
    content: public Task SendMailWithEdmTemplate(string template, JObject data, string subject, string to, string from = null)
    parameters:
    - id: template
      type: System.String
    - id: data
      type: Newtonsoft.Json.Linq.JObject
    - id: subject
      type: System.String
    - id: to
      type: System.String
    - id: from
      type: System.String
    return:
      type: Task
    content.vb: Public Function SendMailWithEdmTemplate(template As String, data As JObject, subject As String, to As String, from As String = Nothing) As Task
  overload: Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Communicator.Services
  commentId: N:Mix.Communicator.Services
  name: Mix.Communicator.Services
  nameWithType: Mix.Communicator.Services
  fullName: Mix.Communicator.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Communicator.Services.EmailService.#ctor*
  commentId: Overload:Mix.Communicator.Services.EmailService.#ctor
  name: EmailService
  nameWithType: EmailService.EmailService
  fullName: Mix.Communicator.Services.EmailService.EmailService
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Mix.Communicator.Services.EmailService.SendMail*
  commentId: Overload:Mix.Communicator.Services.EmailService.SendMail
  name: SendMail
  nameWithType: EmailService.SendMail
  fullName: Mix.Communicator.Services.EmailService.SendMail
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate*
  commentId: Overload:Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate
  name: SendMailWithEdmTemplate
  nameWithType: EmailService.SendMailWithEdmTemplate
  fullName: Mix.Communicator.Services.EmailService.SendMailWithEdmTemplate
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
