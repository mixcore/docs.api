### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations
  commentId: T:Mix.Tenancy.Domain.Models.ColumnConfigurations
  id: ColumnConfigurations
  parent: Mix.Tenancy.Domain.Models
  children:
  - Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo
  - Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength
  - Mix.Tenancy.Domain.Models.ColumnConfigurations.Options
  - Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName
  - Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload
  langs:
  - csharp
  - vb
  name: ColumnConfigurations
  nameWithType: ColumnConfigurations
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ColumnConfigurations
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 4
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public class ColumnConfigurations
    content.vb: Public Class ColumnConfigurations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.Options
  commentId: P:Mix.Tenancy.Domain.Models.ColumnConfigurations.Options
  id: Options
  parent: Mix.Tenancy.Domain.Models.ColumnConfigurations
  langs:
  - csharp
  - vb
  name: Options
  nameWithType: ColumnConfigurations.Options
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.Options
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Options
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 6
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public string Options { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Options As String
  overload: Mix.Tenancy.Domain.Models.ColumnConfigurations.Options*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength
  commentId: P:Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength
  id: MaxLength
  parent: Mix.Tenancy.Domain.Models.ColumnConfigurations
  langs:
  - csharp
  - vb
  name: MaxLength
  nameWithType: ColumnConfigurations.MaxLength
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MaxLength
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 7
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public int? MaxLength { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property MaxLength As Integer?
  overload: Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo
  commentId: P:Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo
  id: BelongTo
  parent: Mix.Tenancy.Domain.Models.ColumnConfigurations
  langs:
  - csharp
  - vb
  name: BelongTo
  nameWithType: ColumnConfigurations.BelongTo
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: BelongTo
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 8
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public string BelongTo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property BelongTo As String
  overload: Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName
  commentId: P:Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName
  id: OptionsConfigurationName
  parent: Mix.Tenancy.Domain.Models.ColumnConfigurations
  langs:
  - csharp
  - vb
  name: OptionsConfigurationName
  nameWithType: ColumnConfigurations.OptionsConfigurationName
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: OptionsConfigurationName
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 9
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public string OptionsConfigurationName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property OptionsConfigurationName As String
  overload: Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload
  commentId: P:Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload
  id: Upload
  parent: Mix.Tenancy.Domain.Models.ColumnConfigurations
  langs:
  - csharp
  - vb
  name: Upload
  nameWithType: ColumnConfigurations.Upload
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Upload
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 10
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public UploadConfigurations Upload { get; set; }
    parameters: []
    return:
      type: Mix.Tenancy.Domain.Models.UploadConfigurations
    content.vb: Public Property Upload As UploadConfigurations
  overload: Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Tenancy.Domain.Models
  commentId: N:Mix.Tenancy.Domain.Models
  name: Mix.Tenancy.Domain.Models
  nameWithType: Mix.Tenancy.Domain.Models
  fullName: Mix.Tenancy.Domain.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.Options*
  commentId: Overload:Mix.Tenancy.Domain.Models.ColumnConfigurations.Options
  name: Options
  nameWithType: ColumnConfigurations.Options
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.Options
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength*
  commentId: Overload:Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength
  name: MaxLength
  nameWithType: ColumnConfigurations.MaxLength
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.MaxLength
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo*
  commentId: Overload:Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo
  name: BelongTo
  nameWithType: ColumnConfigurations.BelongTo
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.BelongTo
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName*
  commentId: Overload:Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName
  name: OptionsConfigurationName
  nameWithType: ColumnConfigurations.OptionsConfigurationName
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.OptionsConfigurationName
- uid: Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload*
  commentId: Overload:Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload
  name: Upload
  nameWithType: ColumnConfigurations.Upload
  fullName: Mix.Tenancy.Domain.Models.ColumnConfigurations.Upload
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations
  commentId: T:Mix.Tenancy.Domain.Models.UploadConfigurations
  parent: Mix.Tenancy.Domain.Models
  name: UploadConfigurations
  nameWithType: UploadConfigurations
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations
