### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel
  commentId: T:Mix.Lib.ViewModels.MixTenantSystemViewModel
  id: MixTenantSystemViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor(MixTenant,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.Description
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain
  - Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName
  langs:
  - csharp
  - vb
  name: MixTenantSystemViewModel
  nameWithType: MixTenantSystemViewModel
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantSystemViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixTenantSystemViewModel : ViewModelBase<MixCmsContext, MixTenant, int, MixTenantSystemViewModel>'
    content.vb: >-
      Public Class MixTenantSystemViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixTenant, Integer, MixTenantSystemViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain
  commentId: P:Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain
  id: PrimaryDomain
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: PrimaryDomain
  nameWithType: MixTenantSystemViewModel.PrimaryDomain
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PrimaryDomain
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string PrimaryDomain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PrimaryDomain As String
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName
  commentId: P:Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName
  id: SystemName
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MixTenantSystemViewModel.SystemName
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName
  commentId: P:Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName
  id: DisplayName
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MixTenantSystemViewModel.DisplayName
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DisplayName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.Description
  commentId: P:Mix.Lib.ViewModels.MixTenantSystemViewModel.Description
  id: Description
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MixTenantSystemViewModel.Description
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.Description
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains
  commentId: P:Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains
  id: Domains
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: Domains
  nameWithType: MixTenantSystemViewModel.Domains
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Domains
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDomainViewModel> Domains { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.ViewModels.MixDomainViewModel}
    content.vb: Public Property Domains As List(Of MixDomainViewModel)
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: MixTenantSystemViewModel()
  nameWithType: MixTenantSystemViewModel.MixTenantSystemViewModel()
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.MixTenantSystemViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTenantSystemViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor(MixTenant,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor(MixTenant,UnitOfWorkInfo)
  id: '#ctor(MixTenant,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: MixTenantSystemViewModel(MixTenant, UnitOfWorkInfo)
  nameWithType: MixTenantSystemViewModel.MixTenantSystemViewModel(MixTenant, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.MixTenantSystemViewModel(MixTenant, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTenantSystemViewModel(MixTenant entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixTenant
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixTenant, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: MixTenantSystemViewModel(UnitOfWorkInfo)
  nameWithType: MixTenantSystemViewModel.MixTenantSystemViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.MixTenantSystemViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixTenantSystemViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView
  commentId: M:Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView
  id: ExpandView
  parent: Mix.Lib.ViewModels.MixTenantSystemViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixTenantSystemViewModel.ExpandView()
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixTenantSystemViewModel.cs
    startLine: 38
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain
  name: PrimaryDomain
  nameWithType: MixTenantSystemViewModel.PrimaryDomain
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.PrimaryDomain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName
  name: SystemName
  nameWithType: MixTenantSystemViewModel.SystemName
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.SystemName
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName
  name: DisplayName
  nameWithType: MixTenantSystemViewModel.DisplayName
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.DisplayName
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.Description*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.Description
  name: Description
  nameWithType: MixTenantSystemViewModel.Description
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.Description
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains
  name: Domains
  nameWithType: MixTenantSystemViewModel.Domains
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.Domains
- uid: List{Mix.Lib.ViewModels.MixDomainViewModel}
  commentId: '!:List{Mix.Lib.ViewModels.MixDomainViewModel}'
  definition: List`1
  name: List<MixDomainViewModel>
  nameWithType: List<MixDomainViewModel>
  fullName: List<Mix.Lib.ViewModels.MixDomainViewModel>
  nameWithType.vb: List(Of MixDomainViewModel)
  fullName.vb: List(Of Mix.Lib.ViewModels.MixDomainViewModel)
  name.vb: List(Of MixDomainViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixDomainViewModel
    name: MixDomainViewModel
    nameWithType: MixDomainViewModel
    fullName: Mix.Lib.ViewModels.MixDomainViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixDomainViewModel
    name: MixDomainViewModel
    nameWithType: MixDomainViewModel
    fullName: Mix.Lib.ViewModels.MixDomainViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.#ctor
  name: MixTenantSystemViewModel
  nameWithType: MixTenantSystemViewModel.MixTenantSystemViewModel
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.MixTenantSystemViewModel
- uid: MixTenant
  isExternal: true
  name: MixTenant
  nameWithType: MixTenant
  fullName: MixTenant
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView*
  commentId: Overload:Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView
  name: ExpandView
  nameWithType: MixTenantSystemViewModel.ExpandView
  fullName: Mix.Lib.ViewModels.MixTenantSystemViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
