### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixPageContentViewModel
  commentId: T:Mix.Lib.ViewModels.MixPageContentViewModel
  id: MixPageContentViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixPageContentViewModel.#ctor
  - Mix.Lib.ViewModels.MixPageContentViewModel.#ctor(MixPageContent,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixPageContentViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixPageContentViewModel.ClassName
  - Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync
  - Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync
  - Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl
  - Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView
  - Mix.Lib.ViewModels.MixPageContentViewModel.PageSize
  - Mix.Lib.ViewModels.MixPageContentViewModel.Type
  - Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases
  langs:
  - csharp
  - vb
  name: MixPageContentViewModel
  nameWithType: MixPageContentViewModel
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPageContentViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 3
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixPageContentViewModel : ExtraColumnMultilingualSEOContentViewModelBase<MixCmsContext, MixPageContent, int, MixPageContentViewModel>'
    content.vb: >-
      Public Class MixPageContentViewModel
          Inherits ExtraColumnMultilingualSEOContentViewModelBase(Of MixCmsContext, MixPageContent, Integer, MixPageContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixPageContentViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: MixPageContentViewModel()
  nameWithType: MixPageContentViewModel.MixPageContentViewModel()
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.MixPageContentViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixPageContentViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor(MixPageContent,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixPageContentViewModel.#ctor(MixPageContent,UnitOfWorkInfo)
  id: '#ctor(MixPageContent,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: MixPageContentViewModel(MixPageContent, UnitOfWorkInfo)
  nameWithType: MixPageContentViewModel.MixPageContentViewModel(MixPageContent, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.MixPageContentViewModel(MixPageContent, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixPageContentViewModel(MixPageContent entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixPageContent
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixPageContent, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixPageContentViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: MixPageContentViewModel(UnitOfWorkInfo)
  nameWithType: MixPageContentViewModel.MixPageContentViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.MixPageContentViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixPageContentViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.ClassName
  commentId: P:Mix.Lib.ViewModels.MixPageContentViewModel.ClassName
  id: ClassName
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: ClassName
  nameWithType: MixPageContentViewModel.ClassName
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.ClassName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ClassName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string ClassName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClassName As String
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.ClassName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.PageSize
  commentId: P:Mix.Lib.ViewModels.MixPageContentViewModel.PageSize
  id: PageSize
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: MixPageContentViewModel.PageSize
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.PageSize
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageSize
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 27
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int? PageSize { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property PageSize As Integer?
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.PageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.Type
  commentId: P:Mix.Lib.ViewModels.MixPageContentViewModel.Type
  id: Type
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MixPageContentViewModel.Type
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.Type
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixPageType Type { get; set; }
    parameters: []
    return:
      type: MixPageType
    content.vb: Public Property Type As MixPageType
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl
  commentId: P:Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl
  id: DetailUrl
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: DetailUrl
  nameWithType: MixPageContentViewModel.DetailUrl
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DetailUrl
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 29
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string DetailUrl { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DetailUrl As String
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases
  commentId: P:Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases
  id: UrlAliases
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: UrlAliases
  nameWithType: MixPageContentViewModel.UrlAliases
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UrlAliases
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 31
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixUrlAliasViewModel> UrlAliases { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.ViewModels.MixUrlAliasViewModel}
    content.vb: Public Property UrlAliases As List(Of MixUrlAliasViewModel)
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView
  commentId: M:Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView
  id: ExpandView
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixPageContentViewModel.ExpandView()
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 35
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync
  commentId: M:Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync
  id: CreateParentAsync
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: CreateParentAsync()
  nameWithType: MixPageContentViewModel.CreateParentAsync()
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreateParentAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 50
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public override Task<int> CreateParentAsync()
    return:
      type: Task{System.Int32}
    content.vb: Public Overrides Function CreateParentAsync As Task(Of Integer)
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync
  commentId: M:Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync
  id: DeleteHandlerAsync
  parent: Mix.Lib.ViewModels.MixPageContentViewModel
  langs:
  - csharp
  - vb
  name: DeleteHandlerAsync()
  nameWithType: MixPageContentViewModel.DeleteHandlerAsync()
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync()
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeleteHandlerAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixPageContentViewModel.cs
    startLine: 61
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: protected override Task DeleteHandlerAsync()
    return:
      type: Task
    content.vb: Protected Overrides Function DeleteHandlerAsync As Task
  overload: Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.#ctor
  name: MixPageContentViewModel
  nameWithType: MixPageContentViewModel.MixPageContentViewModel
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.MixPageContentViewModel
- uid: MixPageContent
  isExternal: true
  name: MixPageContent
  nameWithType: MixPageContent
  fullName: MixPageContent
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.ClassName*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.ClassName
  name: ClassName
  nameWithType: MixPageContentViewModel.ClassName
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.ClassName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.PageSize*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.PageSize
  name: PageSize
  nameWithType: MixPageContentViewModel.PageSize
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.PageSize
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.Type*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.Type
  name: Type
  nameWithType: MixPageContentViewModel.Type
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.Type
- uid: MixPageType
  isExternal: true
  name: MixPageType
  nameWithType: MixPageType
  fullName: MixPageType
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl
  name: DetailUrl
  nameWithType: MixPageContentViewModel.DetailUrl
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.DetailUrl
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases
  name: UrlAliases
  nameWithType: MixPageContentViewModel.UrlAliases
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.UrlAliases
- uid: List{Mix.Lib.ViewModels.MixUrlAliasViewModel}
  commentId: '!:List{Mix.Lib.ViewModels.MixUrlAliasViewModel}'
  definition: List`1
  name: List<MixUrlAliasViewModel>
  nameWithType: List<MixUrlAliasViewModel>
  fullName: List<Mix.Lib.ViewModels.MixUrlAliasViewModel>
  nameWithType.vb: List(Of MixUrlAliasViewModel)
  fullName.vb: List(Of Mix.Lib.ViewModels.MixUrlAliasViewModel)
  name.vb: List(Of MixUrlAliasViewModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.MixUrlAliasViewModel
    name: MixUrlAliasViewModel
    nameWithType: MixUrlAliasViewModel
    fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.MixUrlAliasViewModel
    name: MixUrlAliasViewModel
    nameWithType: MixUrlAliasViewModel
    fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView
  name: ExpandView
  nameWithType: MixPageContentViewModel.ExpandView
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync
  name: CreateParentAsync
  nameWithType: MixPageContentViewModel.CreateParentAsync
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.CreateParentAsync
- uid: Task{System.Int32}
  commentId: '!:Task{System.Int32}'
  definition: Task`1
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: Task<System.Int32>
  nameWithType.vb: Task(Of Int32)
  fullName.vb: Task(Of System.Int32)
  name.vb: Task(Of Int32)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync
  name: DeleteHandlerAsync
  nameWithType: MixPageContentViewModel.DeleteHandlerAsync
  fullName: Mix.Lib.ViewModels.MixPageContentViewModel.DeleteHandlerAsync
