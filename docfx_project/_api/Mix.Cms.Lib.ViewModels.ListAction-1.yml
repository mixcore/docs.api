### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.ListAction`1
  commentId: T:Mix.Cms.Lib.ViewModels.ListAction`1
  id: ListAction`1
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.ListAction`1.Action
  - Mix.Cms.Lib.ViewModels.ListAction`1.Data
  langs:
  - csharp
  - vb
  name: ListAction<T>
  nameWithType: ListAction<T>
  fullName: Mix.Cms.Lib.ViewModels.ListAction<T>
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ListAction
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 336
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public class ListAction<T>
    typeParameters:
    - id: T
    content.vb: Public Class ListAction(Of T)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: ListAction(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: Mix.Cms.Lib.ViewModels.ListAction(Of T)
  name.vb: ListAction(Of T)
- uid: Mix.Cms.Lib.ViewModels.ListAction`1.Action
  commentId: P:Mix.Cms.Lib.ViewModels.ListAction`1.Action
  id: Action
  parent: Mix.Cms.Lib.ViewModels.ListAction`1
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: ListAction<T>.Action
  fullName: Mix.Cms.Lib.ViewModels.ListAction<T>.Action
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Action
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 338
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("action")]

      public string Action { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("action")>

      Public Property Action As String
  overload: Mix.Cms.Lib.ViewModels.ListAction`1.Action*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: action
  nameWithType.vb: ListAction(Of T).Action
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Lib.ViewModels.ListAction(Of T).Action
- uid: Mix.Cms.Lib.ViewModels.ListAction`1.Data
  commentId: P:Mix.Cms.Lib.ViewModels.ListAction`1.Data
  id: Data
  parent: Mix.Cms.Lib.ViewModels.ListAction`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ListAction<T>.Data
  fullName: Mix.Cms.Lib.ViewModels.ListAction<T>.Data
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 341
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("data")]

      public List<T> Data { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{{T}}
    content.vb: >-
      <JsonProperty("data")>

      Public Property Data As List(Of T)
  overload: Mix.Cms.Lib.ViewModels.ListAction`1.Data*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: data
  nameWithType.vb: ListAction(Of T).Data
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Cms.Lib.ViewModels.ListAction(Of T).Data
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.ListAction`1.Action*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ListAction`1.Action
  name: Action
  nameWithType: ListAction<T>.Action
  fullName: Mix.Cms.Lib.ViewModels.ListAction<T>.Action
  nameWithType.vb: ListAction(Of T).Action
  fullName.vb: Mix.Cms.Lib.ViewModels.ListAction(Of T).Action
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.ListAction`1.Data*
  commentId: Overload:Mix.Cms.Lib.ViewModels.ListAction`1.Data
  name: Data
  nameWithType: ListAction<T>.Data
  fullName: Mix.Cms.Lib.ViewModels.ListAction<T>.Data
  nameWithType.vb: ListAction(Of T).Data
  fullName.vb: Mix.Cms.Lib.ViewModels.ListAction(Of T).Data
- uid: System.Collections.Generic.List{{T}}
  commentId: T:System.Collections.Generic.List{`0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
