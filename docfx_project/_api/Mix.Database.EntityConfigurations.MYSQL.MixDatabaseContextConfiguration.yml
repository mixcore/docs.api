### YamlMime:ManagedReference
items:
- uid: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration
  commentId: T:Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration
  id: MixDatabaseContextConfiguration
  parent: Mix.Database.EntityConfigurations.MYSQL
  children:
  - Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure(EntityTypeBuilder{MixDatabaseContext})
  langs:
  - csharp
  - vb
  name: MixDatabaseContextConfiguration
  nameWithType: MixDatabaseContextConfiguration
  fullName: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration
  type: Class
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/MYSQL/MixDatabaseContextConfiguration.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseContextConfiguration
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/MYSQL/MixDatabaseContextConfiguration.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations.MYSQL
  syntax:
    content: 'public class MixDatabaseContextConfiguration : MySqlTenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, int>'
    content.vb: >-
      Public Class MixDatabaseContextConfiguration
          Inherits MySqlTenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Integer)
  inheritance:
  - System.Object
  - Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  - Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  - Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  - Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32}
  inheritedMembers:
  - Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  - Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  - Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Config
  - Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure(EntityTypeBuilder{MixDatabaseContext})
  commentId: M:Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure(EntityTypeBuilder{MixDatabaseContext})
  id: Configure(EntityTypeBuilder{MixDatabaseContext})
  parent: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration
  langs:
  - csharp
  - vb
  name: Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType: MixDatabaseContextConfiguration.Configure(EntityTypeBuilder<MixDatabaseContext>)
  fullName: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure(EntityTypeBuilder<MixDatabaseContext>)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/EntityConfigurations/MYSQL/MixDatabaseContextConfiguration.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configure
    path: ../../mix.core/src/platform/mix.database/EntityConfigurations/MYSQL/MixDatabaseContextConfiguration.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.EntityConfigurations.MYSQL
  syntax:
    content: public override void Configure(EntityTypeBuilder<MixDatabaseContext> builder)
    parameters:
    - id: builder
      type: EntityTypeBuilder{MixDatabaseContext}
    content.vb: Public Overrides Sub Configure(builder As EntityTypeBuilder(Of MixDatabaseContext))
  overridden: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  overload: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure*
  nameWithType.vb: MixDatabaseContextConfiguration.Configure(EntityTypeBuilder(Of MixDatabaseContext))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure(EntityTypeBuilder(Of MixDatabaseContext))
  name.vb: Configure(EntityTypeBuilder(Of MixDatabaseContext))
references:
- uid: Mix.Database.EntityConfigurations.MYSQL
  commentId: N:Mix.Database.EntityConfigurations.MYSQL
  name: Mix.Database.EntityConfigurations.MYSQL
  nameWithType: Mix.Database.EntityConfigurations.MYSQL
  fullName: Mix.Database.EntityConfigurations.MYSQL
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  commentId: T:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  parent: Mix.Database.EntityConfigurations.Base
  definition: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
  name: EntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>
  nameWithType: EntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>
  nameWithType.vb: EntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants)
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants)
  name.vb: EntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
    name: MySqlDatabaseConstants
    nameWithType: MySqlDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
    name: MySqlDatabaseConstants
    nameWithType: MySqlDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  commentId: T:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  parent: Mix.Database.EntityConfigurations.Base
  definition: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
  name: TenantEntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>
  nameWithType: TenantEntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>
  nameWithType.vb: TenantEntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants)
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants)
  name.vb: TenantEntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
    name: MySqlDatabaseConstants
    nameWithType: MySqlDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
    name: MySqlDatabaseConstants
    nameWithType: MySqlDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  commentId: T:Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  parent: Mix.Database.EntityConfigurations.Base
  definition: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
  name: TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>
  nameWithType: TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>
  nameWithType.vb: TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants)
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants)
  name.vb: TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
    name: TenantEntityUniqueNameBaseConfiguration
    nameWithType: TenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
    name: MySqlDatabaseConstants
    nameWithType: MySqlDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
    name: TenantEntityUniqueNameBaseConfiguration
    nameWithType: TenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
    name: MySqlDatabaseConstants
    nameWithType: MySqlDatabaseConstants
    fullName: Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32}
  commentId: T:Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32}
  parent: Mix.Database.EntityConfigurations.MYSQL.Base
  definition: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
  name: MySqlTenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, Int32>
  nameWithType: MySqlTenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, Int32>
  fullName: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, System.Int32>
  nameWithType.vb: MySqlTenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Int32)
  fullName.vb: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, System.Int32)
  name.vb: MySqlTenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Int32)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
    name: MySqlTenantEntityUniqueNameBaseConfiguration
    nameWithType: MySqlTenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
    name: MySqlTenantEntityUniqueNameBaseConfiguration
    nameWithType: MySqlTenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  commentId: M:Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  parent: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType: TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Configure(EntityTypeBuilder<MixDatabaseContext>)
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType.vb: TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Configure(EntityTypeBuilder(Of MixDatabaseContext))
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Configure(EntityTypeBuilder(Of MixDatabaseContext))
  name.vb: Configure(EntityTypeBuilder(Of MixDatabaseContext))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  commentId: M:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  parent: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType: TenantEntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Configure(EntityTypeBuilder<MixDatabaseContext>)
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType.vb: TenantEntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Configure(EntityTypeBuilder(Of MixDatabaseContext))
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Configure(EntityTypeBuilder(Of MixDatabaseContext))
  name.vb: Configure(EntityTypeBuilder(Of MixDatabaseContext))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Config
  commentId: P:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Config
  parent: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Config
  name: Config
  nameWithType: EntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Config
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Config
  nameWithType.vb: EntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Config
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Config
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  commentId: M:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}.Configure(EntityTypeBuilder{MixDatabaseContext})
  parent: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration{MixDatabaseContext,System.Int32,Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants}
  definition: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  name: Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType: EntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Configure(EntityTypeBuilder<MixDatabaseContext>)
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Configure(EntityTypeBuilder<MixDatabaseContext>)
  nameWithType.vb: EntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Configure(EntityTypeBuilder(Of MixDatabaseContext))
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Configure(EntityTypeBuilder(Of MixDatabaseContext))
  name.vb: Configure(EntityTypeBuilder(Of MixDatabaseContext))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration<MixDatabaseContext, Int32, MySqlDatabaseConstants>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration(Of MixDatabaseContext, Int32, MySqlDatabaseConstants).Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of MixDatabaseContext, System.Int32, Mix.Database.EntityConfigurations.MYSQL.MySqlDatabaseConstants).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
  commentId: T:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
  name: EntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  name.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3
    name: EntityBaseConfiguration
    nameWithType: EntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base
  commentId: N:Mix.Database.EntityConfigurations.Base
  name: Mix.Database.EntityConfigurations.Base
  nameWithType: Mix.Database.EntityConfigurations.Base
  fullName: Mix.Database.EntityConfigurations.Base
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
  commentId: T:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
  name: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType.vb: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  name.vb: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3
    name: TenantEntityBaseConfiguration
    nameWithType: TenantEntityBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
  commentId: T:Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
  name: TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType: TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>
  nameWithType.vb: TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig)
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig)
  name.vb: TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
    name: TenantEntityUniqueNameBaseConfiguration
    nameWithType: TenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3
    name: TenantEntityUniqueNameBaseConfiguration
    nameWithType: TenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TConfig
    nameWithType: TConfig
    fullName: TConfig
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
  commentId: T:Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
  name: MySqlTenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey>
  nameWithType: MySqlTenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey>
  fullName: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey>
  nameWithType.vb: MySqlTenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey)
  fullName.vb: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey)
  name.vb: MySqlTenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey)
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
    name: MySqlTenantEntityUniqueNameBaseConfiguration
    nameWithType: MySqlTenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration`2
    name: MySqlTenantEntityUniqueNameBaseConfiguration
    nameWithType: MySqlTenantEntityUniqueNameBaseConfiguration
    fullName: Mix.Database.EntityConfigurations.MYSQL.Base.MySqlTenantEntityUniqueNameBaseConfiguration
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.MYSQL.Base
  commentId: N:Mix.Database.EntityConfigurations.MYSQL.Base
  name: Mix.Database.EntityConfigurations.MYSQL.Base
  nameWithType: Mix.Database.EntityConfigurations.MYSQL.Base
  fullName: Mix.Database.EntityConfigurations.MYSQL.Base
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  commentId: M:Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  isExternal: true
  name: Configure(EntityTypeBuilder<T>)
  nameWithType: TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  nameWithType.vb: TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  name.vb: Configure(EntityTypeBuilder(Of T))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityUniqueNameBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  commentId: M:Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  isExternal: true
  name: Configure(EntityTypeBuilder<T>)
  nameWithType: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  nameWithType.vb: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  fullName.vb: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  name.vb: Configure(EntityTypeBuilder(Of T))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
    fullName: Mix.Database.EntityConfigurations.Base.TenantEntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Config
  commentId: P:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Config
  name: Config
  nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Config
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Config
  nameWithType.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Config
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Config
- uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  commentId: M:Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
  isExternal: true
  name: Configure(EntityTypeBuilder<T>)
  nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure(EntityTypeBuilder<T>)
  nameWithType.vb: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  fullName.vb: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure(EntityTypeBuilder(Of T))
  name.vb: Configure(EntityTypeBuilder(Of T))
  spec.csharp:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration<T, TPrimaryKey, TConfig>.Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration`3.Configure(EntityTypeBuilder{`0})
    name: Configure
    nameWithType: EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
    fullName: Mix.Database.EntityConfigurations.Base.EntityBaseConfiguration(Of T, TPrimaryKey, TConfig).Configure
  - name: (
    nameWithType: (
    fullName: (
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure*
  commentId: Overload:Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure
  name: Configure
  nameWithType: MixDatabaseContextConfiguration.Configure
  fullName: Mix.Database.EntityConfigurations.MYSQL.MixDatabaseContextConfiguration.Configure
- uid: EntityTypeBuilder{MixDatabaseContext}
  commentId: '!:EntityTypeBuilder{MixDatabaseContext}'
  definition: EntityTypeBuilder`1
  name: EntityTypeBuilder<MixDatabaseContext>
  nameWithType: EntityTypeBuilder<MixDatabaseContext>
  fullName: EntityTypeBuilder<MixDatabaseContext>
  nameWithType.vb: EntityTypeBuilder(Of MixDatabaseContext)
  fullName.vb: EntityTypeBuilder(Of MixDatabaseContext)
  name.vb: EntityTypeBuilder(Of MixDatabaseContext)
  spec.csharp:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseContext
    name: MixDatabaseContext
    nameWithType: MixDatabaseContext
    fullName: MixDatabaseContext
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: EntityTypeBuilder`1
  isExternal: true
  name: EntityTypeBuilder<>
  nameWithType: EntityTypeBuilder<>
  fullName: EntityTypeBuilder<>
  nameWithType.vb: EntityTypeBuilder(Of )
  fullName.vb: EntityTypeBuilder(Of )
  name.vb: EntityTypeBuilder(Of )
  spec.csharp:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: EntityTypeBuilder`1
    name: EntityTypeBuilder
    nameWithType: EntityTypeBuilder
    fullName: EntityTypeBuilder
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
