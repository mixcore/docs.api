### YamlMime:ManagedReference
items:
- uid: Mix.Queue.Services.QueueService
  commentId: T:Mix.Queue.Services.QueueService
  id: QueueService
  parent: Mix.Queue.Services
  children:
  - Mix.Queue.Services.QueueService.#ctor
  - Mix.Queue.Services.QueueService.Any(System.String)
  - Mix.Queue.Services.QueueService.ConsumeQueue(System.Int32,System.String)
  - Mix.Queue.Services.QueueService.PushMessage``1(``0,System.String,System.Boolean)
  - Mix.Queue.Services.QueueService.PushQueue(Mix.Queue.Models.MessageQueueModel)
  - Mix.Queue.Services.QueueService.PushQueue(System.String,System.String,System.Object)
  langs:
  - csharp
  - vb
  name: QueueService
  nameWithType: QueueService
  fullName: Mix.Queue.Services.QueueService
  type: Class
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QueueService
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 8
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: 'public class QueueService : IQueueService<MessageQueueModel>'
    content.vb: >-
      Public Class QueueService
          Implements IQueueService(Of MessageQueueModel)
  inheritance:
  - System.Object
  implements:
  - Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Queue.Services.QueueService.#ctor
  commentId: M:Mix.Queue.Services.QueueService.#ctor
  id: '#ctor'
  parent: Mix.Queue.Services.QueueService
  langs:
  - csharp
  - vb
  name: QueueService()
  nameWithType: QueueService.QueueService()
  fullName: Mix.Queue.Services.QueueService.QueueService()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 11
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: public QueueService()
    content.vb: Public Sub New
  overload: Mix.Queue.Services.QueueService.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Services.QueueService.Any(System.String)
  commentId: M:Mix.Queue.Services.QueueService.Any(System.String)
  id: Any(System.String)
  parent: Mix.Queue.Services.QueueService
  langs:
  - csharp
  - vb
  name: Any(String)
  nameWithType: QueueService.Any(String)
  fullName: Mix.Queue.Services.QueueService.Any(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Any
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 16
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: public bool Any(string topicId)
    parameters:
    - id: topicId
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Function Any(topicId As String) As Boolean
  overload: Mix.Queue.Services.QueueService.Any*
  implements:
  - Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.Any(System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Services.QueueService.ConsumeQueue(System.Int32,System.String)
  commentId: M:Mix.Queue.Services.QueueService.ConsumeQueue(System.Int32,System.String)
  id: ConsumeQueue(System.Int32,System.String)
  parent: Mix.Queue.Services.QueueService
  langs:
  - csharp
  - vb
  name: ConsumeQueue(Int32, String)
  nameWithType: QueueService.ConsumeQueue(Int32, String)
  fullName: Mix.Queue.Services.QueueService.ConsumeQueue(System.Int32, System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConsumeQueue
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 22
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: public IList<MessageQueueModel> ConsumeQueue(int lenght, string topicId)
    parameters:
    - id: lenght
      type: System.Int32
    - id: topicId
      type: System.String
    return:
      type: System.Collections.Generic.IList{Mix.Queue.Models.MessageQueueModel}
    content.vb: Public Function ConsumeQueue(lenght As Integer, topicId As String) As IList(Of MessageQueueModel)
  overload: Mix.Queue.Services.QueueService.ConsumeQueue*
  implements:
  - Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.ConsumeQueue(System.Int32,System.String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Services.QueueService.PushQueue(Mix.Queue.Models.MessageQueueModel)
  commentId: M:Mix.Queue.Services.QueueService.PushQueue(Mix.Queue.Models.MessageQueueModel)
  id: PushQueue(Mix.Queue.Models.MessageQueueModel)
  parent: Mix.Queue.Services.QueueService
  langs:
  - csharp
  - vb
  name: PushQueue(MessageQueueModel)
  nameWithType: QueueService.PushQueue(MessageQueueModel)
  fullName: Mix.Queue.Services.QueueService.PushQueue(Mix.Queue.Models.MessageQueueModel)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PushQueue
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 55
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: public void PushQueue(MessageQueueModel model)
    parameters:
    - id: model
      type: Mix.Queue.Models.MessageQueueModel
    content.vb: Public Sub PushQueue(model As MessageQueueModel)
  overload: Mix.Queue.Services.QueueService.PushQueue*
  implements:
  - Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushQueue(Mix.Queue.Models.MessageQueueModel)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Services.QueueService.PushQueue(System.String,System.String,System.Object)
  commentId: M:Mix.Queue.Services.QueueService.PushQueue(System.String,System.String,System.Object)
  id: PushQueue(System.String,System.String,System.Object)
  parent: Mix.Queue.Services.QueueService
  langs:
  - csharp
  - vb
  name: PushQueue(String, String, Object)
  nameWithType: QueueService.PushQueue(String, String, Object)
  fullName: Mix.Queue.Services.QueueService.PushQueue(System.String, System.String, System.Object)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PushQueue
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 64
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: public void PushQueue(string topicId, string action, object data)
    parameters:
    - id: topicId
      type: System.String
    - id: action
      type: System.String
    - id: data
      type: System.Object
    content.vb: Public Sub PushQueue(topicId As String, action As String, data As Object)
  overload: Mix.Queue.Services.QueueService.PushQueue*
  implements:
  - Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushQueue(System.String,System.String,System.Object)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Services.QueueService.PushMessage``1(``0,System.String,System.Boolean)
  commentId: M:Mix.Queue.Services.QueueService.PushMessage``1(``0,System.String,System.Boolean)
  id: PushMessage``1(``0,System.String,System.Boolean)
  parent: Mix.Queue.Services.QueueService
  langs:
  - csharp
  - vb
  name: PushMessage<T>(T, String, Boolean)
  nameWithType: QueueService.PushMessage<T>(T, String, Boolean)
  fullName: Mix.Queue.Services.QueueService.PushMessage<T>(T, System.String, System.Boolean)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Services/QueueService.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PushMessage
    path: ../../mix.core/src/platform/mix.queue/Services/QueueService.cs
    startLine: 70
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Services
  syntax:
    content: public void PushMessage<T>(T data, string action, bool success)
    parameters:
    - id: data
      type: '{T}'
    - id: action
      type: System.String
    - id: success
      type: System.Boolean
    typeParameters:
    - id: T
    content.vb: Public Sub PushMessage(Of T)(data As T, action As String, success As Boolean)
  overload: Mix.Queue.Services.QueueService.PushMessage*
  implements:
  - Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushMessage``1({T},System.String,System.Boolean)
  nameWithType.vb: QueueService.PushMessage(Of T)(T, String, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Queue.Services.QueueService.PushMessage(Of T)(T, System.String, System.Boolean)
  name.vb: PushMessage(Of T)(T, String, Boolean)
references:
- uid: Mix.Queue.Services
  commentId: N:Mix.Queue.Services
  name: Mix.Queue.Services
  nameWithType: Mix.Queue.Services
  fullName: Mix.Queue.Services
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  commentId: T:Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  parent: Mix.Queue.Interfaces
  definition: Mix.Queue.Interfaces.IQueueService`1
  name: IQueueService<MessageQueueModel>
  nameWithType: IQueueService<MessageQueueModel>
  fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>
  nameWithType.vb: IQueueService(Of MessageQueueModel)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel)
  name.vb: IQueueService(Of MessageQueueModel)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: Mix.Queue.Interfaces.IQueueService
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: Mix.Queue.Interfaces.IQueueService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Queue.Interfaces.IQueueService`1
  commentId: T:Mix.Queue.Interfaces.IQueueService`1
  name: IQueueService<T>
  nameWithType: IQueueService<T>
  fullName: Mix.Queue.Interfaces.IQueueService<T>
  nameWithType.vb: IQueueService(Of T)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of T)
  name.vb: IQueueService(Of T)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: Mix.Queue.Interfaces.IQueueService
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1
    name: IQueueService
    nameWithType: IQueueService
    fullName: Mix.Queue.Interfaces.IQueueService
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Interfaces
  commentId: N:Mix.Queue.Interfaces
  name: Mix.Queue.Interfaces
  nameWithType: Mix.Queue.Interfaces
  fullName: Mix.Queue.Interfaces
- uid: Mix.Queue.Services.QueueService.#ctor*
  commentId: Overload:Mix.Queue.Services.QueueService.#ctor
  name: QueueService
  nameWithType: QueueService.QueueService
  fullName: Mix.Queue.Services.QueueService.QueueService
- uid: Mix.Queue.Services.QueueService.Any*
  commentId: Overload:Mix.Queue.Services.QueueService.Any
  name: Any
  nameWithType: QueueService.Any
  fullName: Mix.Queue.Services.QueueService.Any
- uid: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.Any(System.String)
  commentId: M:Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.Any(System.String)
  parent: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  definition: Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
  name: Any(String)
  nameWithType: IQueueService<MessageQueueModel>.Any(String)
  fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.Any(System.String)
  nameWithType.vb: IQueueService(Of MessageQueueModel).Any(String)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).Any(System.String)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
    name: Any
    nameWithType: IQueueService<MessageQueueModel>.Any
    fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.Any
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
    name: Any
    nameWithType: IQueueService(Of MessageQueueModel).Any
    fullName: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).Any
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
  commentId: M:Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
  isExternal: true
  name: Any(String)
  nameWithType: IQueueService<T>.Any(String)
  fullName: Mix.Queue.Interfaces.IQueueService<T>.Any(System.String)
  nameWithType.vb: IQueueService(Of T).Any(String)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of T).Any(System.String)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
    name: Any
    nameWithType: IQueueService<T>.Any
    fullName: Mix.Queue.Interfaces.IQueueService<T>.Any
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.Any(System.String)
    name: Any
    nameWithType: IQueueService(Of T).Any
    fullName: Mix.Queue.Interfaces.IQueueService(Of T).Any
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Services.QueueService.ConsumeQueue*
  commentId: Overload:Mix.Queue.Services.QueueService.ConsumeQueue
  name: ConsumeQueue
  nameWithType: QueueService.ConsumeQueue
  fullName: Mix.Queue.Services.QueueService.ConsumeQueue
- uid: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.ConsumeQueue(System.Int32,System.String)
  commentId: M:Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.ConsumeQueue(System.Int32,System.String)
  parent: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  definition: Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
  name: ConsumeQueue(Int32, String)
  nameWithType: IQueueService<MessageQueueModel>.ConsumeQueue(Int32, String)
  fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.ConsumeQueue(System.Int32, System.String)
  nameWithType.vb: IQueueService(Of MessageQueueModel).ConsumeQueue(Int32, String)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).ConsumeQueue(System.Int32, System.String)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
    name: ConsumeQueue
    nameWithType: IQueueService<MessageQueueModel>.ConsumeQueue
    fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.ConsumeQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
    name: ConsumeQueue
    nameWithType: IQueueService(Of MessageQueueModel).ConsumeQueue
    fullName: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).ConsumeQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Generic.IList{Mix.Queue.Models.MessageQueueModel}
  commentId: T:System.Collections.Generic.IList{Mix.Queue.Models.MessageQueueModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IList`1
  name: IList<MessageQueueModel>
  nameWithType: IList<MessageQueueModel>
  fullName: System.Collections.Generic.IList<Mix.Queue.Models.MessageQueueModel>
  nameWithType.vb: IList(Of MessageQueueModel)
  fullName.vb: System.Collections.Generic.IList(Of Mix.Queue.Models.MessageQueueModel)
  name.vb: IList(Of MessageQueueModel)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
  commentId: M:Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
  isExternal: true
  name: ConsumeQueue(Int32, String)
  nameWithType: IQueueService<T>.ConsumeQueue(Int32, String)
  fullName: Mix.Queue.Interfaces.IQueueService<T>.ConsumeQueue(System.Int32, System.String)
  nameWithType.vb: IQueueService(Of T).ConsumeQueue(Int32, String)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of T).ConsumeQueue(System.Int32, System.String)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
    name: ConsumeQueue
    nameWithType: IQueueService<T>.ConsumeQueue
    fullName: Mix.Queue.Interfaces.IQueueService<T>.ConsumeQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.ConsumeQueue(System.Int32,System.String)
    name: ConsumeQueue
    nameWithType: IQueueService(Of T).ConsumeQueue
    fullName: Mix.Queue.Interfaces.IQueueService(Of T).ConsumeQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IList`1
  commentId: T:System.Collections.Generic.IList`1
  isExternal: true
  name: IList<T>
  nameWithType: IList<T>
  fullName: System.Collections.Generic.IList<T>
  nameWithType.vb: IList(Of T)
  fullName.vb: System.Collections.Generic.IList(Of T)
  name.vb: IList(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: System.Collections.Generic.IList
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Queue.Services.QueueService.PushQueue*
  commentId: Overload:Mix.Queue.Services.QueueService.PushQueue
  name: PushQueue
  nameWithType: QueueService.PushQueue
  fullName: Mix.Queue.Services.QueueService.PushQueue
- uid: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushQueue(Mix.Queue.Models.MessageQueueModel)
  commentId: M:Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushQueue(Mix.Queue.Models.MessageQueueModel)
  parent: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  definition: Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
  name: PushQueue(MessageQueueModel)
  nameWithType: IQueueService<MessageQueueModel>.PushQueue(MessageQueueModel)
  fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.PushQueue(Mix.Queue.Models.MessageQueueModel)
  nameWithType.vb: IQueueService(Of MessageQueueModel).PushQueue(MessageQueueModel)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).PushQueue(Mix.Queue.Models.MessageQueueModel)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
    name: PushQueue
    nameWithType: IQueueService<MessageQueueModel>.PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
    name: PushQueue
    nameWithType: IQueueService(Of MessageQueueModel).PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Models.MessageQueueModel
  commentId: T:Mix.Queue.Models.MessageQueueModel
  parent: Mix.Queue.Models
  name: MessageQueueModel
  nameWithType: MessageQueueModel
  fullName: Mix.Queue.Models.MessageQueueModel
- uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
  commentId: M:Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
  name: PushQueue(T)
  nameWithType: IQueueService<T>.PushQueue(T)
  fullName: Mix.Queue.Interfaces.IQueueService<T>.PushQueue(T)
  nameWithType.vb: IQueueService(Of T).PushQueue(T)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of T).PushQueue(T)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
    name: PushQueue
    nameWithType: IQueueService<T>.PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService<T>.PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(`0)
    name: PushQueue
    nameWithType: IQueueService(Of T).PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService(Of T).PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Models
  commentId: N:Mix.Queue.Models
  name: Mix.Queue.Models
  nameWithType: Mix.Queue.Models
  fullName: Mix.Queue.Models
- uid: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushQueue(System.String,System.String,System.Object)
  commentId: M:Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushQueue(System.String,System.String,System.Object)
  parent: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  definition: Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
  name: PushQueue(String, String, Object)
  nameWithType: IQueueService<MessageQueueModel>.PushQueue(String, String, Object)
  fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.PushQueue(System.String, System.String, System.Object)
  nameWithType.vb: IQueueService(Of MessageQueueModel).PushQueue(String, String, Object)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).PushQueue(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
    name: PushQueue
    nameWithType: IQueueService<MessageQueueModel>.PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
    name: PushQueue
    nameWithType: IQueueService(Of MessageQueueModel).PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
  commentId: M:Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
  isExternal: true
  name: PushQueue(String, String, Object)
  nameWithType: IQueueService<T>.PushQueue(String, String, Object)
  fullName: Mix.Queue.Interfaces.IQueueService<T>.PushQueue(System.String, System.String, System.Object)
  nameWithType.vb: IQueueService(Of T).PushQueue(String, String, Object)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of T).PushQueue(System.String, System.String, System.Object)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
    name: PushQueue
    nameWithType: IQueueService<T>.PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService<T>.PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushQueue(System.String,System.String,System.Object)
    name: PushQueue
    nameWithType: IQueueService(Of T).PushQueue
    fullName: Mix.Queue.Interfaces.IQueueService(Of T).PushQueue
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Services.QueueService.PushMessage*
  commentId: Overload:Mix.Queue.Services.QueueService.PushMessage
  name: PushMessage
  nameWithType: QueueService.PushMessage
  fullName: Mix.Queue.Services.QueueService.PushMessage
- uid: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushMessage``1({T},System.String,System.Boolean)
  commentId: M:Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}.PushMessage``1(``0,System.String,System.Boolean)
  parent: Mix.Queue.Interfaces.IQueueService{Mix.Queue.Models.MessageQueueModel}
  definition: Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
  name: PushMessage<T>(T, String, Boolean)
  nameWithType: IQueueService<MessageQueueModel>.PushMessage<T>(T, String, Boolean)
  fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.PushMessage<T>(T, System.String, System.Boolean)
  nameWithType.vb: IQueueService(Of MessageQueueModel).PushMessage(Of T)(T, String, Boolean)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).PushMessage(Of T)(T, System.String, System.Boolean)
  name.vb: PushMessage(Of T)(T, String, Boolean)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
    name: PushMessage<T>
    nameWithType: IQueueService<MessageQueueModel>.PushMessage<T>
    fullName: Mix.Queue.Interfaces.IQueueService<Mix.Queue.Models.MessageQueueModel>.PushMessage<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
    name: PushMessage(Of T)
    nameWithType: IQueueService(Of MessageQueueModel).PushMessage(Of T)
    fullName: Mix.Queue.Interfaces.IQueueService(Of Mix.Queue.Models.MessageQueueModel).PushMessage(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: T
    nameWithType: T
    fullName: T
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
  commentId: M:Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
  isExternal: true
  name: PushMessage<TModel>(TModel, String, Boolean)
  nameWithType: IQueueService<T>.PushMessage<TModel>(TModel, String, Boolean)
  fullName: Mix.Queue.Interfaces.IQueueService<T>.PushMessage<TModel>(TModel, System.String, System.Boolean)
  nameWithType.vb: IQueueService(Of T).PushMessage(Of TModel)(TModel, String, Boolean)
  fullName.vb: Mix.Queue.Interfaces.IQueueService(Of T).PushMessage(Of TModel)(TModel, System.String, System.Boolean)
  name.vb: PushMessage(Of TModel)(TModel, String, Boolean)
  spec.csharp:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
    name: PushMessage<TModel>
    nameWithType: IQueueService<T>.PushMessage<TModel>
    fullName: Mix.Queue.Interfaces.IQueueService<T>.PushMessage<TModel>
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Queue.Interfaces.IQueueService`1.PushMessage``1(``0,System.String,System.Boolean)
    name: PushMessage(Of TModel)
    nameWithType: IQueueService(Of T).PushMessage(Of TModel)
    fullName: Mix.Queue.Interfaces.IQueueService(Of T).PushMessage(Of TModel)
  - name: (
    nameWithType: (
    fullName: (
  - name: TModel
    nameWithType: TModel
    fullName: TModel
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
