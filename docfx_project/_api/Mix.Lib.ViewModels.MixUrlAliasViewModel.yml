### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel
  commentId: T:Mix.Lib.ViewModels.MixUrlAliasViewModel
  id: MixUrlAliasViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor(MixUrlAlias,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId
  - Mix.Lib.ViewModels.MixUrlAliasViewModel.Type
  langs:
  - csharp
  - vb
  name: MixUrlAliasViewModel
  nameWithType: MixUrlAliasViewModel
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUrlAliasViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: 'public class MixUrlAliasViewModel : TenantDataViewModelBase<MixCmsContext, MixUrlAlias, int, MixUrlAliasViewModel>'
    content.vb: >-
      Public Class MixUrlAliasViewModel
          Inherits TenantDataViewModelBase(Of MixCmsContext, MixUrlAlias, Integer, MixUrlAliasViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId
  commentId: P:Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId
  id: SourceContentId
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: SourceContentId
  nameWithType: MixUrlAliasViewModel.SourceContentId
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SourceContentId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 7
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int? SourceContentId { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property SourceContentId As Integer?
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId
  commentId: P:Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId
  id: SourceContentGuidId
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: SourceContentGuidId
  nameWithType: MixUrlAliasViewModel.SourceContentGuidId
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SourceContentGuidId
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 9
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid? SourceContentGuidId { get; set; }
    parameters: []
    return:
      type: System.Nullable{Guid}
    content.vb: Public Property SourceContentGuidId As Guid?
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias
  commentId: P:Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias
  id: Alias
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: MixUrlAliasViewModel.Alias
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Alias
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Alias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Alias As String
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.Type
  commentId: P:Mix.Lib.ViewModels.MixUrlAliasViewModel.Type
  id: Type
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MixUrlAliasViewModel.Type
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.Type
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixUrlAliasType Type { get; set; }
    parameters: []
    return:
      type: MixUrlAliasType
    content.vb: Public Property Type As MixUrlAliasType
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: MixUrlAliasViewModel()
  nameWithType: MixUrlAliasViewModel.MixUrlAliasViewModel()
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.MixUrlAliasViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixUrlAliasViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: MixUrlAliasViewModel(UnitOfWorkInfo)
  nameWithType: MixUrlAliasViewModel.MixUrlAliasViewModel(UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.MixUrlAliasViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 23
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixUrlAliasViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor(MixUrlAlias,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor(MixUrlAlias,UnitOfWorkInfo)
  id: '#ctor(MixUrlAlias,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixUrlAliasViewModel
  langs:
  - csharp
  - vb
  name: MixUrlAliasViewModel(MixUrlAlias, UnitOfWorkInfo)
  nameWithType: MixUrlAliasViewModel.MixUrlAliasViewModel(MixUrlAlias, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.MixUrlAliasViewModel(MixUrlAlias, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUrlAliasViewModel.cs
    startLine: 27
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixUrlAliasViewModel(MixUrlAlias entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixUrlAlias
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixUrlAlias, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId*
  commentId: Overload:Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId
  name: SourceContentId
  nameWithType: MixUrlAliasViewModel.SourceContentId
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentId
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId*
  commentId: Overload:Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId
  name: SourceContentGuidId
  nameWithType: MixUrlAliasViewModel.SourceContentGuidId
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.SourceContentGuidId
- uid: System.Nullable{Guid}
  commentId: T:System.Nullable{Guid}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Guid>
  nameWithType: Nullable<Guid>
  fullName: System.Nullable<Guid>
  nameWithType.vb: Nullable(Of Guid)
  fullName.vb: System.Nullable(Of Guid)
  name.vb: Nullable(Of Guid)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Guid
    name: Guid
    nameWithType: Guid
    fullName: Guid
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias*
  commentId: Overload:Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias
  name: Alias
  nameWithType: MixUrlAliasViewModel.Alias
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.Alias
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.Type*
  commentId: Overload:Mix.Lib.ViewModels.MixUrlAliasViewModel.Type
  name: Type
  nameWithType: MixUrlAliasViewModel.Type
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.Type
- uid: MixUrlAliasType
  isExternal: true
  name: MixUrlAliasType
  nameWithType: MixUrlAliasType
  fullName: MixUrlAliasType
- uid: Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixUrlAliasViewModel.#ctor
  name: MixUrlAliasViewModel
  nameWithType: MixUrlAliasViewModel.MixUrlAliasViewModel
  fullName: Mix.Lib.ViewModels.MixUrlAliasViewModel.MixUrlAliasViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: MixUrlAlias
  commentId: '!:MixUrlAlias'
  isExternal: true
  name: MixUrlAlias
  nameWithType: MixUrlAlias
  fullName: MixUrlAlias
