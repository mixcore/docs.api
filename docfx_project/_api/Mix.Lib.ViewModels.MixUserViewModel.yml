### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.MixUserViewModel
  commentId: T:Mix.Lib.ViewModels.MixUserViewModel
  id: MixUserViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.MixUserViewModel.#ctor(Mix.Database.Entities.Account.MixUser,UnitOfWorkInfo)
  - Mix.Lib.ViewModels.MixUserViewModel.Avatar
  - Mix.Lib.ViewModels.MixUserViewModel.ChangePassword
  - Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime
  - Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData(System.Int32,JObject)
  - Mix.Lib.ViewModels.MixUserViewModel.DOB
  - Mix.Lib.ViewModels.MixUserViewModel.Email
  - Mix.Lib.ViewModels.MixUserViewModel.Endpoints
  - Mix.Lib.ViewModels.MixUserViewModel.FirstName
  - Mix.Lib.ViewModels.MixUserViewModel.Gender
  - Mix.Lib.ViewModels.MixUserViewModel.Id
  - Mix.Lib.ViewModels.MixUserViewModel.IsActived
  - Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword
  - Mix.Lib.ViewModels.MixUserViewModel.LastModified
  - Mix.Lib.ViewModels.MixUserViewModel.LastName
  - Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync(System.Int32,Mix.Lib.Services.MixDataService)
  - Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync(System.Int32,Mix.Lib.Services.MixDataService)
  - Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd
  - Mix.Lib.ViewModels.MixUserViewModel.MediaFile
  - Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy
  - Mix.Lib.ViewModels.MixUserViewModel.NickName
  - Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber
  - Mix.Lib.ViewModels.MixUserViewModel.ResetPassword
  - Mix.Lib.ViewModels.MixUserViewModel.Roles
  - Mix.Lib.ViewModels.MixUserViewModel.UserData
  - Mix.Lib.ViewModels.MixUserViewModel.UserName
  langs:
  - csharp
  - vb
  name: MixUserViewModel
  nameWithType: MixUserViewModel
  fullName: Mix.Lib.ViewModels.MixUserViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUserViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public class MixUserViewModel
    content.vb: Public Class MixUserViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.MixUserViewModel.Id
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.Id
  id: Id
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MixUserViewModel.Id
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Id
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Guid Id { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property Id As Guid
  overload: Mix.Lib.ViewModels.MixUserViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.UserName
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.UserName
  id: UserName
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: MixUserViewModel.UserName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.UserName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 13
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.Email
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.Email
  id: Email
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: MixUserViewModel.Email
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Email
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Email
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: MixUserViewModel.CreatedDateTime
  fullName: Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 15
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property CreatedDateTime As DateTime
  overload: Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd
  id: LockoutEnd
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: LockoutEnd
  nameWithType: MixUserViewModel.LockoutEnd
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LockoutEnd
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public DateTime? LockoutEnd { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property LockoutEnd As DateTime?
  overload: Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.IsActived
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.IsActived
  id: IsActived
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: IsActived
  nameWithType: MixUserViewModel.IsActived
  fullName: Mix.Lib.ViewModels.MixUserViewModel.IsActived
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsActived
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 17
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public bool IsActived { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActived As Boolean
  overload: Mix.Lib.ViewModels.MixUserViewModel.IsActived*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.LastModified
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.LastModified
  id: LastModified
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: MixUserViewModel.LastModified
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LastModified
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LastModified As Date?
  overload: Mix.Lib.ViewModels.MixUserViewModel.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy
  id: ModifiedBy
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: MixUserViewModel.ModifiedBy
  fullName: Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModifiedBy
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 19
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber
  id: PhoneNumber
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: PhoneNumber
  nameWithType: MixUserViewModel.PhoneNumber
  fullName: Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PhoneNumber
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 21
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string PhoneNumber { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property PhoneNumber As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.Avatar
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.Avatar
  id: Avatar
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: Avatar
  nameWithType: MixUserViewModel.Avatar
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Avatar
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Avatar
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 23
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Avatar { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Avatar As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.Avatar*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.NickName
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.NickName
  id: NickName
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: NickName
  nameWithType: MixUserViewModel.NickName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.NickName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NickName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string NickName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NickName As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.NickName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.FirstName
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.FirstName
  id: FirstName
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: FirstName
  nameWithType: MixUserViewModel.FirstName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.FirstName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FirstName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 25
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string FirstName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FirstName As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.FirstName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.LastName
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.LastName
  id: LastName
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: LastName
  nameWithType: MixUserViewModel.LastName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LastName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastName
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string LastName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property LastName As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.LastName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.Gender
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.Gender
  id: Gender
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: Gender
  nameWithType: MixUserViewModel.Gender
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Gender
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Gender
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 27
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Gender { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Gender As String
  overload: Mix.Lib.ViewModels.MixUserViewModel.Gender*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.DOB
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.DOB
  id: DOB
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: DOB
  nameWithType: MixUserViewModel.DOB
  fullName: Mix.Lib.ViewModels.MixUserViewModel.DOB
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DOB
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public DateTime? DOB { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property DOB As DateTime?
  overload: Mix.Lib.ViewModels.MixUserViewModel.DOB*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.MediaFile
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.MediaFile
  id: MediaFile
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: MediaFile
  nameWithType: MixUserViewModel.MediaFile
  fullName: Mix.Lib.ViewModels.MixUserViewModel.MediaFile
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MediaFile
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public FileModel MediaFile { get; set; }
    parameters: []
    return:
      type: FileModel
    content.vb: Public Property MediaFile As FileModel
  overload: Mix.Lib.ViewModels.MixUserViewModel.MediaFile*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.UserData
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.UserData
  id: UserData
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: MixUserViewModel.UserData
  fullName: Mix.Lib.ViewModels.MixUserViewModel.UserData
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserData
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public AdditionalDataContentViewModel UserData { get; set; }
    parameters: []
    return:
      type: Mix.Lib.ViewModels.AdditionalDataContentViewModel
    content.vb: Public Property UserData As AdditionalDataContentViewModel
  overload: Mix.Lib.ViewModels.MixUserViewModel.UserData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.Roles
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.Roles
  id: Roles
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: MixUserViewModel.Roles
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Roles
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Roles
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 34
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<AspNetUserRoles> Roles { get; set; }
    parameters: []
    return:
      type: List{Mix.Database.Entities.Account.AspNetUserRoles}
    content.vb: Public Property Roles As List(Of AspNetUserRoles)
  overload: Mix.Lib.ViewModels.MixUserViewModel.Roles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.Endpoints
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.Endpoints
  id: Endpoints
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: Endpoints
  nameWithType: MixUserViewModel.Endpoints
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Endpoints
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Endpoints
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 36
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<string> Endpoints { get; set; }
    parameters: []
    return:
      type: List{System.String}
    content.vb: Public Property Endpoints As List(Of String)
  overload: Mix.Lib.ViewModels.MixUserViewModel.Endpoints*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.ResetPassword
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.ResetPassword
  id: ResetPassword
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: ResetPassword
  nameWithType: MixUserViewModel.ResetPassword
  fullName: Mix.Lib.ViewModels.MixUserViewModel.ResetPassword
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ResetPassword
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 40
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public ResetPasswordViewModel ResetPassword { get; set; }
    parameters: []
    return:
      type: Mix.Identity.Models.AccountViewModels.ResetPasswordViewModel
    content.vb: Public Property ResetPassword As ResetPasswordViewModel
  overload: Mix.Lib.ViewModels.MixUserViewModel.ResetPassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword
  id: IsChangePassword
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: IsChangePassword
  nameWithType: MixUserViewModel.IsChangePassword
  fullName: Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsChangePassword
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 42
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public bool IsChangePassword { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsChangePassword As Boolean
  overload: Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.ChangePassword
  commentId: P:Mix.Lib.ViewModels.MixUserViewModel.ChangePassword
  id: ChangePassword
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: ChangePassword
  nameWithType: MixUserViewModel.ChangePassword
  fullName: Mix.Lib.ViewModels.MixUserViewModel.ChangePassword
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ChangePassword
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 44
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public ChangePasswordViewModel ChangePassword { get; set; }
    parameters: []
    return:
      type: Mix.Identity.Models.ManageViewModels.ChangePasswordViewModel
    content.vb: Public Property ChangePassword As ChangePasswordViewModel
  overload: Mix.Lib.ViewModels.MixUserViewModel.ChangePassword*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.#ctor(Mix.Database.Entities.Account.MixUser,UnitOfWorkInfo)
  commentId: M:Mix.Lib.ViewModels.MixUserViewModel.#ctor(Mix.Database.Entities.Account.MixUser,UnitOfWorkInfo)
  id: '#ctor(Mix.Database.Entities.Account.MixUser,UnitOfWorkInfo)'
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: MixUserViewModel(MixUser, UnitOfWorkInfo)
  nameWithType: MixUserViewModel.MixUserViewModel(MixUser, UnitOfWorkInfo)
  fullName: Mix.Lib.ViewModels.MixUserViewModel.MixUserViewModel(Mix.Database.Entities.Account.MixUser, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 51
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public MixUserViewModel(MixUser user, UnitOfWorkInfo uow)
    parameters:
    - id: user
      type: Mix.Database.Entities.Account.MixUser
    - id: uow
      type: UnitOfWorkInfo
    content.vb: Public Sub New(user As MixUser, uow As UnitOfWorkInfo)
  overload: Mix.Lib.ViewModels.MixUserViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync(System.Int32,Mix.Lib.Services.MixDataService)
  commentId: M:Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync(System.Int32,Mix.Lib.Services.MixDataService)
  id: LoadUserDataAsync(System.Int32,Mix.Lib.Services.MixDataService)
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: LoadUserDataAsync(Int32, MixDataService)
  nameWithType: MixUserViewModel.LoadUserDataAsync(Int32, MixDataService)
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync(System.Int32, Mix.Lib.Services.MixDataService)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadUserDataAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 57
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Task LoadUserDataAsync(int tenantId, MixDataService mixDataService)
    parameters:
    - id: tenantId
      type: System.Int32
    - id: mixDataService
      type: Mix.Lib.Services.MixDataService
    return:
      type: Task
    content.vb: Public Function LoadUserDataAsync(tenantId As Integer, mixDataService As MixDataService) As Task
  overload: Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData(System.Int32,JObject)
  commentId: M:Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData(System.Int32,JObject)
  id: CreateDefaultUserData(System.Int32,JObject)
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: CreateDefaultUserData(Int32, JObject)
  nameWithType: MixUserViewModel.CreateDefaultUserData(Int32, JObject)
  fullName: Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData(System.Int32, JObject)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreateDefaultUserData
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 75
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Task<AdditionalDataContentViewModel> CreateDefaultUserData(int tenantId, JObject userData = null)
    parameters:
    - id: tenantId
      type: System.Int32
    - id: userData
      type: JObject
    return:
      type: Task{Mix.Lib.ViewModels.AdditionalDataContentViewModel}
    content.vb: Public Function CreateDefaultUserData(tenantId As Integer, userData As JObject = Nothing) As Task(Of AdditionalDataContentViewModel)
  overload: Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync(System.Int32,Mix.Lib.Services.MixDataService)
  commentId: M:Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync(System.Int32,Mix.Lib.Services.MixDataService)
  id: LoadUserEndpointsAsync(System.Int32,Mix.Lib.Services.MixDataService)
  parent: Mix.Lib.ViewModels.MixUserViewModel
  langs:
  - csharp
  - vb
  name: LoadUserEndpointsAsync(Int32, MixDataService)
  nameWithType: MixUserViewModel.LoadUserEndpointsAsync(Int32, MixDataService)
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync(System.Int32, Mix.Lib.Services.MixDataService)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/ViewModels/MixUserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LoadUserEndpointsAsync
    path: ../../mix.core/src/platform/mix.library/ViewModels/MixUserViewModel.cs
    startLine: 90
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public Task LoadUserEndpointsAsync(int tenantId, MixDataService mixDataService)
    parameters:
    - id: tenantId
      type: System.Int32
    - id: mixDataService
      type: Mix.Lib.Services.MixDataService
    return:
      type: Task
    content.vb: Public Function LoadUserEndpointsAsync(tenantId As Integer, mixDataService As MixDataService) As Task
  overload: Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.MixUserViewModel.Id*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.Id
  name: Id
  nameWithType: MixUserViewModel.Id
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Id
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Mix.Lib.ViewModels.MixUserViewModel.UserName*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.UserName
  name: UserName
  nameWithType: MixUserViewModel.UserName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.UserName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.MixUserViewModel.Email*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.Email
  name: Email
  nameWithType: MixUserViewModel.Email
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Email
- uid: Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime
  name: CreatedDateTime
  nameWithType: MixUserViewModel.CreatedDateTime
  fullName: Mix.Lib.ViewModels.MixUserViewModel.CreatedDateTime
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd
  name: LockoutEnd
  nameWithType: MixUserViewModel.LockoutEnd
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LockoutEnd
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUserViewModel.IsActived*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.IsActived
  name: IsActived
  nameWithType: MixUserViewModel.IsActived
  fullName: Mix.Lib.ViewModels.MixUserViewModel.IsActived
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.ViewModels.MixUserViewModel.LastModified*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.LastModified
  name: LastModified
  nameWithType: MixUserViewModel.LastModified
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LastModified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy
  name: ModifiedBy
  nameWithType: MixUserViewModel.ModifiedBy
  fullName: Mix.Lib.ViewModels.MixUserViewModel.ModifiedBy
- uid: Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber
  name: PhoneNumber
  nameWithType: MixUserViewModel.PhoneNumber
  fullName: Mix.Lib.ViewModels.MixUserViewModel.PhoneNumber
- uid: Mix.Lib.ViewModels.MixUserViewModel.Avatar*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.Avatar
  name: Avatar
  nameWithType: MixUserViewModel.Avatar
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Avatar
- uid: Mix.Lib.ViewModels.MixUserViewModel.NickName*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.NickName
  name: NickName
  nameWithType: MixUserViewModel.NickName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.NickName
- uid: Mix.Lib.ViewModels.MixUserViewModel.FirstName*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.FirstName
  name: FirstName
  nameWithType: MixUserViewModel.FirstName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.FirstName
- uid: Mix.Lib.ViewModels.MixUserViewModel.LastName*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.LastName
  name: LastName
  nameWithType: MixUserViewModel.LastName
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LastName
- uid: Mix.Lib.ViewModels.MixUserViewModel.Gender*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.Gender
  name: Gender
  nameWithType: MixUserViewModel.Gender
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Gender
- uid: Mix.Lib.ViewModels.MixUserViewModel.DOB*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.DOB
  name: DOB
  nameWithType: MixUserViewModel.DOB
  fullName: Mix.Lib.ViewModels.MixUserViewModel.DOB
- uid: Mix.Lib.ViewModels.MixUserViewModel.MediaFile*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.MediaFile
  name: MediaFile
  nameWithType: MixUserViewModel.MediaFile
  fullName: Mix.Lib.ViewModels.MixUserViewModel.MediaFile
- uid: FileModel
  isExternal: true
  name: FileModel
  nameWithType: FileModel
  fullName: FileModel
- uid: Mix.Lib.ViewModels.MixUserViewModel.UserData*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.UserData
  name: UserData
  nameWithType: MixUserViewModel.UserData
  fullName: Mix.Lib.ViewModels.MixUserViewModel.UserData
- uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  commentId: T:Mix.Lib.ViewModels.AdditionalDataContentViewModel
  parent: Mix.Lib.ViewModels
  name: AdditionalDataContentViewModel
  nameWithType: AdditionalDataContentViewModel
  fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel
- uid: Mix.Lib.ViewModels.MixUserViewModel.Roles*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.Roles
  name: Roles
  nameWithType: MixUserViewModel.Roles
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Roles
- uid: List{Mix.Database.Entities.Account.AspNetUserRoles}
  commentId: '!:List{Mix.Database.Entities.Account.AspNetUserRoles}'
  definition: List`1
  name: List<AspNetUserRoles>
  nameWithType: List<AspNetUserRoles>
  fullName: List<Mix.Database.Entities.Account.AspNetUserRoles>
  nameWithType.vb: List(Of AspNetUserRoles)
  fullName.vb: List(Of Mix.Database.Entities.Account.AspNetUserRoles)
  name.vb: List(Of AspNetUserRoles)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUserViewModel.Endpoints*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.Endpoints
  name: Endpoints
  nameWithType: MixUserViewModel.Endpoints
  fullName: Mix.Lib.ViewModels.MixUserViewModel.Endpoints
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUserViewModel.ResetPassword*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.ResetPassword
  name: ResetPassword
  nameWithType: MixUserViewModel.ResetPassword
  fullName: Mix.Lib.ViewModels.MixUserViewModel.ResetPassword
- uid: Mix.Identity.Models.AccountViewModels.ResetPasswordViewModel
  commentId: T:Mix.Identity.Models.AccountViewModels.ResetPasswordViewModel
  parent: Mix.Identity.Models.AccountViewModels
  name: ResetPasswordViewModel
  nameWithType: ResetPasswordViewModel
  fullName: Mix.Identity.Models.AccountViewModels.ResetPasswordViewModel
- uid: Mix.Identity.Models.AccountViewModels
  commentId: N:Mix.Identity.Models.AccountViewModels
  name: Mix.Identity.Models.AccountViewModels
  nameWithType: Mix.Identity.Models.AccountViewModels
  fullName: Mix.Identity.Models.AccountViewModels
- uid: Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword
  name: IsChangePassword
  nameWithType: MixUserViewModel.IsChangePassword
  fullName: Mix.Lib.ViewModels.MixUserViewModel.IsChangePassword
- uid: Mix.Lib.ViewModels.MixUserViewModel.ChangePassword*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.ChangePassword
  name: ChangePassword
  nameWithType: MixUserViewModel.ChangePassword
  fullName: Mix.Lib.ViewModels.MixUserViewModel.ChangePassword
- uid: Mix.Identity.Models.ManageViewModels.ChangePasswordViewModel
  commentId: T:Mix.Identity.Models.ManageViewModels.ChangePasswordViewModel
  parent: Mix.Identity.Models.ManageViewModels
  name: ChangePasswordViewModel
  nameWithType: ChangePasswordViewModel
  fullName: Mix.Identity.Models.ManageViewModels.ChangePasswordViewModel
- uid: Mix.Identity.Models.ManageViewModels
  commentId: N:Mix.Identity.Models.ManageViewModels
  name: Mix.Identity.Models.ManageViewModels
  nameWithType: Mix.Identity.Models.ManageViewModels
  fullName: Mix.Identity.Models.ManageViewModels
- uid: Mix.Lib.ViewModels.MixUserViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.#ctor
  name: MixUserViewModel
  nameWithType: MixUserViewModel.MixUserViewModel
  fullName: Mix.Lib.ViewModels.MixUserViewModel.MixUserViewModel
- uid: Mix.Database.Entities.Account.MixUser
  commentId: T:Mix.Database.Entities.Account.MixUser
  parent: Mix.Database.Entities.Account
  name: MixUser
  nameWithType: MixUser
  fullName: Mix.Database.Entities.Account.MixUser
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync
  name: LoadUserDataAsync
  nameWithType: MixUserViewModel.LoadUserDataAsync
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LoadUserDataAsync
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.Services.MixDataService
  commentId: T:Mix.Lib.Services.MixDataService
  parent: Mix.Lib.Services
  name: MixDataService
  nameWithType: MixDataService
  fullName: Mix.Lib.Services.MixDataService
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Lib.Services
  commentId: N:Mix.Lib.Services
  name: Mix.Lib.Services
  nameWithType: Mix.Lib.Services
  fullName: Mix.Lib.Services
- uid: Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData
  name: CreateDefaultUserData
  nameWithType: MixUserViewModel.CreateDefaultUserData
  fullName: Mix.Lib.ViewModels.MixUserViewModel.CreateDefaultUserData
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Task{Mix.Lib.ViewModels.AdditionalDataContentViewModel}
  commentId: '!:Task{Mix.Lib.ViewModels.AdditionalDataContentViewModel}'
  definition: Task`1
  name: Task<AdditionalDataContentViewModel>
  nameWithType: Task<AdditionalDataContentViewModel>
  fullName: Task<Mix.Lib.ViewModels.AdditionalDataContentViewModel>
  nameWithType.vb: Task(Of AdditionalDataContentViewModel)
  fullName.vb: Task(Of Mix.Lib.ViewModels.AdditionalDataContentViewModel)
  name.vb: Task(Of AdditionalDataContentViewModel)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel
    name: AdditionalDataContentViewModel
    nameWithType: AdditionalDataContentViewModel
    fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.ViewModels.AdditionalDataContentViewModel
    name: AdditionalDataContentViewModel
    nameWithType: AdditionalDataContentViewModel
    fullName: Mix.Lib.ViewModels.AdditionalDataContentViewModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync*
  commentId: Overload:Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync
  name: LoadUserEndpointsAsync
  nameWithType: MixUserViewModel.LoadUserEndpointsAsync
  fullName: Mix.Lib.ViewModels.MixUserViewModel.LoadUserEndpointsAsync
