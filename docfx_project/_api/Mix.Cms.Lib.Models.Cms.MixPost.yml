### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Cms.MixPost
  commentId: T:Mix.Cms.Lib.Models.Cms.MixPost
  id: MixPost
  parent: Mix.Cms.Lib.Models.Cms
  children:
  - Mix.Cms.Lib.Models.Cms.MixPost.#ctor
  - Mix.Cms.Lib.Models.Cms.MixPost.Content
  - Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy
  - Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime
  - Mix.Cms.Lib.Models.Cms.MixPost.Excerpt
  - Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields
  - Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties
  - Mix.Cms.Lib.Models.Cms.MixPost.Icon
  - Mix.Cms.Lib.Models.Cms.MixPost.Id
  - Mix.Cms.Lib.Models.Cms.MixPost.Image
  - Mix.Cms.Lib.Models.Cms.MixPost.LastModified
  - Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData
  - Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost
  - Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost
  - Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia
  - Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule
  - Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost
  - Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS
  - Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy
  - Mix.Cms.Lib.Models.Cms.MixPost.Priority
  - Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime
  - Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription
  - Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords
  - Mix.Cms.Lib.Models.Cms.MixPost.SeoName
  - Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle
  - Mix.Cms.Lib.Models.Cms.MixPost.Source
  - Mix.Cms.Lib.Models.Cms.MixPost.Specificulture
  - Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation
  - Mix.Cms.Lib.Models.Cms.MixPost.Status
  - Mix.Cms.Lib.Models.Cms.MixPost.Tags
  - Mix.Cms.Lib.Models.Cms.MixPost.Template
  - Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail
  - Mix.Cms.Lib.Models.Cms.MixPost.Title
  - Mix.Cms.Lib.Models.Cms.MixPost.Type
  - Mix.Cms.Lib.Models.Cms.MixPost.Views
  langs:
  - csharp
  - vb
  name: MixPost
  nameWithType: MixPost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPost
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 7
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public class MixPost
    content.vb: Public Class MixPost
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Cms.MixPost.#ctor
  commentId: M:Mix.Cms.Lib.Models.Cms.MixPost.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixPost()
  nameWithType: MixPost.MixPost()
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPost()
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 9
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public MixPost()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Models.Cms.MixPost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Id
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MixPost.Id
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 20
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Specificulture
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Specificulture
  id: Specificulture
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: MixPost.Specificulture
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Specificulture
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 21
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Content
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Content
  id: Content
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MixPost.Content
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Content
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 22
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Content*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime
  id: PublishedDateTime
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: PublishedDateTime
  nameWithType: MixPost.PublishedDateTime
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PublishedDateTime
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 23
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public DateTime? PublishedDateTime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property PublishedDateTime As Date?
  overload: Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Excerpt
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Excerpt
  id: Excerpt
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Excerpt
  nameWithType: MixPost.Excerpt
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Excerpt
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Excerpt
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 24
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Excerpt { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Excerpt As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Excerpt*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties
  id: ExtraProperties
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: ExtraProperties
  nameWithType: MixPost.ExtraProperties
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExtraProperties
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 25
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string ExtraProperties { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExtraProperties As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Icon
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Icon
  id: Icon
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: MixPost.Icon
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Icon
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Image
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Image
  id: Image
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: MixPost.Image
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Image
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Image
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 27
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Image { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Image As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Image*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription
  id: SeoDescription
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: SeoDescription
  nameWithType: MixPost.SeoDescription
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoDescription
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 28
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string SeoDescription { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoDescription As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords
  id: SeoKeywords
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: SeoKeywords
  nameWithType: MixPost.SeoKeywords
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoKeywords
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string SeoKeywords { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoKeywords As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoName
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.SeoName
  id: SeoName
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: SeoName
  nameWithType: MixPost.SeoName
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoName
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoName
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 30
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string SeoName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoName As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.SeoName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle
  id: SeoTitle
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: SeoTitle
  nameWithType: MixPost.SeoTitle
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoTitle
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 31
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string SeoTitle { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SeoTitle As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Source
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Source
  id: Source
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Source
  nameWithType: MixPost.Source
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Source
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Source
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 32
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Source { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Source As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Source*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Tags
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Tags
  id: Tags
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: MixPost.Tags
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Tags
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Tags
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 33
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Tags { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Tags As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Template
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Template
  id: Template
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Template
  nameWithType: MixPost.Template
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Template
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Template
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 34
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Template { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Template As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Template*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail
  id: Thumbnail
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Thumbnail
  nameWithType: MixPost.Thumbnail
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Thumbnail
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 35
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Thumbnail { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Thumbnail As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Title
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Title
  id: Title
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MixPost.Title
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Title
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 36
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Type
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Type
  id: Type
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MixPost.Type
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Type
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 37
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Type { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Type As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Views
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Views
  id: Views
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Views
  nameWithType: MixPost.Views
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Views
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Views
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 38
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int? Views { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Views As Integer?
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Views*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields
  id: ExtraFields
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: ExtraFields
  nameWithType: MixPost.ExtraFields
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExtraFields
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 39
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string ExtraFields { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ExtraFields As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy
  id: CreatedBy
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: MixPost.CreatedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 40
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: MixPost.CreatedDateTime
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedDateTime
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 41
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDateTime As Date
  overload: Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy
  id: ModifiedBy
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: MixPost.ModifiedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModifiedBy
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 42
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.LastModified
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.LastModified
  id: LastModified
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: MixPost.LastModified
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastModified
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 43
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LastModified As Date?
  overload: Mix.Cms.Lib.Models.Cms.MixPost.LastModified*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Priority
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Priority
  id: Priority
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: MixPost.Priority
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Priority
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Priority
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 44
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Status
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.Status
  id: Status
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: MixPost.Status
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Status
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Status
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 45
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public MixContentStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Enums.MixContentStatus
    content.vb: Public Property Status As MixContentStatus
  overload: Mix.Cms.Lib.Models.Cms.MixPost.Status*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation
  id: SpecificultureNavigation
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: SpecificultureNavigation
  nameWithType: MixPost.SpecificultureNavigation
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SpecificultureNavigation
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 47
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual MixCulture SpecificultureNavigation { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Cms.MixCulture
    content.vb: Public Overridable Property SpecificultureNavigation As MixCulture
  overload: Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData
  id: MixModuleData
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixModuleData
  nameWithType: MixPost.MixModuleData
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixModuleData
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 48
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixModuleData> MixModuleData { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixModuleData}
    content.vb: Public Overridable Property MixModuleData As ICollection(Of MixModuleData)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost
  id: MixModulePost
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixModulePost
  nameWithType: MixPost.MixModulePost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixModulePost
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 49
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixModulePost> MixModulePost { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixModulePost}
    content.vb: Public Overridable Property MixModulePost As ICollection(Of MixModulePost)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost
  id: MixPagePost
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixPagePost
  nameWithType: MixPost.MixPagePost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPagePost
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 50
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixPagePost> MixPagePost { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPagePost}
    content.vb: Public Overridable Property MixPagePost As ICollection(Of MixPagePost)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia
  id: MixPostMedia
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixPostMedia
  nameWithType: MixPost.MixPostMedia
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPostMedia
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 51
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixPostMedia> MixPostMedia { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPostMedia}
    content.vb: Public Overridable Property MixPostMedia As ICollection(Of MixPostMedia)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule
  id: MixPostModule
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixPostModule
  nameWithType: MixPost.MixPostModule
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPostModule
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 52
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixPostModule> MixPostModule { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPostModule}
    content.vb: Public Overridable Property MixPostModule As ICollection(Of MixPostModule)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost
  id: MixRelatedPostMixPost
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixRelatedPostMixPost
  nameWithType: MixPost.MixRelatedPostMixPost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixRelatedPostMixPost
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 53
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixRelatedPost> MixRelatedPostMixPost { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixRelatedPost}
    content.vb: Public Overridable Property MixRelatedPostMixPost As ICollection(Of MixRelatedPost)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS
  commentId: P:Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS
  id: MixRelatedPostS
  parent: Mix.Cms.Lib.Models.Cms.MixPost
  langs:
  - csharp
  - vb
  name: MixRelatedPostS
  nameWithType: MixPost.MixRelatedPostS
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/MixPost.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixRelatedPostS
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/MixPost.cs
    startLine: 54
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<MixRelatedPost> MixRelatedPostS { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixRelatedPost}
    content.vb: Public Overridable Property MixRelatedPostS As ICollection(Of MixRelatedPost)
  overload: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Cms.MixPost.#ctor*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.#ctor
  name: MixPost
  nameWithType: MixPost.MixPost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPost
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Id
  name: Id
  nameWithType: MixPost.Id
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Specificulture*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Specificulture
  name: Specificulture
  nameWithType: MixPost.Specificulture
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Specificulture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Content*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Content
  name: Content
  nameWithType: MixPost.Content
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Content
- uid: Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime
  name: PublishedDateTime
  nameWithType: MixPost.PublishedDateTime
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.PublishedDateTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Excerpt*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Excerpt
  name: Excerpt
  nameWithType: MixPost.Excerpt
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Excerpt
- uid: Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties
  name: ExtraProperties
  nameWithType: MixPost.ExtraProperties
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.ExtraProperties
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Icon*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Icon
  name: Icon
  nameWithType: MixPost.Icon
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Icon
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Image*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Image
  name: Image
  nameWithType: MixPost.Image
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Image
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription
  name: SeoDescription
  nameWithType: MixPost.SeoDescription
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoDescription
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords
  name: SeoKeywords
  nameWithType: MixPost.SeoKeywords
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoKeywords
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoName*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.SeoName
  name: SeoName
  nameWithType: MixPost.SeoName
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoName
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle
  name: SeoTitle
  nameWithType: MixPost.SeoTitle
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SeoTitle
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Source*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Source
  name: Source
  nameWithType: MixPost.Source
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Source
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Tags*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Tags
  name: Tags
  nameWithType: MixPost.Tags
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Tags
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Template*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Template
  name: Template
  nameWithType: MixPost.Template
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Template
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail
  name: Thumbnail
  nameWithType: MixPost.Thumbnail
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Thumbnail
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Title*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Title
  name: Title
  nameWithType: MixPost.Title
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Title
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Type*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Type
  name: Type
  nameWithType: MixPost.Type
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Type
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Views*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Views
  name: Views
  nameWithType: MixPost.Views
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Views
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields
  name: ExtraFields
  nameWithType: MixPost.ExtraFields
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.ExtraFields
- uid: Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy
  name: CreatedBy
  nameWithType: MixPost.CreatedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.CreatedBy
- uid: Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime
  name: CreatedDateTime
  nameWithType: MixPost.CreatedDateTime
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy
  name: ModifiedBy
  nameWithType: MixPost.ModifiedBy
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.ModifiedBy
- uid: Mix.Cms.Lib.Models.Cms.MixPost.LastModified*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.LastModified
  name: LastModified
  nameWithType: MixPost.LastModified
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.LastModified
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Priority*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Priority
  name: Priority
  nameWithType: MixPost.Priority
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Priority
- uid: Mix.Cms.Lib.Models.Cms.MixPost.Status*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.Status
  name: Status
  nameWithType: MixPost.Status
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.Status
- uid: Mix.Cms.Lib.Enums.MixContentStatus
  commentId: T:Mix.Cms.Lib.Enums.MixContentStatus
  parent: Mix.Cms.Lib.Enums
  name: MixContentStatus
  nameWithType: MixContentStatus
  fullName: Mix.Cms.Lib.Enums.MixContentStatus
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation
  name: SpecificultureNavigation
  nameWithType: MixPost.SpecificultureNavigation
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.SpecificultureNavigation
- uid: Mix.Cms.Lib.Models.Cms.MixCulture
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCulture
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCulture
  nameWithType: MixCulture
  fullName: Mix.Cms.Lib.Models.Cms.MixCulture
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData
  name: MixModuleData
  nameWithType: MixPost.MixModuleData
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixModuleData
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixModuleData}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixModuleData}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixModuleData>
  nameWithType: ICollection<MixModuleData>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.MixModuleData>
  nameWithType.vb: ICollection(Of MixModuleData)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.MixModuleData)
  name.vb: ICollection(Of MixModuleData)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: Mix.Cms.Lib.Models.Cms.MixModuleData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: Mix.Cms.Lib.Models.Cms.MixModuleData
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost
  name: MixModulePost
  nameWithType: MixPost.MixModulePost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixModulePost
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixModulePost}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixModulePost}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixModulePost>
  nameWithType: ICollection<MixModulePost>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.MixModulePost>
  nameWithType.vb: ICollection(Of MixModulePost)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.MixModulePost)
  name.vb: ICollection(Of MixModulePost)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixModulePost
    name: MixModulePost
    nameWithType: MixModulePost
    fullName: Mix.Cms.Lib.Models.Cms.MixModulePost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixModulePost
    name: MixModulePost
    nameWithType: MixModulePost
    fullName: Mix.Cms.Lib.Models.Cms.MixModulePost
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost
  name: MixPagePost
  nameWithType: MixPost.MixPagePost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPagePost
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPagePost}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPagePost}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixPagePost>
  nameWithType: ICollection<MixPagePost>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.MixPagePost>
  nameWithType.vb: ICollection(Of MixPagePost)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.MixPagePost)
  name.vb: ICollection(Of MixPagePost)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixPagePost
    name: MixPagePost
    nameWithType: MixPagePost
    fullName: Mix.Cms.Lib.Models.Cms.MixPagePost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixPagePost
    name: MixPagePost
    nameWithType: MixPagePost
    fullName: Mix.Cms.Lib.Models.Cms.MixPagePost
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia
  name: MixPostMedia
  nameWithType: MixPost.MixPostMedia
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPostMedia
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPostMedia}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPostMedia}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixPostMedia>
  nameWithType: ICollection<MixPostMedia>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.MixPostMedia>
  nameWithType.vb: ICollection(Of MixPostMedia)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.MixPostMedia)
  name.vb: ICollection(Of MixPostMedia)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixPostMedia
    name: MixPostMedia
    nameWithType: MixPostMedia
    fullName: Mix.Cms.Lib.Models.Cms.MixPostMedia
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixPostMedia
    name: MixPostMedia
    nameWithType: MixPostMedia
    fullName: Mix.Cms.Lib.Models.Cms.MixPostMedia
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule
  name: MixPostModule
  nameWithType: MixPost.MixPostModule
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixPostModule
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPostModule}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixPostModule}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixPostModule>
  nameWithType: ICollection<MixPostModule>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.MixPostModule>
  nameWithType.vb: ICollection(Of MixPostModule)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.MixPostModule)
  name.vb: ICollection(Of MixPostModule)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixPostModule
    name: MixPostModule
    nameWithType: MixPostModule
    fullName: Mix.Cms.Lib.Models.Cms.MixPostModule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixPostModule
    name: MixPostModule
    nameWithType: MixPostModule
    fullName: Mix.Cms.Lib.Models.Cms.MixPostModule
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost
  name: MixRelatedPostMixPost
  nameWithType: MixPost.MixRelatedPostMixPost
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostMixPost
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixRelatedPost}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.MixRelatedPost}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<MixRelatedPost>
  nameWithType: ICollection<MixRelatedPost>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.MixRelatedPost>
  nameWithType.vb: ICollection(Of MixRelatedPost)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.MixRelatedPost)
  name.vb: ICollection(Of MixRelatedPost)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedPost
    name: MixRelatedPost
    nameWithType: MixRelatedPost
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedPost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.MixRelatedPost
    name: MixRelatedPost
    nameWithType: MixRelatedPost
    fullName: Mix.Cms.Lib.Models.Cms.MixRelatedPost
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS
  name: MixRelatedPostS
  nameWithType: MixPost.MixRelatedPostS
  fullName: Mix.Cms.Lib.Models.Cms.MixPost.MixRelatedPostS
