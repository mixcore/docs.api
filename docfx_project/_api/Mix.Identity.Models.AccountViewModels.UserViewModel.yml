### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel
  commentId: T:Mix.Identity.Models.AccountViewModels.UserViewModel
  id: UserViewModel
  parent: Mix.Identity.Models.AccountViewModels
  children:
  - Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword
  - Mix.Identity.Models.AccountViewModels.UserViewModel.Email
  - Mix.Identity.Models.AccountViewModels.UserViewModel.Id
  - Mix.Identity.Models.AccountViewModels.UserViewModel.Name
  - Mix.Identity.Models.AccountViewModels.UserViewModel.Password
  - Mix.Identity.Models.AccountViewModels.UserViewModel.UserName
  langs:
  - csharp
  - vb
  name: UserViewModel
  nameWithType: UserViewModel
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserViewModel
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 8
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public class UserViewModel
    content.vb: Public Class UserViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Id
  commentId: P:Mix.Identity.Models.AccountViewModels.UserViewModel.Id
  id: Id
  parent: Mix.Identity.Models.AccountViewModels.UserViewModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: UserViewModel.Id
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Id
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 10
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Mix.Identity.Models.AccountViewModels.UserViewModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.UserName
  commentId: P:Mix.Identity.Models.AccountViewModels.UserViewModel.UserName
  id: UserName
  parent: Mix.Identity.Models.AccountViewModels.UserViewModel
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: UserViewModel.UserName
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.UserName
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserName
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 11
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string UserName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserName As String
  overload: Mix.Identity.Models.AccountViewModels.UserViewModel.UserName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Password
  commentId: P:Mix.Identity.Models.AccountViewModels.UserViewModel.Password
  id: Password
  parent: Mix.Identity.Models.AccountViewModels.UserViewModel
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: UserViewModel.Password
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Password
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Password
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 13
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [DataType(DataType.Password)]

      public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <DataType(DataType.Password)>

      Public Property Password As String
  overload: Mix.Identity.Models.AccountViewModels.UserViewModel.Password*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword
  commentId: P:Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword
  id: ConfirmPassword
  parent: Mix.Identity.Models.AccountViewModels.UserViewModel
  langs:
  - csharp
  - vb
  name: ConfirmPassword
  nameWithType: UserViewModel.ConfirmPassword
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConfirmPassword
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 16
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: >-
      [Display(Name = "Confirm Password")]

      [DataType(DataType.Password)]

      public string ConfirmPassword { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Display(Name:="Confirm Password")>

      <DataType(DataType.Password)>

      Public Property ConfirmPassword As String
  overload: Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword*
  attributes:
  - type: System.ComponentModel.DataAnnotations.DisplayAttribute
    ctor: System.ComponentModel.DataAnnotations.DisplayAttribute.#ctor
    arguments: []
    namedArguments:
    - name: Name
      type: System.String
      value: Confirm Password
  - type: System.ComponentModel.DataAnnotations.DataTypeAttribute
    ctor: System.ComponentModel.DataAnnotations.DataTypeAttribute.#ctor(System.ComponentModel.DataAnnotations.DataType)
    arguments:
    - type: System.ComponentModel.DataAnnotations.DataType
      value: 11
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Name
  commentId: P:Mix.Identity.Models.AccountViewModels.UserViewModel.Name
  id: Name
  parent: Mix.Identity.Models.AccountViewModels.UserViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: UserViewModel.Name
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Name
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 20
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Identity.Models.AccountViewModels.UserViewModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Email
  commentId: P:Mix.Identity.Models.AccountViewModels.UserViewModel.Email
  id: Email
  parent: Mix.Identity.Models.AccountViewModels.UserViewModel
  langs:
  - csharp
  - vb
  name: Email
  nameWithType: UserViewModel.Email
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Email
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Email
    path: ../../mix.core/src/Mix.Identity/Models/AccountViewModels/UserViewModel.cs
    startLine: 21
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models.AccountViewModels
  syntax:
    content: public string Email { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Email As String
  overload: Mix.Identity.Models.AccountViewModels.UserViewModel.Email*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Models.AccountViewModels
  commentId: N:Mix.Identity.Models.AccountViewModels
  name: Mix.Identity.Models.AccountViewModels
  nameWithType: Mix.Identity.Models.AccountViewModels
  fullName: Mix.Identity.Models.AccountViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Id*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.UserViewModel.Id
  name: Id
  nameWithType: UserViewModel.Id
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.UserName*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.UserViewModel.UserName
  name: UserName
  nameWithType: UserViewModel.UserName
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.UserName
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Password*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.UserViewModel.Password
  name: Password
  nameWithType: UserViewModel.Password
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Password
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword
  name: ConfirmPassword
  nameWithType: UserViewModel.ConfirmPassword
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.ConfirmPassword
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Name*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.UserViewModel.Name
  name: Name
  nameWithType: UserViewModel.Name
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Name
- uid: Mix.Identity.Models.AccountViewModels.UserViewModel.Email*
  commentId: Overload:Mix.Identity.Models.AccountViewModels.UserViewModel.Email
  name: Email
  nameWithType: UserViewModel.Email
  fullName: Mix.Identity.Models.AccountViewModels.UserViewModel.Email
