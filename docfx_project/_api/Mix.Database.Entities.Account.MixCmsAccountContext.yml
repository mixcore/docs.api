### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Account.MixCmsAccountContext
  commentId: T:Mix.Database.Entities.Account.MixCmsAccountContext
  id: MixCmsAccountContext
  parent: Mix.Database.Entities.Account
  children:
  - Mix.Database.Entities.Account.MixCmsAccountContext.#ctor
  - Mix.Database.Entities.Account.MixCmsAccountContext.#ctor(Mix.Database.Services.DatabaseService)
  - Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims
  - Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims
  - Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins
  - Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles
  - Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens
  - Mix.Database.Entities.Account.MixCmsAccountContext.Clients
  - Mix.Database.Entities.Account.MixCmsAccountContext.Dispose
  - Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles
  - Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers
  - Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants
  - Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring(DbContextOptionsBuilder)
  - Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating(ModelBuilder)
  - Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens
  langs:
  - csharp
  - vb
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCmsAccountContext
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 15
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: 'public class MixCmsAccountContext : DbContext'
    content.vb: >-
      Public Class MixCmsAccountContext
          Inherits DbContext
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Database.Entities.Account.MySqlAccountContext
  - Mix.Database.Entities.Account.PostgresSQLAccountContext
  - Mix.Database.Entities.Account.SqliteAccountContext
  - Mix.Database.Entities.Account.SqlServerAccountContext
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims
  id: AspNetRoleClaims
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetRoleClaims
  nameWithType: MixCmsAccountContext.AspNetRoleClaims
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetRoleClaims
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 17
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<AspNetRoleClaims> AspNetRoleClaims { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.AspNetRoleClaims}
    content.vb: Public Overridable Property AspNetRoleClaims As DbSet(Of AspNetRoleClaims)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims
  id: AspNetUserClaims
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserClaims
  nameWithType: MixCmsAccountContext.AspNetUserClaims
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserClaims
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 19
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<AspNetUserClaims> AspNetUserClaims { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.AspNetUserClaims}
    content.vb: Public Overridable Property AspNetUserClaims As DbSet(Of AspNetUserClaims)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins
  id: AspNetUserLogins
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserLogins
  nameWithType: MixCmsAccountContext.AspNetUserLogins
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserLogins
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 20
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<AspNetUserLogins> AspNetUserLogins { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.AspNetUserLogins}
    content.vb: Public Overridable Property AspNetUserLogins As DbSet(Of AspNetUserLogins)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles
  id: AspNetUserRoles
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserRoles
  nameWithType: MixCmsAccountContext.AspNetUserRoles
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserRoles
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 21
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<AspNetUserRoles> AspNetUserRoles { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.AspNetUserRoles}
    content.vb: Public Overridable Property AspNetUserRoles As DbSet(Of AspNetUserRoles)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers
  id: MixUsers
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixUsers
  nameWithType: MixCmsAccountContext.MixUsers
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUsers
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 22
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<MixUser> MixUsers { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.MixUser}
    content.vb: Public Overridable Property MixUsers As DbSet(Of MixUser)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens
  id: AspNetUserTokens
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: AspNetUserTokens
  nameWithType: MixCmsAccountContext.AspNetUserTokens
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserTokens
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 23
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<AspNetUserTokens> AspNetUserTokens { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.AspNetUserTokens}
    content.vb: Public Overridable Property AspNetUserTokens As DbSet(Of AspNetUserTokens)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.Clients
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.Clients
  id: Clients
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: Clients
  nameWithType: MixCmsAccountContext.Clients
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.Clients
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Clients
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 24
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<Clients> Clients { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.Clients}
    content.vb: Public Overridable Property Clients As DbSet(Of Clients)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.Clients*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens
  id: RefreshTokens
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: RefreshTokens
  nameWithType: MixCmsAccountContext.RefreshTokens
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RefreshTokens
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 25
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<RefreshTokens> RefreshTokens { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.RefreshTokens}
    content.vb: Public Overridable Property RefreshTokens As DbSet(Of RefreshTokens)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants
  id: MixUserTenants
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixUserTenants
  nameWithType: MixCmsAccountContext.MixUserTenants
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUserTenants
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 26
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<MixUserTenant> MixUserTenants { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.MixUserTenant}
    content.vb: Public Overridable Property MixUserTenants As DbSet(Of MixUserTenant)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles
  commentId: P:Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles
  id: MixRoles
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixRoles
  nameWithType: MixCmsAccountContext.MixRoles
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixRoles
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 27
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public virtual DbSet<MixRole> MixRoles { get; set; }
    parameters: []
    return:
      type: DbSet{Mix.Database.Entities.Account.MixRole}
    content.vb: Public Overridable Property MixRoles As DbSet(Of MixRole)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.#ctor
  commentId: M:Mix.Database.Entities.Account.MixCmsAccountContext.#ctor
  id: '#ctor'
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixCmsAccountContext()
  nameWithType: MixCmsAccountContext.MixCmsAccountContext()
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixCmsAccountContext()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 31
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public MixCmsAccountContext()
    content.vb: Public Sub New
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.#ctor(Mix.Database.Services.DatabaseService)
  commentId: M:Mix.Database.Entities.Account.MixCmsAccountContext.#ctor(Mix.Database.Services.DatabaseService)
  id: '#ctor(Mix.Database.Services.DatabaseService)'
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: MixCmsAccountContext(DatabaseService)
  nameWithType: MixCmsAccountContext.MixCmsAccountContext(DatabaseService)
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixCmsAccountContext(Mix.Database.Services.DatabaseService)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 39
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  summary: "\nInitializes a new instance of the <xref href=\"Mix.Database.Entities.Account.MixCmsAccountContext\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public MixCmsAccountContext(DatabaseService databaseService)
    parameters:
    - id: databaseService
      type: Mix.Database.Services.DatabaseService
    content.vb: Public Sub New(databaseService As DatabaseService)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring(DbContextOptionsBuilder)
  commentId: M:Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring(DbContextOptionsBuilder)
  id: OnConfiguring(DbContextOptionsBuilder)
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: OnConfiguring(DbContextOptionsBuilder)
  nameWithType: MixCmsAccountContext.OnConfiguring(DbContextOptionsBuilder)
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring(DbContextOptionsBuilder)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: OnConfiguring
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 46
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
    parameters:
    - id: optionsBuilder
      type: DbContextOptionsBuilder
    content.vb: Protected Overrides Sub OnConfiguring(optionsBuilder As DbContextOptionsBuilder)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.Dispose
  commentId: M:Mix.Database.Entities.Account.MixCmsAccountContext.Dispose
  id: Dispose
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: MixCmsAccountContext.Dispose()
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.Dispose()
  type: Method
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Dispose
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 77
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: public override void Dispose()
    content.vb: Public Overrides Sub Dispose
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.Dispose*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating(ModelBuilder)
  commentId: M:Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating(ModelBuilder)
  id: OnModelCreating(ModelBuilder)
  parent: Mix.Database.Entities.Account.MixCmsAccountContext
  langs:
  - csharp
  - vb
  name: OnModelCreating(ModelBuilder)
  nameWithType: MixCmsAccountContext.OnModelCreating(ModelBuilder)
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating(ModelBuilder)
  type: Method
  source:
    remote:
      path: src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: OnModelCreating
    path: ../../mix.core/src/platform/mix.database/Entities/Account/_MixCmsAccountContext.cs
    startLine: 96
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Account
  syntax:
    content: protected override void OnModelCreating(ModelBuilder modelBuilder)
    parameters:
    - id: modelBuilder
      type: ModelBuilder
    content.vb: Protected Overrides Sub OnModelCreating(modelBuilder As ModelBuilder)
  overload: Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims
  name: AspNetRoleClaims
  nameWithType: MixCmsAccountContext.AspNetRoleClaims
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetRoleClaims
- uid: DbSet{Mix.Database.Entities.Account.AspNetRoleClaims}
  commentId: '!:DbSet{Mix.Database.Entities.Account.AspNetRoleClaims}'
  definition: DbSet`1
  name: DbSet<AspNetRoleClaims>
  nameWithType: DbSet<AspNetRoleClaims>
  fullName: DbSet<Mix.Database.Entities.Account.AspNetRoleClaims>
  nameWithType.vb: DbSet(Of AspNetRoleClaims)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.AspNetRoleClaims)
  name.vb: DbSet(Of AspNetRoleClaims)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetRoleClaims
    name: AspNetRoleClaims
    nameWithType: AspNetRoleClaims
    fullName: Mix.Database.Entities.Account.AspNetRoleClaims
  - name: )
    nameWithType: )
    fullName: )
- uid: DbSet`1
  isExternal: true
  name: DbSet<>
  nameWithType: DbSet<>
  fullName: DbSet<>
  nameWithType.vb: DbSet(Of )
  fullName.vb: DbSet(Of )
  name.vb: DbSet(Of )
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims
  name: AspNetUserClaims
  nameWithType: MixCmsAccountContext.AspNetUserClaims
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserClaims
- uid: DbSet{Mix.Database.Entities.Account.AspNetUserClaims}
  commentId: '!:DbSet{Mix.Database.Entities.Account.AspNetUserClaims}'
  definition: DbSet`1
  name: DbSet<AspNetUserClaims>
  nameWithType: DbSet<AspNetUserClaims>
  fullName: DbSet<Mix.Database.Entities.Account.AspNetUserClaims>
  nameWithType.vb: DbSet(Of AspNetUserClaims)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.AspNetUserClaims)
  name.vb: DbSet(Of AspNetUserClaims)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserClaims
    name: AspNetUserClaims
    nameWithType: AspNetUserClaims
    fullName: Mix.Database.Entities.Account.AspNetUserClaims
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins
  name: AspNetUserLogins
  nameWithType: MixCmsAccountContext.AspNetUserLogins
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserLogins
- uid: DbSet{Mix.Database.Entities.Account.AspNetUserLogins}
  commentId: '!:DbSet{Mix.Database.Entities.Account.AspNetUserLogins}'
  definition: DbSet`1
  name: DbSet<AspNetUserLogins>
  nameWithType: DbSet<AspNetUserLogins>
  fullName: DbSet<Mix.Database.Entities.Account.AspNetUserLogins>
  nameWithType.vb: DbSet(Of AspNetUserLogins)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.AspNetUserLogins)
  name.vb: DbSet(Of AspNetUserLogins)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserLogins
    name: AspNetUserLogins
    nameWithType: AspNetUserLogins
    fullName: Mix.Database.Entities.Account.AspNetUserLogins
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles
  name: AspNetUserRoles
  nameWithType: MixCmsAccountContext.AspNetUserRoles
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserRoles
- uid: DbSet{Mix.Database.Entities.Account.AspNetUserRoles}
  commentId: '!:DbSet{Mix.Database.Entities.Account.AspNetUserRoles}'
  definition: DbSet`1
  name: DbSet<AspNetUserRoles>
  nameWithType: DbSet<AspNetUserRoles>
  fullName: DbSet<Mix.Database.Entities.Account.AspNetUserRoles>
  nameWithType.vb: DbSet(Of AspNetUserRoles)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.AspNetUserRoles)
  name.vb: DbSet(Of AspNetUserRoles)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserRoles
    name: AspNetUserRoles
    nameWithType: AspNetUserRoles
    fullName: Mix.Database.Entities.Account.AspNetUserRoles
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers
  name: MixUsers
  nameWithType: MixCmsAccountContext.MixUsers
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixUsers
- uid: DbSet{Mix.Database.Entities.Account.MixUser}
  commentId: '!:DbSet{Mix.Database.Entities.Account.MixUser}'
  definition: DbSet`1
  name: DbSet<MixUser>
  nameWithType: DbSet<MixUser>
  fullName: DbSet<Mix.Database.Entities.Account.MixUser>
  nameWithType.vb: DbSet(Of MixUser)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.MixUser)
  name.vb: DbSet(Of MixUser)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUser
    name: MixUser
    nameWithType: MixUser
    fullName: Mix.Database.Entities.Account.MixUser
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens
  name: AspNetUserTokens
  nameWithType: MixCmsAccountContext.AspNetUserTokens
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.AspNetUserTokens
- uid: DbSet{Mix.Database.Entities.Account.AspNetUserTokens}
  commentId: '!:DbSet{Mix.Database.Entities.Account.AspNetUserTokens}'
  definition: DbSet`1
  name: DbSet<AspNetUserTokens>
  nameWithType: DbSet<AspNetUserTokens>
  fullName: DbSet<Mix.Database.Entities.Account.AspNetUserTokens>
  nameWithType.vb: DbSet(Of AspNetUserTokens)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.AspNetUserTokens)
  name.vb: DbSet(Of AspNetUserTokens)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.AspNetUserTokens
    name: AspNetUserTokens
    nameWithType: AspNetUserTokens
    fullName: Mix.Database.Entities.Account.AspNetUserTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.Clients*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.Clients
  name: Clients
  nameWithType: MixCmsAccountContext.Clients
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.Clients
- uid: DbSet{Mix.Database.Entities.Account.Clients}
  commentId: '!:DbSet{Mix.Database.Entities.Account.Clients}'
  definition: DbSet`1
  name: DbSet<Clients>
  nameWithType: DbSet<Clients>
  fullName: DbSet<Mix.Database.Entities.Account.Clients>
  nameWithType.vb: DbSet(Of Clients)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.Clients)
  name.vb: DbSet(Of Clients)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.Clients
    name: Clients
    nameWithType: Clients
    fullName: Mix.Database.Entities.Account.Clients
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.Clients
    name: Clients
    nameWithType: Clients
    fullName: Mix.Database.Entities.Account.Clients
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens
  name: RefreshTokens
  nameWithType: MixCmsAccountContext.RefreshTokens
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.RefreshTokens
- uid: DbSet{Mix.Database.Entities.Account.RefreshTokens}
  commentId: '!:DbSet{Mix.Database.Entities.Account.RefreshTokens}'
  definition: DbSet`1
  name: DbSet<RefreshTokens>
  nameWithType: DbSet<RefreshTokens>
  fullName: DbSet<Mix.Database.Entities.Account.RefreshTokens>
  nameWithType.vb: DbSet(Of RefreshTokens)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.RefreshTokens)
  name.vb: DbSet(Of RefreshTokens)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Mix.Database.Entities.Account.RefreshTokens
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.RefreshTokens
    name: RefreshTokens
    nameWithType: RefreshTokens
    fullName: Mix.Database.Entities.Account.RefreshTokens
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants
  name: MixUserTenants
  nameWithType: MixCmsAccountContext.MixUserTenants
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixUserTenants
- uid: DbSet{Mix.Database.Entities.Account.MixUserTenant}
  commentId: '!:DbSet{Mix.Database.Entities.Account.MixUserTenant}'
  definition: DbSet`1
  name: DbSet<MixUserTenant>
  nameWithType: DbSet<MixUserTenant>
  fullName: DbSet<Mix.Database.Entities.Account.MixUserTenant>
  nameWithType.vb: DbSet(Of MixUserTenant)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.MixUserTenant)
  name.vb: DbSet(Of MixUserTenant)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixUserTenant
    name: MixUserTenant
    nameWithType: MixUserTenant
    fullName: Mix.Database.Entities.Account.MixUserTenant
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixUserTenant
    name: MixUserTenant
    nameWithType: MixUserTenant
    fullName: Mix.Database.Entities.Account.MixUserTenant
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles
  name: MixRoles
  nameWithType: MixCmsAccountContext.MixRoles
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixRoles
- uid: DbSet{Mix.Database.Entities.Account.MixRole}
  commentId: '!:DbSet{Mix.Database.Entities.Account.MixRole}'
  definition: DbSet`1
  name: DbSet<MixRole>
  nameWithType: DbSet<MixRole>
  fullName: DbSet<Mix.Database.Entities.Account.MixRole>
  nameWithType.vb: DbSet(Of MixRole)
  fullName.vb: DbSet(Of Mix.Database.Entities.Account.MixRole)
  name.vb: DbSet(Of MixRole)
  spec.csharp:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: DbSet`1
    name: DbSet
    nameWithType: DbSet
    fullName: DbSet
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Database.Entities.Account.MixRole
    name: MixRole
    nameWithType: MixRole
    fullName: Mix.Database.Entities.Account.MixRole
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.#ctor*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.#ctor
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext.MixCmsAccountContext
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.MixCmsAccountContext
- uid: Mix.Database.Entities.Account.MixCmsAccountContext
  commentId: T:Mix.Database.Entities.Account.MixCmsAccountContext
  parent: Mix.Database.Entities.Account
  name: MixCmsAccountContext
  nameWithType: MixCmsAccountContext
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext
- uid: Mix.Database.Services.DatabaseService
  commentId: T:Mix.Database.Services.DatabaseService
  parent: Mix.Database.Services
  name: DatabaseService
  nameWithType: DatabaseService
  fullName: Mix.Database.Services.DatabaseService
- uid: Mix.Database.Services
  commentId: N:Mix.Database.Services
  name: Mix.Database.Services
  nameWithType: Mix.Database.Services
  fullName: Mix.Database.Services
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring
  name: OnConfiguring
  nameWithType: MixCmsAccountContext.OnConfiguring
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.OnConfiguring
- uid: DbContextOptionsBuilder
  isExternal: true
  name: DbContextOptionsBuilder
  nameWithType: DbContextOptionsBuilder
  fullName: DbContextOptionsBuilder
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.Dispose*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.Dispose
  name: Dispose
  nameWithType: MixCmsAccountContext.Dispose
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.Dispose
- uid: Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating*
  commentId: Overload:Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating
  name: OnModelCreating
  nameWithType: MixCmsAccountContext.OnModelCreating
  fullName: Mix.Database.Entities.Account.MixCmsAccountContext.OnModelCreating
- uid: ModelBuilder
  isExternal: true
  name: ModelBuilder
  nameWithType: ModelBuilder
  fullName: ModelBuilder
