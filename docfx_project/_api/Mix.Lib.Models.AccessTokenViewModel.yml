### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.AccessTokenViewModel
  commentId: T:Mix.Lib.Models.AccessTokenViewModel
  id: AccessTokenViewModel
  parent: Mix.Lib.Models
  children:
  - Mix.Lib.Models.AccessTokenViewModel.AccessToken
  - Mix.Lib.Models.AccessTokenViewModel.ClientId
  - Mix.Lib.Models.AccessTokenViewModel.DeviceId
  - Mix.Lib.Models.AccessTokenViewModel.Expires
  - Mix.Lib.Models.AccessTokenViewModel.ExpiresIn
  - Mix.Lib.Models.AccessTokenViewModel.Info
  - Mix.Lib.Models.AccessTokenViewModel.Issued
  - Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration
  - Mix.Lib.Models.AccessTokenViewModel.RefreshToken
  - Mix.Lib.Models.AccessTokenViewModel.Roles
  - Mix.Lib.Models.AccessTokenViewModel.TokenType
  langs:
  - csharp
  - vb
  name: AccessTokenViewModel
  nameWithType: AccessTokenViewModel
  fullName: Mix.Lib.Models.AccessTokenViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AccessTokenViewModel
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public class AccessTokenViewModel
    content.vb: Public Class AccessTokenViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.AccessTokenViewModel.AccessToken
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.AccessToken
  id: AccessToken
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: AccessToken
  nameWithType: AccessTokenViewModel.AccessToken
  fullName: Mix.Lib.Models.AccessTokenViewModel.AccessToken
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AccessToken
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public string AccessToken { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property AccessToken As String
  overload: Mix.Lib.Models.AccessTokenViewModel.AccessToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.TokenType
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.TokenType
  id: TokenType
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: TokenType
  nameWithType: AccessTokenViewModel.TokenType
  fullName: Mix.Lib.Models.AccessTokenViewModel.TokenType
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TokenType
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public string TokenType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TokenType As String
  overload: Mix.Lib.Models.AccessTokenViewModel.TokenType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.RefreshToken
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.RefreshToken
  id: RefreshToken
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: RefreshToken
  nameWithType: AccessTokenViewModel.RefreshToken
  fullName: Mix.Lib.Models.AccessTokenViewModel.RefreshToken
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RefreshToken
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public Guid RefreshToken { get; set; }
    parameters: []
    return:
      type: Guid
    content.vb: Public Property RefreshToken As Guid
  overload: Mix.Lib.Models.AccessTokenViewModel.RefreshToken*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.ExpiresIn
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.ExpiresIn
  id: ExpiresIn
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: ExpiresIn
  nameWithType: AccessTokenViewModel.ExpiresIn
  fullName: Mix.Lib.Models.AccessTokenViewModel.ExpiresIn
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpiresIn
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public int ExpiresIn { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ExpiresIn As Integer
  overload: Mix.Lib.Models.AccessTokenViewModel.ExpiresIn*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.ClientId
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.ClientId
  id: ClientId
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: ClientId
  nameWithType: AccessTokenViewModel.ClientId
  fullName: Mix.Lib.Models.AccessTokenViewModel.ClientId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ClientId
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public string ClientId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClientId As String
  overload: Mix.Lib.Models.AccessTokenViewModel.ClientId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.Issued
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.Issued
  id: Issued
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: Issued
  nameWithType: AccessTokenViewModel.Issued
  fullName: Mix.Lib.Models.AccessTokenViewModel.Issued
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Issued
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public DateTime Issued { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property Issued As DateTime
  overload: Mix.Lib.Models.AccessTokenViewModel.Issued*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.Expires
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.Expires
  id: Expires
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: Expires
  nameWithType: AccessTokenViewModel.Expires
  fullName: Mix.Lib.Models.AccessTokenViewModel.Expires
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Expires
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public DateTime Expires { get; set; }
    parameters: []
    return:
      type: DateTime
    content.vb: Public Property Expires As DateTime
  overload: Mix.Lib.Models.AccessTokenViewModel.Expires*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.DeviceId
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.DeviceId
  id: DeviceId
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: DeviceId
  nameWithType: AccessTokenViewModel.DeviceId
  fullName: Mix.Lib.Models.AccessTokenViewModel.DeviceId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeviceId
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public string DeviceId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DeviceId As String
  overload: Mix.Lib.Models.AccessTokenViewModel.DeviceId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.Info
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.Info
  id: Info
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: Info
  nameWithType: AccessTokenViewModel.Info
  fullName: Mix.Lib.Models.AccessTokenViewModel.Info
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Info
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public MixUserViewModel Info { get; set; }
    parameters: []
    return:
      type: MixUserViewModel
    content.vb: Public Property Info As MixUserViewModel
  overload: Mix.Lib.Models.AccessTokenViewModel.Info*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.Roles
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.Roles
  id: Roles
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: Roles
  nameWithType: AccessTokenViewModel.Roles
  fullName: Mix.Lib.Models.AccessTokenViewModel.Roles
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Roles
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 22
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public List<string> Roles { get; set; }
    parameters: []
    return:
      type: List{System.String}
    content.vb: Public Property Roles As List(Of String)
  overload: Mix.Lib.Models.AccessTokenViewModel.Roles*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration
  commentId: P:Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration
  id: LastUpdateConfiguration
  parent: Mix.Lib.Models.AccessTokenViewModel
  langs:
  - csharp
  - vb
  name: LastUpdateConfiguration
  nameWithType: AccessTokenViewModel.LastUpdateConfiguration
  fullName: Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/AccessTokenModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastUpdateConfiguration
    path: ../../mix.core/src/platform/mix.library/Models/AccessTokenModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models
  syntax:
    content: public DateTime? LastUpdateConfiguration { get; set; }
    parameters: []
    return:
      type: System.Nullable{DateTime}
    content.vb: Public Property LastUpdateConfiguration As DateTime?
  overload: Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Models
  commentId: N:Mix.Lib.Models
  name: Mix.Lib.Models
  nameWithType: Mix.Lib.Models
  fullName: Mix.Lib.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.AccessTokenViewModel.AccessToken*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.AccessToken
  name: AccessToken
  nameWithType: AccessTokenViewModel.AccessToken
  fullName: Mix.Lib.Models.AccessTokenViewModel.AccessToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Models.AccessTokenViewModel.TokenType*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.TokenType
  name: TokenType
  nameWithType: AccessTokenViewModel.TokenType
  fullName: Mix.Lib.Models.AccessTokenViewModel.TokenType
- uid: Mix.Lib.Models.AccessTokenViewModel.RefreshToken*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.RefreshToken
  name: RefreshToken
  nameWithType: AccessTokenViewModel.RefreshToken
  fullName: Mix.Lib.Models.AccessTokenViewModel.RefreshToken
- uid: Guid
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: Guid
- uid: Mix.Lib.Models.AccessTokenViewModel.ExpiresIn*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.ExpiresIn
  name: ExpiresIn
  nameWithType: AccessTokenViewModel.ExpiresIn
  fullName: Mix.Lib.Models.AccessTokenViewModel.ExpiresIn
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.Models.AccessTokenViewModel.ClientId*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.ClientId
  name: ClientId
  nameWithType: AccessTokenViewModel.ClientId
  fullName: Mix.Lib.Models.AccessTokenViewModel.ClientId
- uid: Mix.Lib.Models.AccessTokenViewModel.Issued*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.Issued
  name: Issued
  nameWithType: AccessTokenViewModel.Issued
  fullName: Mix.Lib.Models.AccessTokenViewModel.Issued
- uid: DateTime
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: Mix.Lib.Models.AccessTokenViewModel.Expires*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.Expires
  name: Expires
  nameWithType: AccessTokenViewModel.Expires
  fullName: Mix.Lib.Models.AccessTokenViewModel.Expires
- uid: Mix.Lib.Models.AccessTokenViewModel.DeviceId*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.DeviceId
  name: DeviceId
  nameWithType: AccessTokenViewModel.DeviceId
  fullName: Mix.Lib.Models.AccessTokenViewModel.DeviceId
- uid: Mix.Lib.Models.AccessTokenViewModel.Info*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.Info
  name: Info
  nameWithType: AccessTokenViewModel.Info
  fullName: Mix.Lib.Models.AccessTokenViewModel.Info
- uid: MixUserViewModel
  isExternal: true
  name: MixUserViewModel
  nameWithType: MixUserViewModel
  fullName: MixUserViewModel
- uid: Mix.Lib.Models.AccessTokenViewModel.Roles*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.Roles
  name: Roles
  nameWithType: AccessTokenViewModel.Roles
  fullName: Mix.Lib.Models.AccessTokenViewModel.Roles
- uid: List{System.String}
  commentId: '!:List{System.String}'
  definition: List`1
  name: List<String>
  nameWithType: List<String>
  fullName: List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration*
  commentId: Overload:Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration
  name: LastUpdateConfiguration
  nameWithType: AccessTokenViewModel.LastUpdateConfiguration
  fullName: Mix.Lib.Models.AccessTokenViewModel.LastUpdateConfiguration
- uid: System.Nullable{DateTime}
  commentId: T:System.Nullable{DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
