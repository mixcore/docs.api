### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  commentId: T:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  id: Helper
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  children:
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel(System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject},System.String,System.String,System.String,System.Collections.Generic.List{System.String})
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(System.String,System.String,Mix.Domain.Core.ViewModels.RequestPaging,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(System.String,System.String,System.String,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData(Mix.Cms.Lib.Enums.MixDatabaseParentType,System.Int32,Microsoft.AspNetCore.Http.HttpRequest,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData(System.String,Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel,Microsoft.AspNetCore.Http.IFormFile)
  - Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData(System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  langs:
  - csharp
  - vb
  name: Helper
  nameWithType: Helper
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Helper
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 27
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: public static class Helper
    content.vb: Public Module Helper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData(System.String,Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel,Microsoft.AspNetCore.Http.IFormFile)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData(System.String,Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel,Microsoft.AspNetCore.Http.IFormFile)
  id: ImportData(System.String,Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel,Microsoft.AspNetCore.Http.IFormFile)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: ImportData(String, ReadViewModel, IFormFile)
  nameWithType: Helper.ImportData(String, ReadViewModel, IFormFile)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData(System.String, Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel, Microsoft.AspNetCore.Http.IFormFile)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ImportData
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: public static Task<RepositoryResponse<bool>> ImportData(string culture, ReadViewModel attributeSet, IFormFile file)
    parameters:
    - id: culture
      type: System.String
    - id: attributeSet
      type: Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel
    - id: file
      type: Microsoft.AspNetCore.Http.IFormFile
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
    content.vb: Public Shared Function ImportData(culture As String, attributeSet As ReadViewModel, file As IFormFile) As Task(Of RepositoryResponse(Of Boolean))
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData(Mix.Cms.Lib.Enums.MixDatabaseParentType,System.Int32,Microsoft.AspNetCore.Http.HttpRequest,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData(Mix.Cms.Lib.Enums.MixDatabaseParentType,System.Int32,Microsoft.AspNetCore.Http.HttpRequest,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetAdditionalData(Mix.Cms.Lib.Enums.MixDatabaseParentType,System.Int32,Microsoft.AspNetCore.Http.HttpRequest,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: GetAdditionalData(MixDatabaseParentType, Int32, HttpRequest, String, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetAdditionalData(MixDatabaseParentType, Int32, HttpRequest, String, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData(Mix.Cms.Lib.Enums.MixDatabaseParentType, System.Int32, Microsoft.AspNetCore.Http.HttpRequest, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAdditionalData
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 69
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: public static Task<RepositoryResponse<AdditionalViewModel>> GetAdditionalData(MixDatabaseParentType parentType, int parentId, HttpRequest request, string culture = null, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: parentType
      type: Mix.Cms.Lib.Enums.MixDatabaseParentType
    - id: parentId
      type: System.Int32
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
    - id: culture
      type: System.String
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel}}
    content.vb: Public Shared Function GetAdditionalData(parentType As MixDatabaseParentType, parentId As Integer, request As HttpRequest, culture As String = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of AdditionalViewModel))
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(System.String,System.String,Mix.Domain.Core.ViewModels.RequestPaging,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(System.String,System.String,Mix.Domain.Core.ViewModels.RequestPaging,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: FilterByKeywordAsync``1(System.String,System.String,Mix.Domain.Core.ViewModels.RequestPaging,System.String,System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: FilterByKeywordAsync<TView>(String, String, RequestPaging, String, Dictionary<String, StringValues>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.FilterByKeywordAsync<TView>(String, String, RequestPaging, String, Dictionary<String, StringValues>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync<TView>(System.String, System.String, Mix.Domain.Core.ViewModels.RequestPaging, System.String, System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FilterByKeywordAsync
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 168
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> FilterByKeywordAsync<TView>(string culture, string attributeSetName, RequestPaging request, string keyword, Dictionary<string, StringValues> queryDictionary = null, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixAttributeSetData, TView>
    parameters:
    - id: culture
      type: System.String
    - id: attributeSetName
      type: System.String
    - id: request
      type: Mix.Domain.Core.ViewModels.RequestPaging
    - id: keyword
      type: System.String
    - id: queryDictionary
      type: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function FilterByKeywordAsync(Of TView As ViewModelBase(Of MixCmsContext, MixAttributeSetData, TView))(culture As String, attributeSetName As String, request As RequestPaging, keyword As String, queryDictionary As Dictionary(Of String, StringValues) = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync*
  nameWithType.vb: Helper.FilterByKeywordAsync(Of TView)(String, String, RequestPaging, String, Dictionary(Of String, StringValues), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync(Of TView)(System.String, System.String, Mix.Domain.Core.ViewModels.RequestPaging, System.String, System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: FilterByKeywordAsync(Of TView)(String, String, RequestPaging, String, Dictionary(Of String, StringValues), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: FilterByKeywordAsync``1(Microsoft.AspNetCore.Http.HttpRequest,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: FilterByKeywordAsync<TView>(HttpRequest, String, String, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.FilterByKeywordAsync<TView>(HttpRequest, String, String, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync<TView>(Microsoft.AspNetCore.Http.HttpRequest, System.String, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FilterByKeywordAsync
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 255
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> FilterByKeywordAsync<TView>(HttpRequest request, string culture = null, string attributeSetName = null, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixAttributeSetData, TView>
    parameters:
    - id: request
      type: Microsoft.AspNetCore.Http.HttpRequest
    - id: culture
      type: System.String
    - id: attributeSetName
      type: System.String
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function FilterByKeywordAsync(Of TView As ViewModelBase(Of MixCmsContext, MixAttributeSetData, TView))(request As HttpRequest, culture As String = Nothing, attributeSetName As String = Nothing, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync*
  nameWithType.vb: Helper.FilterByKeywordAsync(Of TView)(HttpRequest, String, String, MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync(Of TView)(Microsoft.AspNetCore.Http.HttpRequest, System.String, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: FilterByKeywordAsync(Of TView)(HttpRequest, String, String, MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(System.String,System.String,System.String,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync``1(System.String,System.String,System.String,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: FilterByKeywordAsync``1(System.String,System.String,System.String,System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: FilterByKeywordAsync<TView>(String, String, String, String, String, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.FilterByKeywordAsync<TView>(String, String, String, String, String, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync<TView>(System.String, System.String, System.String, System.String, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FilterByKeywordAsync
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 376
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: >-
      public static Task<RepositoryResponse<List<TView>>> FilterByKeywordAsync<TView>(string culture, string attributeSetName, string filterType, string fieldName, string keyword, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixAttributeSetData, TView>
    parameters:
    - id: culture
      type: System.String
    - id: attributeSetName
      type: System.String
    - id: filterType
      type: System.String
    - id: fieldName
      type: System.String
    - id: keyword
      type: System.String
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{{TView}}}}
    content.vb: Public Shared Function FilterByKeywordAsync(Of TView As ViewModelBase(Of MixCmsContext, MixAttributeSetData, TView))(culture As String, attributeSetName As String, filterType As String, fieldName As String, keyword As String, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of List(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync*
  nameWithType.vb: Helper.FilterByKeywordAsync(Of TView)(String, String, String, String, String, MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync(Of TView)(System.String, System.String, System.String, System.String, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: FilterByKeywordAsync(Of TView)(String, String, String, String, String, MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: GetAttributeDataByParent``1(System.String,System.String,System.String,Mix.Cms.Lib.Enums.MixDatabaseParentType,System.String,Mix.Heart.Enums.MixHeartEnums.DisplayDirection,System.Nullable{System.Int32},System.Nullable{System.Int32},Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: GetAttributeDataByParent<TView>(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.GetAttributeDataByParent<TView>(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable<Int32>, Nullable<Int32>, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent<TView>(System.String, System.String, System.String, Mix.Cms.Lib.Enums.MixDatabaseParentType, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable<System.Int32>, System.Nullable<System.Int32>, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetAttributeDataByParent
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 435
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: >-
      public static Task<RepositoryResponse<PaginationModel<TView>>> GetAttributeDataByParent<TView>(string culture, string attributeSetName, string parentId, MixDatabaseParentType parentType, string orderBy, MixHeartEnums.DisplayDirection direction, int? pageSize, int? pageIndex, MixCmsContext _context = null, IDbContextTransaction _transaction = null)

          where TView : ViewModelBase<MixCmsContext, MixAttributeSetData, TView>
    parameters:
    - id: culture
      type: System.String
    - id: attributeSetName
      type: System.String
    - id: parentId
      type: System.String
    - id: parentType
      type: Mix.Cms.Lib.Enums.MixDatabaseParentType
    - id: orderBy
      type: System.String
    - id: direction
      type: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
    - id: pageSize
      type: System.Nullable{System.Int32}
    - id: pageIndex
      type: System.Nullable{System.Int32}
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    typeParameters:
    - id: TView
    return:
      type: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
    content.vb: Public Shared Function GetAttributeDataByParent(Of TView As ViewModelBase(Of MixCmsContext, MixAttributeSetData, TView))(culture As String, attributeSetName As String, parentId As String, parentType As MixDatabaseParentType, orderBy As String, direction As MixHeartEnums.DisplayDirection, pageSize As Integer?, pageIndex As Integer?, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent*
  nameWithType.vb: Helper.GetAttributeDataByParent(Of TView)(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent(Of TView)(System.String, System.String, System.String, Mix.Cms.Lib.Enums.MixDatabaseParentType, System.String, Mix.Heart.Enums.MixHeartEnums.DisplayDirection, System.Nullable(Of System.Int32), System.Nullable(Of System.Int32), Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  name.vb: GetAttributeDataByParent(Of TView)(String, String, String, MixDatabaseParentType, String, MixHeartEnums.DisplayDirection, Nullable(Of Int32), Nullable(Of Int32), MixCmsContext, IDbContextTransaction)
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel(System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject},System.String,System.String,System.String,System.Collections.Generic.List{System.String})
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel(System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject},System.String,System.String,System.String,System.Collections.Generic.List{System.String})
  id: ExportAttributeToExcel(System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject},System.String,System.String,System.String,System.Collections.Generic.List{System.String})
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: ExportAttributeToExcel(List<JObject>, String, String, String, List<String>)
  nameWithType: Helper.ExportAttributeToExcel(List<JObject>, String, String, String, List<String>)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel(System.Collections.Generic.List<Newtonsoft.Json.Linq.JObject>, System.String, System.String, System.String, System.Collections.Generic.List<System.String>)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExportAttributeToExcel
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 474
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: public static RepositoryResponse<FileViewModel> ExportAttributeToExcel(List<JObject> lstData, string sheetName, string folderPath, string fileName, List<string> headers = null)
    parameters:
    - id: lstData
      type: System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}
    - id: sheetName
      type: System.String
    - id: folderPath
      type: System.String
    - id: fileName
      type: System.String
    - id: headers
      type: System.Collections.Generic.List{System.String}
    return:
      type: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Services.FileViewModel}
    content.vb: Public Shared Function ExportAttributeToExcel(lstData As List(Of JObject), sheetName As String, folderPath As String, fileName As String, headers As List(Of String) = Nothing) As RepositoryResponse(Of FileViewModel)
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel*
  nameWithType.vb: Helper.ExportAttributeToExcel(List(Of JObject), String, String, String, List(Of String))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel(System.Collections.Generic.List(Of Newtonsoft.Json.Linq.JObject), System.String, System.String, System.String, System.Collections.Generic.List(Of System.String))
  name.vb: ExportAttributeToExcel(List(Of JObject), String, String, String, List(Of String))
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData(System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  commentId: M:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData(System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  id: ParseData(System.String,System.String,Mix.Cms.Lib.Models.Cms.MixCmsContext,Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper
  langs:
  - csharp
  - vb
  name: ParseData(String, String, MixCmsContext, IDbContextTransaction)
  nameWithType: Helper.ParseData(String, String, MixCmsContext, IDbContextTransaction)
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData(System.String, System.String, Mix.Cms.Lib.Models.Cms.MixCmsContext, Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)
  type: Method
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseData
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/MixAttributeSetDatas/Helper.cs
    startLine: 557
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  syntax:
    content: public static JObject ParseData(string dataId, string culture, MixCmsContext _context = null, IDbContextTransaction _transaction = null)
    parameters:
    - id: dataId
      type: System.String
    - id: culture
      type: System.String
    - id: _context
      type: Mix.Cms.Lib.Models.Cms.MixCmsContext
    - id: _transaction
      type: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: Public Shared Function ParseData(dataId As String, culture As String, _context As MixCmsContext = Nothing, _transaction As IDbContextTransaction = Nothing) As JObject
  overload: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  commentId: N:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  name: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  nameWithType: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData
  name: ImportData
  nameWithType: Helper.ImportData
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ImportData
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel
  parent: Mix.Cms.Lib.ViewModels.MixAttributeSets
  name: ReadViewModel
  nameWithType: ReadViewModel
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSets.ReadViewModel
- uid: Microsoft.AspNetCore.Http.IFormFile
  commentId: T:Microsoft.AspNetCore.Http.IFormFile
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IFormFile
  nameWithType: IFormFile
  fullName: Microsoft.AspNetCore.Http.IFormFile
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Boolean}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<Boolean>>
  nameWithType: Task<RepositoryResponse<Boolean>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<System.Boolean>>
  nameWithType.vb: Task(Of RepositoryResponse(Of Boolean))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Boolean))
  name.vb: Task(Of RepositoryResponse(Of Boolean))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSets
  commentId: N:Mix.Cms.Lib.ViewModels.MixAttributeSets
  name: Mix.Cms.Lib.ViewModels.MixAttributeSets
  nameWithType: Mix.Cms.Lib.ViewModels.MixAttributeSets
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSets
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData
  name: GetAdditionalData
  nameWithType: Helper.GetAdditionalData
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAdditionalData
- uid: Mix.Cms.Lib.Enums.MixDatabaseParentType
  commentId: T:Mix.Cms.Lib.Enums.MixDatabaseParentType
  parent: Mix.Cms.Lib.Enums
  name: MixDatabaseParentType
  nameWithType: MixDatabaseParentType
  fullName: Mix.Cms.Lib.Enums.MixDatabaseParentType
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: Mix.Cms.Lib.Models.Cms.MixCmsContext
  commentId: T:Mix.Cms.Lib.Models.Cms.MixCmsContext
  parent: Mix.Cms.Lib.Models.Cms
  name: MixCmsContext
  nameWithType: MixCmsContext
  fullName: Mix.Cms.Lib.Models.Cms.MixCmsContext
- uid: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  commentId: T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
  parent: Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: IDbContextTransaction
  nameWithType: IDbContextTransaction
  fullName: Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<AdditionalViewModel>>
  nameWithType: Task<RepositoryResponse<AdditionalViewModel>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel>>
  nameWithType.vb: Task(Of RepositoryResponse(Of AdditionalViewModel))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel))
  name.vb: Task(Of RepositoryResponse(Of AdditionalViewModel))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel
    name: AdditionalViewModel
    nameWithType: AdditionalViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel
    name: AdditionalViewModel
    nameWithType: AdditionalViewModel
    fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.AdditionalViewModel
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.Enums
  commentId: N:Mix.Cms.Lib.Enums
  name: Mix.Cms.Lib.Enums
  nameWithType: Mix.Cms.Lib.Enums
  fullName: Mix.Cms.Lib.Enums
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: Microsoft.EntityFrameworkCore.Storage
  commentId: N:Microsoft.EntityFrameworkCore.Storage
  isExternal: true
  name: Microsoft.EntityFrameworkCore.Storage
  nameWithType: Microsoft.EntityFrameworkCore.Storage
  fullName: Microsoft.EntityFrameworkCore.Storage
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync
  name: FilterByKeywordAsync
  nameWithType: Helper.FilterByKeywordAsync
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.FilterByKeywordAsync
- uid: Mix.Domain.Core.ViewModels.RequestPaging
  commentId: T:Mix.Domain.Core.ViewModels.RequestPaging
  parent: Mix.Domain.Core.ViewModels
  isExternal: true
  name: RequestPaging
  nameWithType: RequestPaging
  fullName: Mix.Domain.Core.ViewModels.RequestPaging
- uid: System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  commentId: T:System.Collections.Generic.Dictionary{System.String,Microsoft.Extensions.Primitives.StringValues}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, StringValues>
  nameWithType: Dictionary<String, StringValues>
  fullName: System.Collections.Generic.Dictionary<System.String, Microsoft.Extensions.Primitives.StringValues>
  nameWithType.vb: Dictionary(Of String, StringValues)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, Microsoft.Extensions.Primitives.StringValues)
  name.vb: Dictionary(Of String, StringValues)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.Extensions.Primitives.StringValues
    name: StringValues
    nameWithType: StringValues
    fullName: Microsoft.Extensions.Primitives.StringValues
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{{TView}}}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Domain.Core.ViewModels.PaginationModel{`2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<PaginationModel<TView>>>
  nameWithType: Task<RepositoryResponse<PaginationModel<TView>>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Domain.Core.ViewModels.PaginationModel<TView>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Domain.Core.ViewModels.PaginationModel(Of TView)))
  name.vb: Task(Of RepositoryResponse(Of PaginationModel(Of TView)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.PaginationModel`1
    name: PaginationModel
    nameWithType: PaginationModel
    fullName: Mix.Domain.Core.ViewModels.PaginationModel
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels
  commentId: N:Mix.Domain.Core.ViewModels
  isExternal: true
  name: Mix.Domain.Core.ViewModels
  nameWithType: Mix.Domain.Core.ViewModels
  fullName: Mix.Domain.Core.ViewModels
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{{TView}}}}
  commentId: T:System.Threading.Tasks.Task{Mix.Domain.Core.ViewModels.RepositoryResponse{System.Collections.Generic.List{`2}}}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<RepositoryResponse<List<TView>>>
  nameWithType: Task<RepositoryResponse<List<TView>>>
  fullName: System.Threading.Tasks.Task<Mix.Domain.Core.ViewModels.RepositoryResponse<System.Collections.Generic.List<TView>>>
  nameWithType.vb: Task(Of RepositoryResponse(Of List(Of TView)))
  fullName.vb: System.Threading.Tasks.Task(Of Mix.Domain.Core.ViewModels.RepositoryResponse(Of System.Collections.Generic.List(Of TView)))
  name.vb: Task(Of RepositoryResponse(Of List(Of TView)))
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent
  name: GetAttributeDataByParent
  nameWithType: Helper.GetAttributeDataByParent
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.GetAttributeDataByParent
- uid: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
  commentId: T:Mix.Heart.Enums.MixHeartEnums.DisplayDirection
  parent: Mix.Heart.Enums
  isExternal: true
  name: MixHeartEnums.DisplayDirection
  nameWithType: MixHeartEnums.DisplayDirection
  fullName: Mix.Heart.Enums.MixHeartEnums.DisplayDirection
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  isExternal: true
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel
  name: ExportAttributeToExcel
  nameWithType: Helper.ExportAttributeToExcel
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ExportAttributeToExcel
- uid: System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}
  commentId: T:System.Collections.Generic.List{Newtonsoft.Json.Linq.JObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<JObject>
  nameWithType: List<JObject>
  fullName: System.Collections.Generic.List<Newtonsoft.Json.Linq.JObject>
  nameWithType.vb: List(Of JObject)
  fullName.vb: System.Collections.Generic.List(Of Newtonsoft.Json.Linq.JObject)
  name.vb: List(Of JObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Newtonsoft.Json.Linq.JObject
    name: JObject
    nameWithType: JObject
    fullName: Newtonsoft.Json.Linq.JObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Services.FileViewModel}
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse{Mix.Services.FileViewModel}
  parent: Mix.Domain.Core.ViewModels
  definition: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  name: RepositoryResponse<FileViewModel>
  nameWithType: RepositoryResponse<FileViewModel>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<Mix.Services.FileViewModel>
  nameWithType.vb: RepositoryResponse(Of FileViewModel)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of Mix.Services.FileViewModel)
  name.vb: RepositoryResponse(Of FileViewModel)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Services.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Mix.Services.FileViewModel
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Services.FileViewModel
    name: FileViewModel
    nameWithType: FileViewModel
    fullName: Mix.Services.FileViewModel
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
  commentId: T:Mix.Domain.Core.ViewModels.RepositoryResponse`1
  isExternal: true
  name: RepositoryResponse<TResult>
  nameWithType: RepositoryResponse<TResult>
  fullName: Mix.Domain.Core.ViewModels.RepositoryResponse<TResult>
  nameWithType.vb: RepositoryResponse(Of TResult)
  fullName.vb: Mix.Domain.Core.ViewModels.RepositoryResponse(Of TResult)
  name.vb: RepositoryResponse(Of TResult)
  spec.csharp:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Domain.Core.ViewModels.RepositoryResponse`1
    name: RepositoryResponse
    nameWithType: RepositoryResponse
    fullName: Mix.Domain.Core.ViewModels.RepositoryResponse
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData*
  commentId: Overload:Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData
  name: ParseData
  nameWithType: Helper.ParseData
  fullName: Mix.Cms.Lib.ViewModels.MixAttributeSetDatas.Helper.ParseData
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
