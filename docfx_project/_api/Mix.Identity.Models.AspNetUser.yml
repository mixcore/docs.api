### YamlMime:ManagedReference
items:
- uid: Mix.Identity.Models.AspNetUser
  commentId: T:Mix.Identity.Models.AspNetUser
  id: AspNetUser
  parent: Mix.Identity.Models
  children:
  - Mix.Identity.Models.AspNetUser.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  - Mix.Identity.Models.AspNetUser.GetClaimsIdentity
  - Mix.Identity.Models.AspNetUser.IsAuthenticated
  - Mix.Identity.Models.AspNetUser.Name
  langs:
  - csharp
  - vb
  name: AspNetUser
  nameWithType: AspNetUser
  fullName: Mix.Identity.Models.AspNetUser
  type: Class
  source:
    remote:
      path: src/Mix.Identity/Models/AspNetUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUser
    path: ../../mix.core/src/Mix.Identity/Models/AspNetUser.cs
    startLine: 11
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models
  syntax:
    content: 'public class AspNetUser : IUser'
    content.vb: >-
      Public Class AspNetUser

          Implements IUser
  inheritance:
  - System.Object
  implements:
  - Mix.Identity.Interfaces.IUser
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Identity.Models.AspNetUser.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  commentId: M:Mix.Identity.Models.AspNetUser.#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  id: '#ctor(Microsoft.AspNetCore.Http.IHttpContextAccessor)'
  parent: Mix.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: AspNetUser(IHttpContextAccessor)
  nameWithType: AspNetUser.AspNetUser(IHttpContextAccessor)
  fullName: Mix.Identity.Models.AspNetUser.AspNetUser(Microsoft.AspNetCore.Http.IHttpContextAccessor)
  type: Constructor
  source:
    remote:
      path: src/Mix.Identity/Models/AspNetUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Identity/Models/AspNetUser.cs
    startLine: 22
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models
  summary: "\nInitializes a new instance of the <xref href=\"Mix.Identity.Models.AspNetUser\" data-throw-if-not-resolved=\"false\"></xref> class.\n"
  example: []
  syntax:
    content: public AspNetUser(IHttpContextAccessor accessor)
    parameters:
    - id: accessor
      type: Microsoft.AspNetCore.Http.IHttpContextAccessor
      description: The accessor.
    content.vb: Public Sub New(accessor As IHttpContextAccessor)
  overload: Mix.Identity.Models.AspNetUser.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AspNetUser.Name
  commentId: P:Mix.Identity.Models.AspNetUser.Name
  id: Name
  parent: Mix.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: AspNetUser.Name
  fullName: Mix.Identity.Models.AspNetUser.Name
  type: Property
  source:
    remote:
      path: src/Mix.Identity/Models/AspNetUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Identity/Models/AspNetUser.cs
    startLine: 33
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models
  summary: "\nGets the name.\n"
  example: []
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
      description: "\nThe name.\n"
    content.vb: Public ReadOnly Property Name As String
  overload: Mix.Identity.Models.AspNetUser.Name*
  implements:
  - Mix.Identity.Interfaces.IUser.Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Identity.Models.AspNetUser.IsAuthenticated
  commentId: M:Mix.Identity.Models.AspNetUser.IsAuthenticated
  id: IsAuthenticated
  parent: Mix.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: IsAuthenticated()
  nameWithType: AspNetUser.IsAuthenticated()
  fullName: Mix.Identity.Models.AspNetUser.IsAuthenticated()
  type: Method
  source:
    remote:
      path: src/Mix.Identity/Models/AspNetUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsAuthenticated
    path: ../../mix.core/src/Mix.Identity/Models/AspNetUser.cs
    startLine: 41
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models
  summary: "\nDetermines whether this instance is authenticated.\n"
  example: []
  syntax:
    content: public bool IsAuthenticated()
    return:
      type: System.Boolean
      description: "\n<code>true</code> if this instance is authenticated; otherwise, <code>false</code>.\n"
    content.vb: Public Function IsAuthenticated As Boolean
  overload: Mix.Identity.Models.AspNetUser.IsAuthenticated*
  implements:
  - Mix.Identity.Interfaces.IUser.IsAuthenticated
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Identity.Models.AspNetUser.GetClaimsIdentity
  commentId: M:Mix.Identity.Models.AspNetUser.GetClaimsIdentity
  id: GetClaimsIdentity
  parent: Mix.Identity.Models.AspNetUser
  langs:
  - csharp
  - vb
  name: GetClaimsIdentity()
  nameWithType: AspNetUser.GetClaimsIdentity()
  fullName: Mix.Identity.Models.AspNetUser.GetClaimsIdentity()
  type: Method
  source:
    remote:
      path: src/Mix.Identity/Models/AspNetUser.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetClaimsIdentity
    path: ../../mix.core/src/Mix.Identity/Models/AspNetUser.cs
    startLine: 50
  assemblies:
  - Mix.Identity
  namespace: Mix.Identity.Models
  summary: "\nGets the claims identity.\n"
  example: []
  syntax:
    content: public IEnumerable<Claim> GetClaimsIdentity()
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: ''
    content.vb: Public Function GetClaimsIdentity As IEnumerable(Of Claim)
  overload: Mix.Identity.Models.AspNetUser.GetClaimsIdentity*
  implements:
  - Mix.Identity.Interfaces.IUser.GetClaimsIdentity
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Identity.Models
  commentId: N:Mix.Identity.Models
  name: Mix.Identity.Models
  nameWithType: Mix.Identity.Models
  fullName: Mix.Identity.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Identity.Interfaces.IUser
  commentId: T:Mix.Identity.Interfaces.IUser
  parent: Mix.Identity.Interfaces
  name: IUser
  nameWithType: IUser
  fullName: Mix.Identity.Interfaces.IUser
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Identity.Interfaces
  commentId: N:Mix.Identity.Interfaces
  name: Mix.Identity.Interfaces
  nameWithType: Mix.Identity.Interfaces
  fullName: Mix.Identity.Interfaces
- uid: Mix.Identity.Models.AspNetUser
  commentId: T:Mix.Identity.Models.AspNetUser
  name: AspNetUser
  nameWithType: AspNetUser
  fullName: Mix.Identity.Models.AspNetUser
- uid: Mix.Identity.Models.AspNetUser.#ctor*
  commentId: Overload:Mix.Identity.Models.AspNetUser.#ctor
  name: AspNetUser
  nameWithType: AspNetUser.AspNetUser
  fullName: Mix.Identity.Models.AspNetUser.AspNetUser
- uid: Microsoft.AspNetCore.Http.IHttpContextAccessor
  commentId: T:Microsoft.AspNetCore.Http.IHttpContextAccessor
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: IHttpContextAccessor
  nameWithType: IHttpContextAccessor
  fullName: Microsoft.AspNetCore.Http.IHttpContextAccessor
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: Mix.Identity.Models.AspNetUser.Name*
  commentId: Overload:Mix.Identity.Models.AspNetUser.Name
  name: Name
  nameWithType: AspNetUser.Name
  fullName: Mix.Identity.Models.AspNetUser.Name
- uid: Mix.Identity.Interfaces.IUser.Name
  commentId: P:Mix.Identity.Interfaces.IUser.Name
  parent: Mix.Identity.Interfaces.IUser
  name: Name
  nameWithType: IUser.Name
  fullName: Mix.Identity.Interfaces.IUser.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Identity.Models.AspNetUser.IsAuthenticated*
  commentId: Overload:Mix.Identity.Models.AspNetUser.IsAuthenticated
  name: IsAuthenticated
  nameWithType: AspNetUser.IsAuthenticated
  fullName: Mix.Identity.Models.AspNetUser.IsAuthenticated
- uid: Mix.Identity.Interfaces.IUser.IsAuthenticated
  commentId: M:Mix.Identity.Interfaces.IUser.IsAuthenticated
  parent: Mix.Identity.Interfaces.IUser
  name: IsAuthenticated()
  nameWithType: IUser.IsAuthenticated()
  fullName: Mix.Identity.Interfaces.IUser.IsAuthenticated()
  spec.csharp:
  - uid: Mix.Identity.Interfaces.IUser.IsAuthenticated
    name: IsAuthenticated
    nameWithType: IUser.IsAuthenticated
    fullName: Mix.Identity.Interfaces.IUser.IsAuthenticated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Identity.Interfaces.IUser.IsAuthenticated
    name: IsAuthenticated
    nameWithType: IUser.IsAuthenticated
    fullName: Mix.Identity.Interfaces.IUser.IsAuthenticated
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Identity.Models.AspNetUser.GetClaimsIdentity*
  commentId: Overload:Mix.Identity.Models.AspNetUser.GetClaimsIdentity
  name: GetClaimsIdentity
  nameWithType: AspNetUser.GetClaimsIdentity
  fullName: Mix.Identity.Models.AspNetUser.GetClaimsIdentity
- uid: Mix.Identity.Interfaces.IUser.GetClaimsIdentity
  commentId: M:Mix.Identity.Interfaces.IUser.GetClaimsIdentity
  parent: Mix.Identity.Interfaces.IUser
  name: GetClaimsIdentity()
  nameWithType: IUser.GetClaimsIdentity()
  fullName: Mix.Identity.Interfaces.IUser.GetClaimsIdentity()
  spec.csharp:
  - uid: Mix.Identity.Interfaces.IUser.GetClaimsIdentity
    name: GetClaimsIdentity
    nameWithType: IUser.GetClaimsIdentity
    fullName: Mix.Identity.Interfaces.IUser.GetClaimsIdentity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Identity.Interfaces.IUser.GetClaimsIdentity
    name: GetClaimsIdentity
    nameWithType: IUser.GetClaimsIdentity
    fullName: Mix.Identity.Interfaces.IUser.GetClaimsIdentity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  commentId: T:System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  nameWithType.vb: IEnumerable(Of Claim)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.Claim)
  name.vb: IEnumerable(Of Claim)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: System.Security.Claims.Claim
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
