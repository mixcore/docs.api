### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  id: MixConfigurationViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor(MixConfiguration,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView
  - Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync(MixConfiguration)
  - Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName
  langs:
  - csharp
  - vb
  name: MixConfigurationViewModel
  nameWithType: MixConfigurationViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixConfigurationViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixConfigurationViewModel : SiteDataWithContentViewModelBase<MixCmsContext, MixConfiguration, int, MixConfigurationViewModel, MixConfigurationContent, MixConfigurationContentViewModel>'
    content.vb: >-
      Public Class MixConfigurationViewModel
          Inherits SiteDataWithContentViewModelBase(Of MixCmsContext, MixConfiguration, Integer, MixConfigurationViewModel, MixConfigurationContent, MixConfigurationContentViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  langs:
  - csharp
  - vb
  name: MixConfigurationViewModel()
  nameWithType: MixConfigurationViewModel.MixConfigurationViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.MixConfigurationViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 12
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixConfigurationViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  langs:
  - csharp
  - vb
  name: MixConfigurationViewModel(UnitOfWorkInfo)
  nameWithType: MixConfigurationViewModel.MixConfigurationViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.MixConfigurationViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 17
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixConfigurationViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor(MixConfiguration,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor(MixConfiguration,UnitOfWorkInfo)
  id: '#ctor(MixConfiguration,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  langs:
  - csharp
  - vb
  name: MixConfigurationViewModel(MixConfiguration, UnitOfWorkInfo)
  nameWithType: MixConfigurationViewModel.MixConfigurationViewModel(MixConfiguration, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.MixConfigurationViewModel(MixConfiguration, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 21
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixConfigurationViewModel(MixConfiguration entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixConfiguration
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixConfiguration, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName
  commentId: P:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName
  id: SystemName
  parent: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MixConfigurationViewModel.SystemName
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 31
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView
  commentId: M:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView
  id: ExpandView
  parent: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: MixConfigurationViewModel.ExpandView()
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 37
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync(MixConfiguration)
  commentId: M:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync(MixConfiguration)
  id: SaveEntityRelationshipAsync(MixConfiguration)
  parent: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel
  langs:
  - csharp
  - vb
  name: SaveEntityRelationshipAsync(MixConfiguration)
  nameWithType: MixConfigurationViewModel.SaveEntityRelationshipAsync(MixConfiguration)
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync(MixConfiguration)
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveEntityRelationshipAsync
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixConfigurationViewModel.cs
    startLine: 45
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: protected override Task SaveEntityRelationshipAsync(MixConfiguration parentEntity)
    parameters:
    - id: parentEntity
      type: MixConfiguration
    return:
      type: Task
    content.vb: Protected Overrides Function SaveEntityRelationshipAsync(parentEntity As MixConfiguration) As Task
  overload: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.#ctor
  name: MixConfigurationViewModel
  nameWithType: MixConfigurationViewModel.MixConfigurationViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.MixConfigurationViewModel
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: MixConfiguration
  isExternal: true
  name: MixConfiguration
  nameWithType: MixConfiguration
  fullName: MixConfiguration
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName
  name: SystemName
  nameWithType: MixConfigurationViewModel.SystemName
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SystemName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView
  name: ExpandView
  nameWithType: MixConfigurationViewModel.ExpandView
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync
  name: SaveEntityRelationshipAsync
  nameWithType: MixConfigurationViewModel.SaveEntityRelationshipAsync
  fullName: Mix.Portal.Domain.ViewModels.MixConfigurationViewModel.SaveEntityRelationshipAsync
