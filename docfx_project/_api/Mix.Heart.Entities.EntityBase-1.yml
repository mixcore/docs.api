### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Entities.EntityBase`1
  commentId: T:Mix.Heart.Entities.EntityBase`1
  id: EntityBase`1
  parent: Mix.Heart.Entities
  children:
  - Mix.Heart.Entities.EntityBase`1.CreatedBy
  - Mix.Heart.Entities.EntityBase`1.CreatedDateTime
  - Mix.Heart.Entities.EntityBase`1.Id
  - Mix.Heart.Entities.EntityBase`1.IsDeleted
  - Mix.Heart.Entities.EntityBase`1.LastModified
  - Mix.Heart.Entities.EntityBase`1.ModifiedBy
  - Mix.Heart.Entities.EntityBase`1.Priority
  - Mix.Heart.Entities.EntityBase`1.Status
  langs:
  - csharp
  - vb
  name: EntityBase<TPrimaryKey>
  nameWithType: EntityBase<TPrimaryKey>
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: EntityBase
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 7
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: 'public abstract class EntityBase<TPrimaryKey> : IEntity<TPrimaryKey>, IHasPrimaryKey<TPrimaryKey> where TPrimaryKey : IComparable'
    typeParameters:
    - id: TPrimaryKey
    content.vb: >-
      Public MustInherit Class EntityBase(Of TPrimaryKey As IComparable)
          Implements IEntity(Of TPrimaryKey), IHasPrimaryKey(Of TPrimaryKey)
  inheritance:
  - System.Object
  implements:
  - Mix.Heart.Entities.IEntity{{TPrimaryKey}}
  - Mix.Heart.Entities.IHasPrimaryKey{{TPrimaryKey}}
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: EntityBase(Of TPrimaryKey)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey)
  name.vb: EntityBase(Of TPrimaryKey)
- uid: Mix.Heart.Entities.EntityBase`1.Id
  commentId: P:Mix.Heart.Entities.EntityBase`1.Id
  id: Id
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: EntityBase<TPrimaryKey>.Id
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.Id
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Id
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: >-
      [Key]

      [DatabaseGenerated(DatabaseGeneratedOption.Identity)]

      public TPrimaryKey Id { get; set; }
    parameters: []
    return:
      type: '{TPrimaryKey}'
    content.vb: >-
      <Key>

      <DatabaseGenerated(DatabaseGeneratedOption.Identity)>

      Public Property Id As TPrimaryKey
  overload: Mix.Heart.Entities.EntityBase`1.Id*
  implements:
  - Mix.Heart.Entities.IHasPrimaryKey{{TPrimaryKey}}.Id
  attributes:
  - type: System.ComponentModel.DataAnnotations.KeyAttribute
    ctor: System.ComponentModel.DataAnnotations.KeyAttribute.#ctor
    arguments: []
  - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute
    ctor: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute.#ctor(System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption)
    arguments:
    - type: System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedOption
      value: 1
  nameWithType.vb: EntityBase(Of TPrimaryKey).Id
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).Id
- uid: Mix.Heart.Entities.EntityBase`1.CreatedDateTime
  commentId: P:Mix.Heart.Entities.EntityBase`1.CreatedDateTime
  id: CreatedDateTime
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: CreatedDateTime
  nameWithType: EntityBase<TPrimaryKey>.CreatedDateTime
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.CreatedDateTime
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: CreatedDateTime
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 13
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public DateTime CreatedDateTime { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreatedDateTime As Date
  overload: Mix.Heart.Entities.EntityBase`1.CreatedDateTime*
  nameWithType.vb: EntityBase(Of TPrimaryKey).CreatedDateTime
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).CreatedDateTime
- uid: Mix.Heart.Entities.EntityBase`1.LastModified
  commentId: P:Mix.Heart.Entities.EntityBase`1.LastModified
  id: LastModified
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: LastModified
  nameWithType: EntityBase<TPrimaryKey>.LastModified
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.LastModified
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: LastModified
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 14
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public DateTime? LastModified { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property LastModified As Date?
  overload: Mix.Heart.Entities.EntityBase`1.LastModified*
  nameWithType.vb: EntityBase(Of TPrimaryKey).LastModified
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).LastModified
- uid: Mix.Heart.Entities.EntityBase`1.CreatedBy
  commentId: P:Mix.Heart.Entities.EntityBase`1.CreatedBy
  id: CreatedBy
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: EntityBase<TPrimaryKey>.CreatedBy
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.CreatedBy
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: CreatedBy
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 15
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Heart.Entities.EntityBase`1.CreatedBy*
  nameWithType.vb: EntityBase(Of TPrimaryKey).CreatedBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).CreatedBy
- uid: Mix.Heart.Entities.EntityBase`1.ModifiedBy
  commentId: P:Mix.Heart.Entities.EntityBase`1.ModifiedBy
  id: ModifiedBy
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: ModifiedBy
  nameWithType: EntityBase<TPrimaryKey>.ModifiedBy
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.ModifiedBy
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: ModifiedBy
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 16
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public string ModifiedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ModifiedBy As String
  overload: Mix.Heart.Entities.EntityBase`1.ModifiedBy*
  nameWithType.vb: EntityBase(Of TPrimaryKey).ModifiedBy
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).ModifiedBy
- uid: Mix.Heart.Entities.EntityBase`1.Priority
  commentId: P:Mix.Heart.Entities.EntityBase`1.Priority
  id: Priority
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: EntityBase<TPrimaryKey>.Priority
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.Priority
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Priority
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 17
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Mix.Heart.Entities.EntityBase`1.Priority*
  nameWithType.vb: EntityBase(Of TPrimaryKey).Priority
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).Priority
- uid: Mix.Heart.Entities.EntityBase`1.Status
  commentId: P:Mix.Heart.Entities.EntityBase`1.Status
  id: Status
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: EntityBase<TPrimaryKey>.Status
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.Status
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Status
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 18
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public MixContentStatus Status { get; set; }
    parameters: []
    return:
      type: Mix.Heart.Enums.MixContentStatus
    content.vb: Public Property Status As MixContentStatus
  overload: Mix.Heart.Entities.EntityBase`1.Status*
  nameWithType.vb: EntityBase(Of TPrimaryKey).Status
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).Status
- uid: Mix.Heart.Entities.EntityBase`1.IsDeleted
  commentId: P:Mix.Heart.Entities.EntityBase`1.IsDeleted
  id: IsDeleted
  parent: Mix.Heart.Entities.EntityBase`1
  langs:
  - csharp
  - vb
  name: IsDeleted
  nameWithType: EntityBase<TPrimaryKey>.IsDeleted
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.IsDeleted
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Entities/EntityBase.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: IsDeleted
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Entities/EntityBase.cs
    startLine: 19
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Entities
  syntax:
    content: public bool IsDeleted { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsDeleted As Boolean
  overload: Mix.Heart.Entities.EntityBase`1.IsDeleted*
  nameWithType.vb: EntityBase(Of TPrimaryKey).IsDeleted
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).IsDeleted
references:
- uid: Mix.Heart.Entities
  commentId: N:Mix.Heart.Entities
  name: Mix.Heart.Entities
  nameWithType: Mix.Heart.Entities
  fullName: Mix.Heart.Entities
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Heart.Entities.IEntity{{TPrimaryKey}}
  commentId: T:Mix.Heart.Entities.IEntity{`0}
  parent: Mix.Heart.Entities
  definition: Mix.Heart.Entities.IEntity`1
  name: IEntity<TPrimaryKey>
  nameWithType: IEntity<TPrimaryKey>
  fullName: Mix.Heart.Entities.IEntity<TPrimaryKey>
  nameWithType.vb: IEntity(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.IEntity(Of TPrimaryKey)
  name.vb: IEntity(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.IHasPrimaryKey{{TPrimaryKey}}
  commentId: T:Mix.Heart.Entities.IHasPrimaryKey{`0}
  parent: Mix.Heart.Entities
  definition: Mix.Heart.Entities.IHasPrimaryKey`1
  name: IHasPrimaryKey<TPrimaryKey>
  nameWithType: IHasPrimaryKey<TPrimaryKey>
  fullName: Mix.Heart.Entities.IHasPrimaryKey<TPrimaryKey>
  nameWithType.vb: IHasPrimaryKey(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.IHasPrimaryKey(Of TPrimaryKey)
  name.vb: IHasPrimaryKey(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.Entities.IEntity`1
  commentId: T:Mix.Heart.Entities.IEntity`1
  name: IEntity<TPrimaryKey>
  nameWithType: IEntity<TPrimaryKey>
  fullName: Mix.Heart.Entities.IEntity<TPrimaryKey>
  nameWithType.vb: IEntity(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.IEntity(Of TPrimaryKey)
  name.vb: IEntity(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IEntity`1
    name: IEntity
    nameWithType: IEntity
    fullName: Mix.Heart.Entities.IEntity
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.IHasPrimaryKey`1
  commentId: T:Mix.Heart.Entities.IHasPrimaryKey`1
  name: IHasPrimaryKey<TPrimaryKey>
  nameWithType: IHasPrimaryKey<TPrimaryKey>
  fullName: Mix.Heart.Entities.IHasPrimaryKey<TPrimaryKey>
  nameWithType.vb: IHasPrimaryKey(Of TPrimaryKey)
  fullName.vb: Mix.Heart.Entities.IHasPrimaryKey(Of TPrimaryKey)
  name.vb: IHasPrimaryKey(Of TPrimaryKey)
  spec.csharp:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: <
    nameWithType: <
    fullName: <
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Heart.Entities.IHasPrimaryKey`1
    name: IHasPrimaryKey
    nameWithType: IHasPrimaryKey
    fullName: Mix.Heart.Entities.IHasPrimaryKey
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.EntityBase`1.Id*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.Id
  name: Id
  nameWithType: EntityBase<TPrimaryKey>.Id
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.Id
  nameWithType.vb: EntityBase(Of TPrimaryKey).Id
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).Id
- uid: Mix.Heart.Entities.IHasPrimaryKey{{TPrimaryKey}}.Id
  commentId: P:Mix.Heart.Entities.IHasPrimaryKey{`0}.Id
  parent: Mix.Heart.Entities.IHasPrimaryKey{{TPrimaryKey}}
  definition: Mix.Heart.Entities.IHasPrimaryKey`1.Id
  name: Id
  nameWithType: IHasPrimaryKey<TPrimaryKey>.Id
  fullName: Mix.Heart.Entities.IHasPrimaryKey<TPrimaryKey>.Id
  nameWithType.vb: IHasPrimaryKey(Of TPrimaryKey).Id
  fullName.vb: Mix.Heart.Entities.IHasPrimaryKey(Of TPrimaryKey).Id
- uid: '{TPrimaryKey}'
  commentId: '!:TPrimaryKey'
  definition: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: Mix.Heart.Entities.IHasPrimaryKey`1.Id
  commentId: P:Mix.Heart.Entities.IHasPrimaryKey`1.Id
  name: Id
  nameWithType: IHasPrimaryKey<TPrimaryKey>.Id
  fullName: Mix.Heart.Entities.IHasPrimaryKey<TPrimaryKey>.Id
  nameWithType.vb: IHasPrimaryKey(Of TPrimaryKey).Id
  fullName.vb: Mix.Heart.Entities.IHasPrimaryKey(Of TPrimaryKey).Id
- uid: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: Mix.Heart.Entities.EntityBase`1.CreatedDateTime*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.CreatedDateTime
  name: CreatedDateTime
  nameWithType: EntityBase<TPrimaryKey>.CreatedDateTime
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.CreatedDateTime
  nameWithType.vb: EntityBase(Of TPrimaryKey).CreatedDateTime
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).CreatedDateTime
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: Mix.Heart.Entities.EntityBase`1.LastModified*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.LastModified
  name: LastModified
  nameWithType: EntityBase<TPrimaryKey>.LastModified
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.LastModified
  nameWithType.vb: EntityBase(Of TPrimaryKey).LastModified
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).LastModified
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Entities.EntityBase`1.CreatedBy*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.CreatedBy
  name: CreatedBy
  nameWithType: EntityBase<TPrimaryKey>.CreatedBy
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.CreatedBy
  nameWithType.vb: EntityBase(Of TPrimaryKey).CreatedBy
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).CreatedBy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Entities.EntityBase`1.ModifiedBy*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.ModifiedBy
  name: ModifiedBy
  nameWithType: EntityBase<TPrimaryKey>.ModifiedBy
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.ModifiedBy
  nameWithType.vb: EntityBase(Of TPrimaryKey).ModifiedBy
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).ModifiedBy
- uid: Mix.Heart.Entities.EntityBase`1.Priority*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.Priority
  name: Priority
  nameWithType: EntityBase<TPrimaryKey>.Priority
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.Priority
  nameWithType.vb: EntityBase(Of TPrimaryKey).Priority
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Heart.Entities.EntityBase`1.Status*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.Status
  name: Status
  nameWithType: EntityBase<TPrimaryKey>.Status
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.Status
  nameWithType.vb: EntityBase(Of TPrimaryKey).Status
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).Status
- uid: Mix.Heart.Enums.MixContentStatus
  commentId: T:Mix.Heart.Enums.MixContentStatus
  parent: Mix.Heart.Enums
  name: MixContentStatus
  nameWithType: MixContentStatus
  fullName: Mix.Heart.Enums.MixContentStatus
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
- uid: Mix.Heart.Entities.EntityBase`1.IsDeleted*
  commentId: Overload:Mix.Heart.Entities.EntityBase`1.IsDeleted
  name: IsDeleted
  nameWithType: EntityBase<TPrimaryKey>.IsDeleted
  fullName: Mix.Heart.Entities.EntityBase<TPrimaryKey>.IsDeleted
  nameWithType.vb: EntityBase(Of TPrimaryKey).IsDeleted
  fullName.vb: Mix.Heart.Entities.EntityBase(Of TPrimaryKey).IsDeleted
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
