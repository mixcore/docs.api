### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles
  commentId: T:Mix.Cms.Lib.Models.Cms.Aspnetroles
  id: Aspnetroles
  parent: Mix.Cms.Lib.Models.Cms
  children:
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.#ctor
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.Id
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.Name
  - Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName
  langs:
  - csharp
  - vb
  name: Aspnetroles
  nameWithType: Aspnetroles
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Aspnetroles
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 5
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public class Aspnetroles
    content.vb: Public Class Aspnetroles
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.#ctor
  commentId: M:Mix.Cms.Lib.Models.Cms.Aspnetroles.#ctor
  id: '#ctor'
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: Aspnetroles()
  nameWithType: Aspnetroles.Aspnetroles()
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroles()
  type: Constructor
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 7
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public Aspnetroles()
    content.vb: Public Sub New
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Id
  commentId: P:Mix.Cms.Lib.Models.Cms.Aspnetroles.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Aspnetroles.Id
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 13
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp
  commentId: P:Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: Aspnetroles.ConcurrencyStamp
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConcurrencyStamp
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 14
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string ConcurrencyStamp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConcurrencyStamp As String
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Name
  commentId: P:Mix.Cms.Lib.Models.Cms.Aspnetroles.Name
  id: Name
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Aspnetroles.Name
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Name
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 15
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName
  commentId: P:Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName
  id: NormalizedName
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: Aspnetroles.NormalizedName
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NormalizedName
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 16
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public string NormalizedName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NormalizedName As String
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims
  commentId: P:Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims
  id: Aspnetroleclaims
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: Aspnetroleclaims
  nameWithType: Aspnetroles.Aspnetroleclaims
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Aspnetroleclaims
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 18
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<Aspnetroleclaims> Aspnetroleclaims { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.Aspnetroleclaims}
    content.vb: Public Overridable Property Aspnetroleclaims As ICollection(Of Aspnetroleclaims)
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles
  commentId: P:Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles
  id: Aspnetuserroles
  parent: Mix.Cms.Lib.Models.Cms.Aspnetroles
  langs:
  - csharp
  - vb
  name: Aspnetuserroles
  nameWithType: Aspnetroles.Aspnetuserroles
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Aspnetuserroles
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Cms/Aspnetroles.cs
    startLine: 19
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Cms
  syntax:
    content: public virtual ICollection<Aspnetuserroles> Aspnetuserroles { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.Aspnetuserroles}
    content.vb: Public Overridable Property Aspnetuserroles As ICollection(Of Aspnetuserroles)
  overload: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Cms.Lib.Models.Cms
  commentId: N:Mix.Cms.Lib.Models.Cms
  name: Mix.Cms.Lib.Models.Cms
  nameWithType: Mix.Cms.Lib.Models.Cms
  fullName: Mix.Cms.Lib.Models.Cms
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.#ctor*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.#ctor
  name: Aspnetroles
  nameWithType: Aspnetroles.Aspnetroles
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroles
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.Id
  name: Id
  nameWithType: Aspnetroles.Id
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp
  name: ConcurrencyStamp
  nameWithType: Aspnetroles.ConcurrencyStamp
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.ConcurrencyStamp
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Name*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.Name
  name: Name
  nameWithType: Aspnetroles.Name
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Name
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName
  name: NormalizedName
  nameWithType: Aspnetroles.NormalizedName
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.NormalizedName
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims
  name: Aspnetroleclaims
  nameWithType: Aspnetroles.Aspnetroleclaims
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetroleclaims
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.Aspnetroleclaims}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.Aspnetroleclaims}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Aspnetroleclaims>
  nameWithType: ICollection<Aspnetroleclaims>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.Aspnetroleclaims>
  nameWithType.vb: ICollection(Of Aspnetroleclaims)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.Aspnetroleclaims)
  name.vb: ICollection(Of Aspnetroleclaims)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.Aspnetroleclaims
    name: Aspnetroleclaims
    nameWithType: Aspnetroleclaims
    fullName: Mix.Cms.Lib.Models.Cms.Aspnetroleclaims
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.Aspnetroleclaims
    name: Aspnetroleclaims
    nameWithType: Aspnetroleclaims
    fullName: Mix.Cms.Lib.Models.Cms.Aspnetroleclaims
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles*
  commentId: Overload:Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles
  name: Aspnetuserroles
  nameWithType: Aspnetroles.Aspnetuserroles
  fullName: Mix.Cms.Lib.Models.Cms.Aspnetroles.Aspnetuserroles
- uid: System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.Aspnetuserroles}
  commentId: T:System.Collections.Generic.ICollection{Mix.Cms.Lib.Models.Cms.Aspnetuserroles}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Aspnetuserroles>
  nameWithType: ICollection<Aspnetuserroles>
  fullName: System.Collections.Generic.ICollection<Mix.Cms.Lib.Models.Cms.Aspnetuserroles>
  nameWithType.vb: ICollection(Of Aspnetuserroles)
  fullName.vb: System.Collections.Generic.ICollection(Of Mix.Cms.Lib.Models.Cms.Aspnetuserroles)
  name.vb: ICollection(Of Aspnetuserroles)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Cms.Lib.Models.Cms.Aspnetuserroles
    name: Aspnetuserroles
    nameWithType: Aspnetuserroles
    fullName: Mix.Cms.Lib.Models.Cms.Aspnetuserroles
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Cms.Lib.Models.Cms.Aspnetuserroles
    name: Aspnetuserroles
    nameWithType: Aspnetuserroles
    fullName: Mix.Cms.Lib.Models.Cms.Aspnetuserroles
  - name: )
    nameWithType: )
    fullName: )
