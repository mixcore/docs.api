### YamlMime:ManagedReference
items:
- uid: Mix.Queue.Models.MessageQueueModel
  commentId: T:Mix.Queue.Models.MessageQueueModel
  id: MessageQueueModel
  parent: Mix.Queue.Models
  children:
  - Mix.Queue.Models.MessageQueueModel.#ctor
  - Mix.Queue.Models.MessageQueueModel.#ctor(System.String,System.String,System.Object)
  - Mix.Queue.Models.MessageQueueModel.Action
  - Mix.Queue.Models.MessageQueueModel.Data
  - Mix.Queue.Models.MessageQueueModel.Package``1(``0)
  - Mix.Queue.Models.MessageQueueModel.ParseData``1
  - Mix.Queue.Models.MessageQueueModel.Subscriptions
  - Mix.Queue.Models.MessageQueueModel.Success
  - Mix.Queue.Models.MessageQueueModel.TopicId
  langs:
  - csharp
  - vb
  name: MessageQueueModel
  nameWithType: MessageQueueModel
  fullName: Mix.Queue.Models.MessageQueueModel
  type: Class
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MessageQueueModel
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 6
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public class MessageQueueModel
    content.vb: Public Class MessageQueueModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Queue.Models.MessageQueueModel.Action
  commentId: P:Mix.Queue.Models.MessageQueueModel.Action
  id: Action
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: Action
  nameWithType: MessageQueueModel.Action
  fullName: Mix.Queue.Models.MessageQueueModel.Action
  type: Property
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Action
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 8
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public string Action { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Action As String
  overload: Mix.Queue.Models.MessageQueueModel.Action*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.Success
  commentId: P:Mix.Queue.Models.MessageQueueModel.Success
  id: Success
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: MessageQueueModel.Success
  fullName: Mix.Queue.Models.MessageQueueModel.Success
  type: Property
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Success
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 9
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public bool Success { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Success As Boolean
  overload: Mix.Queue.Models.MessageQueueModel.Success*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.TopicId
  commentId: P:Mix.Queue.Models.MessageQueueModel.TopicId
  id: TopicId
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: TopicId
  nameWithType: MessageQueueModel.TopicId
  fullName: Mix.Queue.Models.MessageQueueModel.TopicId
  type: Property
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TopicId
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 10
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public string TopicId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TopicId As String
  overload: Mix.Queue.Models.MessageQueueModel.TopicId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.Data
  commentId: P:Mix.Queue.Models.MessageQueueModel.Data
  id: Data
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: MessageQueueModel.Data
  fullName: Mix.Queue.Models.MessageQueueModel.Data
  type: Property
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 11
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public string Data { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Data As String
  overload: Mix.Queue.Models.MessageQueueModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.Subscriptions
  commentId: P:Mix.Queue.Models.MessageQueueModel.Subscriptions
  id: Subscriptions
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: Subscriptions
  nameWithType: MessageQueueModel.Subscriptions
  fullName: Mix.Queue.Models.MessageQueueModel.Subscriptions
  type: Property
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Subscriptions
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 13
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public List<MixSubscribtionModel> Subscriptions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Queue.Models.MixSubscribtionModel}
    content.vb: Public Property Subscriptions As List(Of MixSubscribtionModel)
  overload: Mix.Queue.Models.MessageQueueModel.Subscriptions*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.#ctor
  commentId: M:Mix.Queue.Models.MessageQueueModel.#ctor
  id: '#ctor'
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: MessageQueueModel()
  nameWithType: MessageQueueModel.MessageQueueModel()
  fullName: Mix.Queue.Models.MessageQueueModel.MessageQueueModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 15
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public MessageQueueModel()
    content.vb: Public Sub New
  overload: Mix.Queue.Models.MessageQueueModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.#ctor(System.String,System.String,System.Object)
  commentId: M:Mix.Queue.Models.MessageQueueModel.#ctor(System.String,System.String,System.Object)
  id: '#ctor(System.String,System.String,System.Object)'
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: MessageQueueModel(String, String, Object)
  nameWithType: MessageQueueModel.MessageQueueModel(String, String, Object)
  fullName: Mix.Queue.Models.MessageQueueModel.MessageQueueModel(System.String, System.String, System.Object)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 19
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public MessageQueueModel(string topicId, string action, object data = null)
    parameters:
    - id: topicId
      type: System.String
    - id: action
      type: System.String
    - id: data
      type: System.Object
    content.vb: Public Sub New(topicId As String, action As String, data As Object = Nothing)
  overload: Mix.Queue.Models.MessageQueueModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Models.MessageQueueModel.Package``1(``0)
  commentId: M:Mix.Queue.Models.MessageQueueModel.Package``1(``0)
  id: Package``1(``0)
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: Package<T>(T)
  nameWithType: MessageQueueModel.Package<T>(T)
  fullName: Mix.Queue.Models.MessageQueueModel.Package<T>(T)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Package
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 37
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public void Package<T>(T data)
    parameters:
    - id: data
      type: '{T}'
    typeParameters:
    - id: T
    content.vb: Public Sub Package(Of T)(data As T)
  overload: Mix.Queue.Models.MessageQueueModel.Package*
  nameWithType.vb: MessageQueueModel.Package(Of T)(T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Queue.Models.MessageQueueModel.Package(Of T)(T)
  name.vb: Package(Of T)(T)
- uid: Mix.Queue.Models.MessageQueueModel.ParseData``1
  commentId: M:Mix.Queue.Models.MessageQueueModel.ParseData``1
  id: ParseData``1
  parent: Mix.Queue.Models.MessageQueueModel
  langs:
  - csharp
  - vb
  name: ParseData<T>()
  nameWithType: MessageQueueModel.ParseData<T>()
  fullName: Mix.Queue.Models.MessageQueueModel.ParseData<T>()
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Models/MessageQueueModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParseData
    path: ../../mix.core/src/platform/mix.queue/Models/MessageQueueModel.cs
    startLine: 43
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Models
  syntax:
    content: public T ParseData<T>()
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function ParseData(Of T) As T
  overload: Mix.Queue.Models.MessageQueueModel.ParseData*
  nameWithType.vb: MessageQueueModel.ParseData(Of T)()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Queue.Models.MessageQueueModel.ParseData(Of T)()
  name.vb: ParseData(Of T)()
references:
- uid: Mix.Queue.Models
  commentId: N:Mix.Queue.Models
  name: Mix.Queue.Models
  nameWithType: Mix.Queue.Models
  fullName: Mix.Queue.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Queue.Models.MessageQueueModel.Action*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.Action
  name: Action
  nameWithType: MessageQueueModel.Action
  fullName: Mix.Queue.Models.MessageQueueModel.Action
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Queue.Models.MessageQueueModel.Success*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.Success
  name: Success
  nameWithType: MessageQueueModel.Success
  fullName: Mix.Queue.Models.MessageQueueModel.Success
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Queue.Models.MessageQueueModel.TopicId*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.TopicId
  name: TopicId
  nameWithType: MessageQueueModel.TopicId
  fullName: Mix.Queue.Models.MessageQueueModel.TopicId
- uid: Mix.Queue.Models.MessageQueueModel.Data*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.Data
  name: Data
  nameWithType: MessageQueueModel.Data
  fullName: Mix.Queue.Models.MessageQueueModel.Data
- uid: Mix.Queue.Models.MessageQueueModel.Subscriptions*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.Subscriptions
  name: Subscriptions
  nameWithType: MessageQueueModel.Subscriptions
  fullName: Mix.Queue.Models.MessageQueueModel.Subscriptions
- uid: System.Collections.Generic.List{Mix.Queue.Models.MixSubscribtionModel}
  commentId: T:System.Collections.Generic.List{Mix.Queue.Models.MixSubscribtionModel}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<MixSubscribtionModel>
  nameWithType: List<MixSubscribtionModel>
  fullName: System.Collections.Generic.List<Mix.Queue.Models.MixSubscribtionModel>
  nameWithType.vb: List(Of MixSubscribtionModel)
  fullName.vb: System.Collections.Generic.List(Of Mix.Queue.Models.MixSubscribtionModel)
  name.vb: List(Of MixSubscribtionModel)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Queue.Models.MixSubscribtionModel
    name: MixSubscribtionModel
    nameWithType: MixSubscribtionModel
    fullName: Mix.Queue.Models.MixSubscribtionModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Queue.Models.MixSubscribtionModel
    name: MixSubscribtionModel
    nameWithType: MixSubscribtionModel
    fullName: Mix.Queue.Models.MixSubscribtionModel
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Queue.Models.MessageQueueModel.#ctor*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.#ctor
  name: MessageQueueModel
  nameWithType: MessageQueueModel.MessageQueueModel
  fullName: Mix.Queue.Models.MessageQueueModel.MessageQueueModel
- uid: Mix.Queue.Models.MessageQueueModel.Package*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.Package
  name: Package
  nameWithType: MessageQueueModel.Package
  fullName: Mix.Queue.Models.MessageQueueModel.Package
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Mix.Queue.Models.MessageQueueModel.ParseData*
  commentId: Overload:Mix.Queue.Models.MessageQueueModel.ParseData
  name: ParseData
  nameWithType: MessageQueueModel.ParseData
  fullName: Mix.Queue.Models.MessageQueueModel.ParseData
