### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  commentId: T:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  id: MultilingualUniqueNameContentViewModelBase`4
  parent: Mix.Lib.Base
  children:
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor(`1,UnitOfWorkInfo)
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor(UnitOfWorkInfo)
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Content
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Description
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.DisplayName
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.SystemName
  langs:
  - csharp
  - vb
  name: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MultilingualUniqueNameContentViewModelBase
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 5
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: 'public abstract class MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView> : MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView> where TDbContext : DbContext where TEntity : MultilingualContentBase<TPrimaryKey> where TPrimaryKey : IComparable where TView : MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>'
    typeParameters:
    - id: TDbContext
    - id: TEntity
    - id: TPrimaryKey
    - id: TView
    content.vb: >-
      Public MustInherit Class MultilingualUniqueNameContentViewModelBase(Of TDbContext As DbContext, TEntity As MultilingualContentBase(Of TPrimaryKey), TPrimaryKey As IComparable, TView As MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView))
          Inherits MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  inheritance:
  - System.Object
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  inheritedMembers:
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixTenantId
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Icon
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.IsPublic
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Specificulture
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParentId
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixCultureId
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Contributors
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParseEntity
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor
  commentId: M:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor
  id: '#ctor'
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: MultilingualUniqueNameContentViewModelBase()
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase()
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public MultilingualUniqueNameContentViewModelBase()
    content.vb: Public Sub New
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase()
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: MultilingualUniqueNameContentViewModelBase(UnitOfWorkInfo)
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase(UnitOfWorkInfo)
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 19
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: protected MultilingualUniqueNameContentViewModelBase(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Protected Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase(UnitOfWorkInfo)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase(UnitOfWorkInfo)
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor(`1,UnitOfWorkInfo)
  commentId: M:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor(`1,UnitOfWorkInfo)
  id: '#ctor(`1,UnitOfWorkInfo)'
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: MultilingualUniqueNameContentViewModelBase(TEntity, UnitOfWorkInfo)
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase(TEntity, UnitOfWorkInfo)
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase(TEntity, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 23
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: protected MultilingualUniqueNameContentViewModelBase(TEntity entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: '{TEntity}'
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Protected Sub New(entity As TEntity, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase(TEntity, UnitOfWorkInfo)
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase(TEntity, UnitOfWorkInfo)
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.DisplayName
  commentId: P:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.DisplayName
  id: DisplayName
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.DisplayName
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.DisplayName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DisplayName
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property DisplayName As String
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.DisplayName*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).DisplayName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).DisplayName
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.SystemName
  commentId: P:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.SystemName
  id: SystemName
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SystemName
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SystemName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 33
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SystemName As String
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.SystemName*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SystemName
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SystemName
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Description
  commentId: P:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Description
  id: Description
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Description
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Description
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 34
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Description*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Description
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Description
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Content
  commentId: P:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Content
  id: Content
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: Content
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Content
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 35
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public string Content { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Content As String
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Content*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  id: InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4
  langs:
  - csharp
  - vb
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDefaultValues
    path: ../../mix.core/src/platform/mix.library/Base/MultilingualUniqueNameContentViewModelBase.cs
    startLine: 41
  assemblies:
  - mix.library
  namespace: Mix.Lib.Base
  syntax:
    content: public override void InitDefaultValues(string language = null, int? cultureId = default(int? ))
    parameters:
    - id: language
      type: System.String
    - id: cultureId
      type: System.Nullable{System.Int32}
    content.vb: Public Overrides Sub InitDefaultValues(language As String = Nothing, cultureId As Integer? = Nothing)
  overridden: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  overload: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.InitDefaultValues*
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
references:
- uid: Mix.Lib.Base
  commentId: N:Mix.Lib.Base
  name: Mix.Lib.Base
  nameWithType: Mix.Lib.Base
  fullName: Mix.Lib.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  commentId: T:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}
  parent: Mix.Lib.Base
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4
  name: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixTenantId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.MixTenantId
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixTenantId
  name: MixTenantId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Icon
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.Icon
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.Icon
  name: Icon
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.IsPublic
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.IsPublic
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.IsPublic
  name: IsPublic
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Specificulture
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.Specificulture
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.Specificulture
  name: Specificulture
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParentId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.ParentId
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParentId
  name: ParentId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.MixCultureId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.MixCultureId
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixCultureId
  name: MixCultureId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.Contributors
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.Contributors
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.Contributors
  name: Contributors
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.ParseEntity
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.ParseEntity
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
  name: ParseEntity()
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(String, Nullable(Of Int32))
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase{`0,`1,`2,`3}.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  parent: Mix.Lib.Base.MultilingualContentViewModelBase{{TDbContext},{TEntity},{TPrimaryKey},{TView}}
  definition: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  name: LoadContributorsAsync(MixContentType, MixIdentityService)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
  commentId: T:Mix.Lib.Base.MultilingualContentViewModelBase`4
  name: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  name.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: <
    nameWithType: <
    fullName: <
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4
    name: MultilingualContentViewModelBase
    nameWithType: MultilingualContentViewModelBase
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDbContext
    nameWithType: TDbContext
    fullName: TDbContext
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TView
    nameWithType: TView
    fullName: TView
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixTenantId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.MixTenantId
  name: MixTenantId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixTenantId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixTenantId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.Icon
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.Icon
  name: Icon
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Icon
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Icon
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.IsPublic
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.IsPublic
  name: IsPublic
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.IsPublic
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).IsPublic
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.Specificulture
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.Specificulture
  name: Specificulture
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Specificulture
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Specificulture
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParentId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.ParentId
  name: ParentId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParentId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParentId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.MixCultureId
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.MixCultureId
  name: MixCultureId
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MixCultureId
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MixCultureId
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.Contributors
  commentId: P:Mix.Lib.Base.MultilingualContentViewModelBase`4.Contributors
  name: Contributors
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Contributors
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Contributors
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
  name: ParseEntity()
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity()
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity()
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.ParseEntity
    name: ParseEntity
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).ParseEntity
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
  isExternal: true
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(String, Nullable(Of Int32))
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.InitDefaultValues(System.String,System.Nullable{System.Int32})
    name: InitDefaultValues
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  commentId: M:Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
  isExternal: true
  name: LoadContributorsAsync(MixContentType, MixIdentityService)
  nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  nameWithType.vb: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, MixIdentityService)
  fullName.vb: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync(MixContentType, Mix.Lib.Services.MixIdentityService)
  spec.csharp:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Base.MultilingualContentViewModelBase`4.LoadContributorsAsync(MixContentType,Mix.Lib.Services.MixIdentityService)
    name: LoadContributorsAsync
    nameWithType: MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
    fullName: Mix.Lib.Base.MultilingualContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).LoadContributorsAsync
  - name: (
    nameWithType: (
    fullName: (
  - uid: MixContentType
    name: MixContentType
    nameWithType: MixContentType
    fullName: MixContentType
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Mix.Lib.Services.MixIdentityService
    name: MixIdentityService
    nameWithType: MixIdentityService
    fullName: Mix.Lib.Services.MixIdentityService
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor*
  commentId: Overload:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.#ctor
  name: MultilingualUniqueNameContentViewModelBase
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.MultilingualUniqueNameContentViewModelBase
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).MultilingualUniqueNameContentViewModelBase
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: '{TEntity}'
  commentId: '!:TEntity'
  definition: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: TEntity
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.DisplayName*
  commentId: Overload:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.DisplayName
  name: DisplayName
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.DisplayName
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.DisplayName
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).DisplayName
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).DisplayName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.SystemName*
  commentId: Overload:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.SystemName
  name: SystemName
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SystemName
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.SystemName
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SystemName
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).SystemName
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Description*
  commentId: Overload:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Description
  name: Description
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Description
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Description
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Description
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Description
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Content*
  commentId: Overload:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.Content
  name: Content
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.Content
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).Content
- uid: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.InitDefaultValues*
  commentId: Overload:Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase`4.InitDefaultValues
  name: InitDefaultValues
  nameWithType: MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  fullName: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase<TDbContext, TEntity, TPrimaryKey, TView>.InitDefaultValues
  nameWithType.vb: MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
  fullName.vb: Mix.Lib.Base.MultilingualUniqueNameContentViewModelBase(Of TDbContext, TEntity, TPrimaryKey, TView).InitDefaultValues
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
