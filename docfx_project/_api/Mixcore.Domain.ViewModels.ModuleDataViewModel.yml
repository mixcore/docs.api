### YamlMime:ManagedReference
items:
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel
  commentId: T:Mixcore.Domain.ViewModels.ModuleDataViewModel
  id: ModuleDataViewModel
  parent: Mixcore.Domain.ViewModels
  children:
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor(MixModuleData,UnitOfWorkInfo)
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor(UnitOfWorkInfo)
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.Data
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.Property(System.String)
  - Mixcore.Domain.ViewModels.ModuleDataViewModel.Value
  langs:
  - csharp
  - vb
  name: ModuleDataViewModel
  nameWithType: ModuleDataViewModel
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel
  type: Class
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleDataViewModel
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 2
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: 'public class ModuleDataViewModel : MultilingualSEOContentViewModelBase<MixCmsContext, MixModuleData, int, ModuleDataViewModel>'
    content.vb: >-
      Public Class ModuleDataViewModel
          Inherits MultilingualSEOContentViewModelBase(Of MixCmsContext, MixModuleData, Integer, ModuleDataViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor
  commentId: M:Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor
  id: '#ctor'
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: ModuleDataViewModel()
  nameWithType: ModuleDataViewModel.ModuleDataViewModel()
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.ModuleDataViewModel()
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 8
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public ModuleDataViewModel()
    content.vb: Public Sub New
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor(MixModuleData,UnitOfWorkInfo)
  commentId: M:Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor(MixModuleData,UnitOfWorkInfo)
  id: '#ctor(MixModuleData,UnitOfWorkInfo)'
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: ModuleDataViewModel(MixModuleData, UnitOfWorkInfo)
  nameWithType: ModuleDataViewModel.ModuleDataViewModel(MixModuleData, UnitOfWorkInfo)
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.ModuleDataViewModel(MixModuleData, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 12
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public ModuleDataViewModel(MixModuleData entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixModuleData
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixModuleData, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: ModuleDataViewModel(UnitOfWorkInfo)
  nameWithType: ModuleDataViewModel.ModuleDataViewModel(UnitOfWorkInfo)
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.ModuleDataViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 18
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public ModuleDataViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.Value
  commentId: P:Mixcore.Domain.ViewModels.ModuleDataViewModel.Value
  id: Value
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: ModuleDataViewModel.Value
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.Value
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Value
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 24
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public string Value { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Value As String
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.Value*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.Data
  commentId: P:Mixcore.Domain.ViewModels.ModuleDataViewModel.Data
  id: Data
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: ModuleDataViewModel.Data
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.Data
  type: Property
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Data
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 26
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public JObject Data { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property Data As JObject
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.Data*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView
  commentId: M:Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView
  id: ExpandView
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: ExpandView()
  nameWithType: ModuleDataViewModel.ExpandView()
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView()
  type: Method
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ExpandView
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 31
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public override Task ExpandView()
    return:
      type: Task
    content.vb: Public Overrides Function ExpandView As Task
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.Property(System.String)
  commentId: M:Mixcore.Domain.ViewModels.ModuleDataViewModel.Property(System.String)
  id: Property(System.String)
  parent: Mixcore.Domain.ViewModels.ModuleDataViewModel
  langs:
  - csharp
  - vb
  name: Property(String)
  nameWithType: ModuleDataViewModel.Property(String)
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.Property(System.String)
  type: Method
  source:
    remote:
      path: src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/applications/Mixcore/Domain/ViewModels/ModuleDataViewModel.cs
    startLine: 43
  assemblies:
  - mixcore
  namespace: Mixcore.Domain.ViewModels
  syntax:
    content: public string Property(string name)
    parameters:
    - id: name
      type: System.String
    return:
      type: System.String
    content.vb: Public Function Property(name As String) As String
  overload: Mixcore.Domain.ViewModels.ModuleDataViewModel.Property*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mixcore.Domain.ViewModels
  commentId: N:Mixcore.Domain.ViewModels
  name: Mixcore.Domain.ViewModels
  nameWithType: Mixcore.Domain.ViewModels
  fullName: Mixcore.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor*
  commentId: Overload:Mixcore.Domain.ViewModels.ModuleDataViewModel.#ctor
  name: ModuleDataViewModel
  nameWithType: ModuleDataViewModel.ModuleDataViewModel
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.ModuleDataViewModel
- uid: MixModuleData
  isExternal: true
  name: MixModuleData
  nameWithType: MixModuleData
  fullName: MixModuleData
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.Value*
  commentId: Overload:Mixcore.Domain.ViewModels.ModuleDataViewModel.Value
  name: Value
  nameWithType: ModuleDataViewModel.Value
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.Value
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.Data*
  commentId: Overload:Mixcore.Domain.ViewModels.ModuleDataViewModel.Data
  name: Data
  nameWithType: ModuleDataViewModel.Data
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.Data
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView*
  commentId: Overload:Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView
  name: ExpandView
  nameWithType: ModuleDataViewModel.ExpandView
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.ExpandView
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
- uid: Mixcore.Domain.ViewModels.ModuleDataViewModel.Property*
  commentId: Overload:Mixcore.Domain.ViewModels.ModuleDataViewModel.Property
  name: Property
  nameWithType: ModuleDataViewModel.Property
  fullName: Mixcore.Domain.ViewModels.ModuleDataViewModel.Property
