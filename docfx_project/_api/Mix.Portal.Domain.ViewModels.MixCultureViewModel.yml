### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixCultureViewModel
  id: MixCultureViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor(MixCulture,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid
  - Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture
  langs:
  - csharp
  - vb
  name: MixCultureViewModel
  nameWithType: MixCultureViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCultureViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixCultureViewModel : TenantDataViewModelBase<MixCmsContext, MixCulture, int, MixCultureViewModel>'
    content.vb: >-
      Public Class MixCultureViewModel
          Inherits TenantDataViewModelBase(Of MixCmsContext, MixCulture, Integer, MixCultureViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias
  commentId: P:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias
  id: Alias
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: MixCultureViewModel.Alias
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Alias
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 6
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Alias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Alias As String
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon
  commentId: P:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon
  id: Icon
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: MixCultureViewModel.Icon
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 7
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid
  commentId: P:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid
  id: Lcid
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: Lcid
  nameWithType: MixCultureViewModel.Lcid
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Lcid
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 8
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Lcid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Lcid As String
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture
  commentId: P:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture
  id: Specificulture
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: MixCultureViewModel.Specificulture
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 9
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: MixCultureViewModel()
  nameWithType: MixCultureViewModel.MixCultureViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.MixCultureViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 14
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixCultureViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor(MixCulture,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor(MixCulture,UnitOfWorkInfo)
  id: '#ctor(MixCulture,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: MixCultureViewModel(MixCulture, UnitOfWorkInfo)
  nameWithType: MixCultureViewModel.MixCultureViewModel(MixCulture, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.MixCultureViewModel(MixCulture, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 18
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixCultureViewModel(MixCulture entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixCulture
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixCulture, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: MixCultureViewModel(UnitOfWorkInfo)
  nameWithType: MixCultureViewModel.MixCultureViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.MixCultureViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 25
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixCultureViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync
  commentId: M:Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync
  id: DeleteHandlerAsync
  parent: Mix.Portal.Domain.ViewModels.MixCultureViewModel
  langs:
  - csharp
  - vb
  name: DeleteHandlerAsync()
  nameWithType: MixCultureViewModel.DeleteHandlerAsync()
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeleteHandlerAsync
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixCultureViewModel.cs
    startLine: 33
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: protected override Task DeleteHandlerAsync()
    return:
      type: Task
    content.vb: Protected Overrides Function DeleteHandlerAsync As Task
  overload: Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync*
  modifiers.csharp:
  - protected
  - override
  modifiers.vb:
  - Protected
  - Overrides
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias
  name: Alias
  nameWithType: MixCultureViewModel.Alias
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Alias
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon
  name: Icon
  nameWithType: MixCultureViewModel.Icon
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Icon
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid
  name: Lcid
  nameWithType: MixCultureViewModel.Lcid
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Lcid
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture
  name: Specificulture
  nameWithType: MixCultureViewModel.Specificulture
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.Specificulture
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixCultureViewModel.#ctor
  name: MixCultureViewModel
  nameWithType: MixCultureViewModel.MixCultureViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.MixCultureViewModel
- uid: MixCulture
  isExternal: true
  name: MixCulture
  nameWithType: MixCulture
  fullName: MixCulture
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync
  name: DeleteHandlerAsync
  nameWithType: MixCultureViewModel.DeleteHandlerAsync
  fullName: Mix.Portal.Domain.ViewModels.MixCultureViewModel.DeleteHandlerAsync
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
