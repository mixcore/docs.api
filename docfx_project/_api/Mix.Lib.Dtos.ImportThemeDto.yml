### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Dtos.ImportThemeDto
  commentId: T:Mix.Lib.Dtos.ImportThemeDto
  id: ImportThemeDto
  parent: Mix.Lib.Dtos
  children:
  - Mix.Lib.Dtos.ImportThemeDto.Configurations
  - Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets
  - Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates
  - Mix.Lib.Dtos.ImportThemeDto.Languages
  - Mix.Lib.Dtos.ImportThemeDto.MixDatabases
  - Mix.Lib.Dtos.ImportThemeDto.Modules
  - Mix.Lib.Dtos.ImportThemeDto.Pages
  - Mix.Lib.Dtos.ImportThemeDto.Posts
  langs:
  - csharp
  - vb
  name: ImportThemeDto
  nameWithType: ImportThemeDto
  fullName: Mix.Lib.Dtos.ImportThemeDto
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ImportThemeDto
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public class ImportThemeDto
    content.vb: Public Class ImportThemeDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets
  id: IsIncludeAssets
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: IsIncludeAssets
  nameWithType: ImportThemeDto.IsIncludeAssets
  fullName: Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsIncludeAssets
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public bool IsIncludeAssets { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsIncludeAssets As Boolean
  overload: Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates
  id: IsIncludeTemplates
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: IsIncludeTemplates
  nameWithType: ImportThemeDto.IsIncludeTemplates
  fullName: Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsIncludeTemplates
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public bool IsIncludeTemplates { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsIncludeTemplates As Boolean
  overload: Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.Posts
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.Posts
  id: Posts
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: Posts
  nameWithType: ImportThemeDto.Posts
  fullName: Mix.Lib.Dtos.ImportThemeDto.Posts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Posts
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public List<MixPost> Posts { get; set; }
    parameters: []
    return:
      type: List{MixPost}
    content.vb: Public Property Posts As List(Of MixPost)
  overload: Mix.Lib.Dtos.ImportThemeDto.Posts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.Pages
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.Pages
  id: Pages
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: Pages
  nameWithType: ImportThemeDto.Pages
  fullName: Mix.Lib.Dtos.ImportThemeDto.Pages
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Pages
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public List<MixPage> Pages { get; set; }
    parameters: []
    return:
      type: List{MixPage}
    content.vb: Public Property Pages As List(Of MixPage)
  overload: Mix.Lib.Dtos.ImportThemeDto.Pages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.Modules
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.Modules
  id: Modules
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: ImportThemeDto.Modules
  fullName: Mix.Lib.Dtos.ImportThemeDto.Modules
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Modules
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public List<MixModule> Modules { get; set; }
    parameters: []
    return:
      type: List{MixModule}
    content.vb: Public Property Modules As List(Of MixModule)
  overload: Mix.Lib.Dtos.ImportThemeDto.Modules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.MixDatabases
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.MixDatabases
  id: MixDatabases
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: MixDatabases
  nameWithType: ImportThemeDto.MixDatabases
  fullName: Mix.Lib.Dtos.ImportThemeDto.MixDatabases
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabases
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public List<MixDatabase> MixDatabases { get; set; }
    parameters: []
    return:
      type: List{MixDatabase}
    content.vb: Public Property MixDatabases As List(Of MixDatabase)
  overload: Mix.Lib.Dtos.ImportThemeDto.MixDatabases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.Configurations
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.Configurations
  id: Configurations
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: ImportThemeDto.Configurations
  fullName: Mix.Lib.Dtos.ImportThemeDto.Configurations
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configurations
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public List<MixConfiguration> Configurations { get; set; }
    parameters: []
    return:
      type: List{MixConfiguration}
    content.vb: Public Property Configurations As List(Of MixConfiguration)
  overload: Mix.Lib.Dtos.ImportThemeDto.Configurations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Dtos.ImportThemeDto.Languages
  commentId: P:Mix.Lib.Dtos.ImportThemeDto.Languages
  id: Languages
  parent: Mix.Lib.Dtos.ImportThemeDto
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: ImportThemeDto.Languages
  fullName: Mix.Lib.Dtos.ImportThemeDto.Languages
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Dtos/ImportThemeDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Languages
    path: ../../mix.core/src/platform/mix.library/Dtos/ImportThemeDto.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.Dtos
  syntax:
    content: public List<MixLanguage> Languages { get; set; }
    parameters: []
    return:
      type: List{MixLanguage}
    content.vb: Public Property Languages As List(Of MixLanguage)
  overload: Mix.Lib.Dtos.ImportThemeDto.Languages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Dtos
  commentId: N:Mix.Lib.Dtos
  name: Mix.Lib.Dtos
  nameWithType: Mix.Lib.Dtos
  fullName: Mix.Lib.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets
  name: IsIncludeAssets
  nameWithType: ImportThemeDto.IsIncludeAssets
  fullName: Mix.Lib.Dtos.ImportThemeDto.IsIncludeAssets
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates
  name: IsIncludeTemplates
  nameWithType: ImportThemeDto.IsIncludeTemplates
  fullName: Mix.Lib.Dtos.ImportThemeDto.IsIncludeTemplates
- uid: Mix.Lib.Dtos.ImportThemeDto.Posts*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.Posts
  name: Posts
  nameWithType: ImportThemeDto.Posts
  fullName: Mix.Lib.Dtos.ImportThemeDto.Posts
- uid: List{MixPost}
  commentId: '!:List{MixPost}'
  definition: List`1
  name: List<MixPost>
  nameWithType: List<MixPost>
  fullName: List<MixPost>
  nameWithType.vb: List(Of MixPost)
  fullName.vb: List(Of MixPost)
  name.vb: List(Of MixPost)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: MixPost
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: MixPost
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Dtos.ImportThemeDto.Pages*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.Pages
  name: Pages
  nameWithType: ImportThemeDto.Pages
  fullName: Mix.Lib.Dtos.ImportThemeDto.Pages
- uid: List{MixPage}
  commentId: '!:List{MixPage}'
  definition: List`1
  name: List<MixPage>
  nameWithType: List<MixPage>
  fullName: List<MixPage>
  nameWithType.vb: List(Of MixPage)
  fullName.vb: List(Of MixPage)
  name.vb: List(Of MixPage)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: MixPage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: MixPage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Dtos.ImportThemeDto.Modules*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.Modules
  name: Modules
  nameWithType: ImportThemeDto.Modules
  fullName: Mix.Lib.Dtos.ImportThemeDto.Modules
- uid: List{MixModule}
  commentId: '!:List{MixModule}'
  definition: List`1
  name: List<MixModule>
  nameWithType: List<MixModule>
  fullName: List<MixModule>
  nameWithType.vb: List(Of MixModule)
  fullName.vb: List(Of MixModule)
  name.vb: List(Of MixModule)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: MixModule
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: MixModule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Dtos.ImportThemeDto.MixDatabases*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.MixDatabases
  name: MixDatabases
  nameWithType: ImportThemeDto.MixDatabases
  fullName: Mix.Lib.Dtos.ImportThemeDto.MixDatabases
- uid: List{MixDatabase}
  commentId: '!:List{MixDatabase}'
  definition: List`1
  name: List<MixDatabase>
  nameWithType: List<MixDatabase>
  fullName: List<MixDatabase>
  nameWithType.vb: List(Of MixDatabase)
  fullName.vb: List(Of MixDatabase)
  name.vb: List(Of MixDatabase)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: MixDatabase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: MixDatabase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Dtos.ImportThemeDto.Configurations*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.Configurations
  name: Configurations
  nameWithType: ImportThemeDto.Configurations
  fullName: Mix.Lib.Dtos.ImportThemeDto.Configurations
- uid: List{MixConfiguration}
  commentId: '!:List{MixConfiguration}'
  definition: List`1
  name: List<MixConfiguration>
  nameWithType: List<MixConfiguration>
  fullName: List<MixConfiguration>
  nameWithType.vb: List(Of MixConfiguration)
  fullName.vb: List(Of MixConfiguration)
  name.vb: List(Of MixConfiguration)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixConfiguration
    name: MixConfiguration
    nameWithType: MixConfiguration
    fullName: MixConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixConfiguration
    name: MixConfiguration
    nameWithType: MixConfiguration
    fullName: MixConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Dtos.ImportThemeDto.Languages*
  commentId: Overload:Mix.Lib.Dtos.ImportThemeDto.Languages
  name: Languages
  nameWithType: ImportThemeDto.Languages
  fullName: Mix.Lib.Dtos.ImportThemeDto.Languages
- uid: List{MixLanguage}
  commentId: '!:List{MixLanguage}'
  definition: List`1
  name: List<MixLanguage>
  nameWithType: List<MixLanguage>
  fullName: List<MixLanguage>
  nameWithType.vb: List(Of MixLanguage)
  fullName.vb: List(Of MixLanguage)
  name.vb: List(Of MixLanguage)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixLanguage
    name: MixLanguage
    nameWithType: MixLanguage
    fullName: MixLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixLanguage
    name: MixLanguage
    nameWithType: MixLanguage
    fullName: MixLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
