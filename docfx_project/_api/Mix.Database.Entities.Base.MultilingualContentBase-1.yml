### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1
  commentId: T:Mix.Database.Entities.Base.MultilingualContentBase`1
  id: MultilingualContentBase`1
  parent: Mix.Database.Entities.Base
  children:
  - Mix.Database.Entities.Base.MultilingualContentBase`1.Icon
  - Mix.Database.Entities.Base.MultilingualContentBase`1.IsPublic
  - Mix.Database.Entities.Base.MultilingualContentBase`1.MixCulture
  - Mix.Database.Entities.Base.MultilingualContentBase`1.MixCultureId
  - Mix.Database.Entities.Base.MultilingualContentBase`1.MixTenantId
  - Mix.Database.Entities.Base.MultilingualContentBase`1.ParentId
  - Mix.Database.Entities.Base.MultilingualContentBase`1.Specificulture
  langs:
  - csharp
  - vb
  name: MultilingualContentBase<TPrimaryKey>
  nameWithType: MultilingualContentBase<TPrimaryKey>
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MultilingualContentBase
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 2
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: 'public abstract class MultilingualContentBase<TPrimaryKey> : EntityBase<TPrimaryKey> where TPrimaryKey : IComparable'
    typeParameters:
    - id: TPrimaryKey
    content.vb: >-
      Public MustInherit Class MultilingualContentBase(Of TPrimaryKey As IComparable)
          Inherits EntityBase(Of TPrimaryKey)
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Database.Entities.Base.MultilingualSEOContentBase`1
  - Mix.Database.Entities.Base.MultilingualUniqueNameContentBase`1
  - Mix.Database.Entities.Cms.MixDataContentAssociation
  - Mix.Database.Entities.Cms.MixDataContentValue
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey)
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey)
  name.vb: MultilingualContentBase(Of TPrimaryKey)
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.MixTenantId
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.MixTenantId
  id: MixTenantId
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: MultilingualContentBase<TPrimaryKey>.MixTenantId
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.MixTenantId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.MixTenantId*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).MixTenantId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).MixTenantId
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.Specificulture
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.Specificulture
  id: Specificulture
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: MultilingualContentBase<TPrimaryKey>.Specificulture
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.Specificulture
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.Specificulture*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).Specificulture
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).Specificulture
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.Icon
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.Icon
  id: Icon
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: MultilingualContentBase<TPrimaryKey>.Icon
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.Icon
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.Icon*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).Icon
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).Icon
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.IsPublic
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.IsPublic
  id: IsPublic
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: IsPublic
  nameWithType: MultilingualContentBase<TPrimaryKey>.IsPublic
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.IsPublic
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsPublic
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public bool IsPublic { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsPublic As Boolean
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.IsPublic*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).IsPublic
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).IsPublic
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.ParentId
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.ParentId
  id: ParentId
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: ParentId
  nameWithType: MultilingualContentBase<TPrimaryKey>.ParentId
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.ParentId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ParentId
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 9
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public TPrimaryKey ParentId { get; set; }
    parameters: []
    return:
      type: '{TPrimaryKey}'
    content.vb: Public Property ParentId As TPrimaryKey
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.ParentId*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).ParentId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).ParentId
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.MixCultureId
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.MixCultureId
  id: MixCultureId
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: MixCultureId
  nameWithType: MultilingualContentBase<TPrimaryKey>.MixCultureId
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.MixCultureId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCultureId
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 10
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public int MixCultureId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixCultureId As Integer
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.MixCultureId*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).MixCultureId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).MixCultureId
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.MixCulture
  commentId: P:Mix.Database.Entities.Base.MultilingualContentBase`1.MixCulture
  id: MixCulture
  parent: Mix.Database.Entities.Base.MultilingualContentBase`1
  langs:
  - csharp
  - vb
  name: MixCulture
  nameWithType: MultilingualContentBase<TPrimaryKey>.MixCulture
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.MixCulture
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixCulture
    path: ../../mix.core/src/platform/mix.database/Entities/Base/MultilingualContentBase.cs
    startLine: 11
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Base
  syntax:
    content: public virtual MixCulture MixCulture { get; set; }
    parameters: []
    return:
      type: MixCulture
    content.vb: Public Overridable Property MixCulture As MixCulture
  overload: Mix.Database.Entities.Base.MultilingualContentBase`1.MixCulture*
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).MixCulture
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).MixCulture
references:
- uid: Mix.Database.Entities.Base
  commentId: N:Mix.Database.Entities.Base
  name: Mix.Database.Entities.Base
  nameWithType: Mix.Database.Entities.Base
  fullName: Mix.Database.Entities.Base
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.MixTenantId*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.MixTenantId
  name: MixTenantId
  nameWithType: MultilingualContentBase<TPrimaryKey>.MixTenantId
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.MixTenantId
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).MixTenantId
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.Specificulture*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.Specificulture
  name: Specificulture
  nameWithType: MultilingualContentBase<TPrimaryKey>.Specificulture
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.Specificulture
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).Specificulture
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).Specificulture
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.Icon*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.Icon
  name: Icon
  nameWithType: MultilingualContentBase<TPrimaryKey>.Icon
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.Icon
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).Icon
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).Icon
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.IsPublic*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.IsPublic
  name: IsPublic
  nameWithType: MultilingualContentBase<TPrimaryKey>.IsPublic
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.IsPublic
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).IsPublic
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).IsPublic
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.ParentId*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.ParentId
  name: ParentId
  nameWithType: MultilingualContentBase<TPrimaryKey>.ParentId
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.ParentId
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).ParentId
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).ParentId
- uid: '{TPrimaryKey}'
  commentId: '!:TPrimaryKey'
  definition: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: TPrimaryKey
  name: TPrimaryKey
  nameWithType: TPrimaryKey
  fullName: TPrimaryKey
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.MixCultureId*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.MixCultureId
  name: MixCultureId
  nameWithType: MultilingualContentBase<TPrimaryKey>.MixCultureId
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.MixCultureId
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).MixCultureId
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).MixCultureId
- uid: Mix.Database.Entities.Base.MultilingualContentBase`1.MixCulture*
  commentId: Overload:Mix.Database.Entities.Base.MultilingualContentBase`1.MixCulture
  name: MixCulture
  nameWithType: MultilingualContentBase<TPrimaryKey>.MixCulture
  fullName: Mix.Database.Entities.Base.MultilingualContentBase<TPrimaryKey>.MixCulture
  nameWithType.vb: MultilingualContentBase(Of TPrimaryKey).MixCulture
  fullName.vb: Mix.Database.Entities.Base.MultilingualContentBase(Of TPrimaryKey).MixCulture
- uid: MixCulture
  isExternal: true
  name: MixCulture
  nameWithType: MixCulture
  fullName: MixCulture
