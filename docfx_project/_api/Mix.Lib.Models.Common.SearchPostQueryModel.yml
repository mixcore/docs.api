### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.Common.SearchPostQueryModel
  commentId: T:Mix.Lib.Models.Common.SearchPostQueryModel
  id: SearchPostQueryModel
  parent: Mix.Lib.Models.Common
  children:
  - Mix.Lib.Models.Common.SearchPostQueryModel.#ctor(System.Int32)
  - Mix.Lib.Models.Common.SearchPostQueryModel.#ctor(System.Int32,SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}},System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}})
  - Mix.Lib.Models.Common.SearchPostQueryModel.Categories
  - Mix.Lib.Models.Common.SearchPostQueryModel.Tags
  langs:
  - csharp
  - vb
  name: SearchPostQueryModel
  nameWithType: SearchPostQueryModel
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SearchPostQueryModel
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
    startLine: 5
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: 'public class SearchPostQueryModel : SearchQueryModel<MixPostContent, int>'
    content.vb: >-
      Public Class SearchPostQueryModel
          Inherits SearchQueryModel(Of MixPostContent, Integer)
  inheritance:
  - System.Object
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  inheritedMembers:
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Keyword
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Culture
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.FromDate
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.ToDate
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Status
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.SearchMethod
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Columns
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.SearchColumns
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.MixTenantId
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.PagingData
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Predicate
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.AndPredicate
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.OrPredicate
  - Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.#ctor(System.Int32)
  commentId: M:Mix.Lib.Models.Common.SearchPostQueryModel.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Mix.Lib.Models.Common.SearchPostQueryModel
  langs:
  - csharp
  - vb
  name: SearchPostQueryModel(Int32)
  nameWithType: SearchPostQueryModel.SearchPostQueryModel(Int32)
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.SearchPostQueryModel(System.Int32)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
    startLine: 7
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public SearchPostQueryModel(int tenantId)
    parameters:
    - id: tenantId
      type: System.Int32
    content.vb: Public Sub New(tenantId As Integer)
  overload: Mix.Lib.Models.Common.SearchPostQueryModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.#ctor(System.Int32,SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}},System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}})
  commentId: M:Mix.Lib.Models.Common.SearchPostQueryModel.#ctor(System.Int32,SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}},System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}})
  id: '#ctor(System.Int32,SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest,System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}},System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}})'
  parent: Mix.Lib.Models.Common.SearchPostQueryModel
  langs:
  - csharp
  - vb
  name: SearchPostQueryModel(Int32, SearchRequestDto, HttpRequest, Expression<Func<MixPostContent, Boolean>>, Expression<Func<MixPostContent, Boolean>>)
  nameWithType: SearchPostQueryModel.SearchPostQueryModel(Int32, SearchRequestDto, HttpRequest, Expression<Func<MixPostContent, Boolean>>, Expression<Func<MixPostContent, Boolean>>)
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.SearchPostQueryModel(System.Int32, SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest, System.Linq.Expressions.Expression<Func<MixPostContent, System.Boolean>>, System.Linq.Expressions.Expression<Func<MixPostContent, System.Boolean>>)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public SearchPostQueryModel(int tenantId, SearchRequestDto request, HttpRequest httpRequest, Expression<Func<MixPostContent, bool>> andPredicate = null, Expression<Func<MixPostContent, bool>> orPredicate = null)
    parameters:
    - id: tenantId
      type: System.Int32
    - id: request
      type: SearchRequestDto
    - id: httpRequest
      type: Microsoft.AspNetCore.Http.HttpRequest
    - id: andPredicate
      type: System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}}
    - id: orPredicate
      type: System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}}
    content.vb: Public Sub New(tenantId As Integer, request As SearchRequestDto, httpRequest As HttpRequest, andPredicate As Expression(Of Func(Of MixPostContent, Boolean)) = Nothing, orPredicate As Expression(Of Func(Of MixPostContent, Boolean)) = Nothing)
  overload: Mix.Lib.Models.Common.SearchPostQueryModel.#ctor*
  nameWithType.vb: SearchPostQueryModel.SearchPostQueryModel(Int32, SearchRequestDto, HttpRequest, Expression(Of Func(Of MixPostContent, Boolean)), Expression(Of Func(Of MixPostContent, Boolean)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Models.Common.SearchPostQueryModel.SearchPostQueryModel(System.Int32, SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest, System.Linq.Expressions.Expression(Of Func(Of MixPostContent, System.Boolean)), System.Linq.Expressions.Expression(Of Func(Of MixPostContent, System.Boolean)))
  name.vb: SearchPostQueryModel(Int32, SearchRequestDto, HttpRequest, Expression(Of Func(Of MixPostContent, Boolean)), Expression(Of Func(Of MixPostContent, Boolean)))
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.Categories
  commentId: P:Mix.Lib.Models.Common.SearchPostQueryModel.Categories
  id: Categories
  parent: Mix.Lib.Models.Common.SearchPostQueryModel
  langs:
  - csharp
  - vb
  name: Categories
  nameWithType: SearchPostQueryModel.Categories
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.Categories
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Categories
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string[] Categories { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Categories As String()
  overload: Mix.Lib.Models.Common.SearchPostQueryModel.Categories*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.Tags
  commentId: P:Mix.Lib.Models.Common.SearchPostQueryModel.Tags
  id: Tags
  parent: Mix.Lib.Models.Common.SearchPostQueryModel
  langs:
  - csharp
  - vb
  name: Tags
  nameWithType: SearchPostQueryModel.Tags
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.Tags
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Tags
    path: ../../mix.core/src/platform/mix.library/Models/Common/SearchPostQueryModel.cs
    startLine: 33
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string[] Tags { get; set; }
    parameters: []
    return:
      type: System.String[]
    content.vb: Public Property Tags As String()
  overload: Mix.Lib.Models.Common.SearchPostQueryModel.Tags*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.Models.Common
  commentId: N:Mix.Lib.Models.Common
  name: Mix.Lib.Models.Common
  nameWithType: Mix.Lib.Models.Common
  fullName: Mix.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  commentId: T:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  parent: Mix.Lib.Models.Common
  definition: Mix.Lib.Models.Common.SearchQueryModel`2
  name: SearchQueryModel<MixPostContent, Int32>
  nameWithType: SearchQueryModel<MixPostContent, Int32>
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32)
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32)
  name.vb: SearchQueryModel(Of MixPostContent, Int32)
  spec.csharp:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2
    name: SearchQueryModel
    nameWithType: SearchQueryModel
    fullName: Mix.Lib.Models.Common.SearchQueryModel
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPostContent
    name: MixPostContent
    nameWithType: MixPostContent
    fullName: MixPostContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2
    name: SearchQueryModel
    nameWithType: SearchQueryModel
    fullName: Mix.Lib.Models.Common.SearchQueryModel
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPostContent
    name: MixPostContent
    nameWithType: MixPostContent
    fullName: MixPostContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Keyword
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Keyword
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.Keyword
  name: Keyword
  nameWithType: SearchQueryModel<MixPostContent, Int32>.Keyword
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.Keyword
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).Keyword
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).Keyword
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Culture
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Culture
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.Culture
  name: Culture
  nameWithType: SearchQueryModel<MixPostContent, Int32>.Culture
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.Culture
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).Culture
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).Culture
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.FromDate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.FromDate
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.FromDate
  name: FromDate
  nameWithType: SearchQueryModel<MixPostContent, Int32>.FromDate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.FromDate
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).FromDate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).FromDate
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.ToDate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.ToDate
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.ToDate
  name: ToDate
  nameWithType: SearchQueryModel<MixPostContent, Int32>.ToDate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.ToDate
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).ToDate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).ToDate
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Status
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Status
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.Status
  name: Status
  nameWithType: SearchQueryModel<MixPostContent, Int32>.Status
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.Status
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).Status
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).Status
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.SearchMethod
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.SearchMethod
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.SearchMethod
  name: SearchMethod
  nameWithType: SearchQueryModel<MixPostContent, Int32>.SearchMethod
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.SearchMethod
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).SearchMethod
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).SearchMethod
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Columns
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Columns
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.Columns
  name: Columns
  nameWithType: SearchQueryModel<MixPostContent, Int32>.Columns
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.Columns
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).Columns
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).Columns
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.SearchColumns
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.SearchColumns
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.SearchColumns
  name: SearchColumns
  nameWithType: SearchQueryModel<MixPostContent, Int32>.SearchColumns
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.SearchColumns
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).SearchColumns
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).SearchColumns
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.MixTenantId
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.MixTenantId
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.MixTenantId
  name: MixTenantId
  nameWithType: SearchQueryModel<MixPostContent, Int32>.MixTenantId
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.MixTenantId
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).MixTenantId
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).MixTenantId
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.PagingData
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.PagingData
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.PagingData
  name: PagingData
  nameWithType: SearchQueryModel<MixPostContent, Int32>.PagingData
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.PagingData
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).PagingData
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).PagingData
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Predicate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.Predicate
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.Predicate
  name: Predicate
  nameWithType: SearchQueryModel<MixPostContent, Int32>.Predicate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.Predicate
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).Predicate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).Predicate
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.AndPredicate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.AndPredicate
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.AndPredicate
  name: AndPredicate
  nameWithType: SearchQueryModel<MixPostContent, Int32>.AndPredicate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.AndPredicate
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).AndPredicate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).AndPredicate
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.OrPredicate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.OrPredicate
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.OrPredicate
  name: OrPredicate
  nameWithType: SearchQueryModel<MixPostContent, Int32>.OrPredicate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.OrPredicate
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).OrPredicate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).OrPredicate
- uid: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  parent: Mix.Lib.Models.Common.SearchQueryModel{MixPostContent,System.Int32}
  definition: Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  name: BuildAndPredicate(SearchRequestDto, HttpRequest)
  nameWithType: SearchQueryModel<MixPostContent, Int32>.BuildAndPredicate(SearchRequestDto, HttpRequest)
  fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.BuildAndPredicate(SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest)
  nameWithType.vb: SearchQueryModel(Of MixPostContent, Int32).BuildAndPredicate(SearchRequestDto, HttpRequest)
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).BuildAndPredicate(SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest)
  spec.csharp:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
    name: BuildAndPredicate
    nameWithType: SearchQueryModel<MixPostContent, Int32>.BuildAndPredicate
    fullName: Mix.Lib.Models.Common.SearchQueryModel<MixPostContent, System.Int32>.BuildAndPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchRequestDto
    name: SearchRequestDto
    nameWithType: SearchRequestDto
    fullName: SearchRequestDto
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
    name: BuildAndPredicate
    nameWithType: SearchQueryModel(Of MixPostContent, Int32).BuildAndPredicate
    fullName: Mix.Lib.Models.Common.SearchQueryModel(Of MixPostContent, System.Int32).BuildAndPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchRequestDto
    name: SearchRequestDto
    nameWithType: SearchRequestDto
    fullName: SearchRequestDto
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.Common.SearchQueryModel`2
  commentId: T:Mix.Lib.Models.Common.SearchQueryModel`2
  name: SearchQueryModel<TEntity, TPrimaryKey>
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey)
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey)
  name.vb: SearchQueryModel(Of TEntity, TPrimaryKey)
  spec.csharp:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2
    name: SearchQueryModel
    nameWithType: SearchQueryModel
    fullName: Mix.Lib.Models.Common.SearchQueryModel
  - name: <
    nameWithType: <
    fullName: <
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2
    name: SearchQueryModel
    nameWithType: SearchQueryModel
    fullName: Mix.Lib.Models.Common.SearchQueryModel
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TPrimaryKey
    nameWithType: TPrimaryKey
    fullName: TPrimaryKey
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.Keyword
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.Keyword
  name: Keyword
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.Keyword
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.Keyword
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).Keyword
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).Keyword
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.Culture
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.Culture
  name: Culture
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.Culture
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.Culture
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).Culture
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).Culture
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.FromDate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.FromDate
  name: FromDate
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.FromDate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.FromDate
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).FromDate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).FromDate
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.ToDate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.ToDate
  name: ToDate
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.ToDate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.ToDate
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).ToDate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).ToDate
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.Status
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.Status
  name: Status
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.Status
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.Status
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).Status
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).Status
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.SearchMethod
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.SearchMethod
  name: SearchMethod
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.SearchMethod
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.SearchMethod
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).SearchMethod
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).SearchMethod
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.Columns
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.Columns
  name: Columns
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.Columns
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.Columns
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).Columns
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).Columns
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.SearchColumns
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.SearchColumns
  name: SearchColumns
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.SearchColumns
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.SearchColumns
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).SearchColumns
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).SearchColumns
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.MixTenantId
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.MixTenantId
  name: MixTenantId
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.MixTenantId
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.MixTenantId
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).MixTenantId
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).MixTenantId
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.PagingData
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.PagingData
  name: PagingData
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.PagingData
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.PagingData
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).PagingData
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).PagingData
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.Predicate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.Predicate
  name: Predicate
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.Predicate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.Predicate
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).Predicate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).Predicate
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.AndPredicate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.AndPredicate
  name: AndPredicate
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.AndPredicate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.AndPredicate
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).AndPredicate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).AndPredicate
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.OrPredicate
  commentId: P:Mix.Lib.Models.Common.SearchQueryModel`2.OrPredicate
  name: OrPredicate
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.OrPredicate
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.OrPredicate
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).OrPredicate
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).OrPredicate
- uid: Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  commentId: M:Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
  isExternal: true
  name: BuildAndPredicate(SearchRequestDto, HttpRequest)
  nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.BuildAndPredicate(SearchRequestDto, HttpRequest)
  fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.BuildAndPredicate(SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest)
  nameWithType.vb: SearchQueryModel(Of TEntity, TPrimaryKey).BuildAndPredicate(SearchRequestDto, HttpRequest)
  fullName.vb: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).BuildAndPredicate(SearchRequestDto, Microsoft.AspNetCore.Http.HttpRequest)
  spec.csharp:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
    name: BuildAndPredicate
    nameWithType: SearchQueryModel<TEntity, TPrimaryKey>.BuildAndPredicate
    fullName: Mix.Lib.Models.Common.SearchQueryModel<TEntity, TPrimaryKey>.BuildAndPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchRequestDto
    name: SearchRequestDto
    nameWithType: SearchRequestDto
    fullName: SearchRequestDto
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Mix.Lib.Models.Common.SearchQueryModel`2.BuildAndPredicate(SearchRequestDto,Microsoft.AspNetCore.Http.HttpRequest)
    name: BuildAndPredicate
    nameWithType: SearchQueryModel(Of TEntity, TPrimaryKey).BuildAndPredicate
    fullName: Mix.Lib.Models.Common.SearchQueryModel(Of TEntity, TPrimaryKey).BuildAndPredicate
  - name: (
    nameWithType: (
    fullName: (
  - uid: SearchRequestDto
    name: SearchRequestDto
    nameWithType: SearchRequestDto
    fullName: SearchRequestDto
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: Microsoft.AspNetCore.Http.HttpRequest
    name: HttpRequest
    nameWithType: HttpRequest
    fullName: Microsoft.AspNetCore.Http.HttpRequest
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.#ctor*
  commentId: Overload:Mix.Lib.Models.Common.SearchPostQueryModel.#ctor
  name: SearchPostQueryModel
  nameWithType: SearchPostQueryModel.SearchPostQueryModel
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.SearchPostQueryModel
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: SearchRequestDto
  isExternal: true
  name: SearchRequestDto
  nameWithType: SearchRequestDto
  fullName: SearchRequestDto
- uid: Microsoft.AspNetCore.Http.HttpRequest
  commentId: T:Microsoft.AspNetCore.Http.HttpRequest
  parent: Microsoft.AspNetCore.Http
  isExternal: true
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: Microsoft.AspNetCore.Http.HttpRequest
- uid: System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{Func{MixPostContent,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  name: Expression<Func<MixPostContent, Boolean>>
  nameWithType: Expression<Func<MixPostContent, Boolean>>
  fullName: System.Linq.Expressions.Expression<Func<MixPostContent, System.Boolean>>
  nameWithType.vb: Expression(Of Func(Of MixPostContent, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of Func(Of MixPostContent, System.Boolean))
  name.vb: Expression(Of Func(Of MixPostContent, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPostContent
    name: MixPostContent
    nameWithType: MixPostContent
    fullName: MixPostContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Func`2
    name: Func
    nameWithType: Func
    fullName: Func
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPostContent
    name: MixPostContent
    nameWithType: MixPostContent
    fullName: MixPostContent
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.AspNetCore.Http
  commentId: N:Microsoft.AspNetCore.Http
  isExternal: true
  name: Microsoft.AspNetCore.Http
  nameWithType: Microsoft.AspNetCore.Http
  fullName: Microsoft.AspNetCore.Http
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: System.Linq.Expressions.Expression
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TDelegate
    nameWithType: TDelegate
    fullName: TDelegate
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.Categories*
  commentId: Overload:Mix.Lib.Models.Common.SearchPostQueryModel.Categories
  name: Categories
  nameWithType: SearchPostQueryModel.Categories
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.Categories
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Mix.Lib.Models.Common.SearchPostQueryModel.Tags*
  commentId: Overload:Mix.Lib.Models.Common.SearchPostQueryModel.Tags
  name: Tags
  nameWithType: SearchPostQueryModel.Tags
  fullName: Mix.Lib.Models.Common.SearchPostQueryModel.Tags
