### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  id: MixPageModuleViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor(MixPageModuleAssociation,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId
  - Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId
  - Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate
  langs:
  - csharp
  - vb
  name: MixPageModuleViewModel
  nameWithType: MixPageModuleViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixPageModuleViewModel
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 2
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixPageModuleViewModel : ViewModelBase<MixCmsContext, MixPageModuleAssociation, int, MixPageModuleViewModel>'
    content.vb: >-
      Public Class MixPageModuleViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixPageModuleAssociation, Integer, MixPageModuleViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId
  commentId: P:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId
  id: LeftId
  parent: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  langs:
  - csharp
  - vb
  name: LeftId
  nameWithType: MixPageModuleViewModel.LeftId
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LeftId
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 6
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public int LeftId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property LeftId As Integer
  overload: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId
  commentId: P:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId
  id: RightId
  parent: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  langs:
  - csharp
  - vb
  name: RightId
  nameWithType: MixPageModuleViewModel.RightId
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId
  type: Property
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RightId
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 7
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public int RightId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property RightId As Integer
  overload: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  langs:
  - csharp
  - vb
  name: MixPageModuleViewModel()
  nameWithType: MixPageModuleViewModel.MixPageModuleViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.MixPageModuleViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 13
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixPageModuleViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor(MixPageModuleAssociation,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor(MixPageModuleAssociation,UnitOfWorkInfo)
  id: '#ctor(MixPageModuleAssociation,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  langs:
  - csharp
  - vb
  name: MixPageModuleViewModel(MixPageModuleAssociation, UnitOfWorkInfo)
  nameWithType: MixPageModuleViewModel.MixPageModuleViewModel(MixPageModuleAssociation, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.MixPageModuleViewModel(MixPageModuleAssociation, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 17
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixPageModuleViewModel(MixPageModuleAssociation entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: MixPageModuleAssociation
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixPageModuleAssociation, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  langs:
  - csharp
  - vb
  name: MixPageModuleViewModel(UnitOfWorkInfo)
  nameWithType: MixPageModuleViewModel.MixPageModuleViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.MixPageModuleViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 24
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixPageModuleViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate
  commentId: M:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate
  id: Validate
  parent: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel
  langs:
  - csharp
  - vb
  name: Validate()
  nameWithType: MixPageModuleViewModel.Validate()
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate()
  type: Method
  source:
    remote:
      path: src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Validate
    path: ../../mix.core/src/modules/mix.portal/Domain/ViewModels/MixPageModuleViewModel.cs
    startLine: 32
  assemblies:
  - mix.portal
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public override Task Validate()
    return:
      type: Task
    content.vb: Public Overrides Function Validate As Task
  overload: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId
  name: LeftId
  nameWithType: MixPageModuleViewModel.LeftId
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.LeftId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId
  name: RightId
  nameWithType: MixPageModuleViewModel.RightId
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.RightId
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.#ctor
  name: MixPageModuleViewModel
  nameWithType: MixPageModuleViewModel.MixPageModuleViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.MixPageModuleViewModel
- uid: MixPageModuleAssociation
  commentId: '!:MixPageModuleAssociation'
  isExternal: true
  name: MixPageModuleAssociation
  nameWithType: MixPageModuleAssociation
  fullName: MixPageModuleAssociation
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate
  name: Validate
  nameWithType: MixPageModuleViewModel.Validate
  fullName: Mix.Portal.Domain.ViewModels.MixPageModuleViewModel.Validate
- uid: Task
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: Task
