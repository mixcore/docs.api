### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto
  commentId: T:Mix.Tenancy.Domain.Dtos.InitFullSiteDto
  id: InitFullSiteDto
  parent: Mix.Tenancy.Domain.Dtos
  children:
  - Mix.Tenancy.Domain.Dtos.InitFullSiteDto.#ctor
  - Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData
  - Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData
  langs:
  - csharp
  - vb
  name: InitFullSiteDto
  nameWithType: InitFullSiteDto
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitFullSiteDto
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
    startLine: 4
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public class InitFullSiteDto
    content.vb: Public Class InitFullSiteDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData
  commentId: P:Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData
  id: TenantData
  parent: Mix.Tenancy.Domain.Dtos.InitFullSiteDto
  langs:
  - csharp
  - vb
  name: TenantData
  nameWithType: InitFullSiteDto.TenantData
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TenantData
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
    startLine: 6
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public InitCmsDto TenantData { get; set; }
    parameters: []
    return:
      type: Mix.Tenancy.Domain.Dtos.InitCmsDto
    content.vb: Public Property TenantData As InitCmsDto
  overload: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData
  commentId: P:Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData
  id: AccountData
  parent: Mix.Tenancy.Domain.Dtos.InitFullSiteDto
  langs:
  - csharp
  - vb
  name: AccountData
  nameWithType: InitFullSiteDto.AccountData
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AccountData
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
    startLine: 8
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public RegisterViewModel AccountData { get; set; }
    parameters: []
    return:
      type: Mix.Identity.Models.AccountViewModels.RegisterViewModel
    content.vb: Public Property AccountData As RegisterViewModel
  overload: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.#ctor
  commentId: M:Mix.Tenancy.Domain.Dtos.InitFullSiteDto.#ctor
  id: '#ctor'
  parent: Mix.Tenancy.Domain.Dtos.InitFullSiteDto
  langs:
  - csharp
  - vb
  name: InitFullSiteDto()
  nameWithType: InitFullSiteDto.InitFullSiteDto()
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.InitFullSiteDto()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Dtos/InitFullTenantDto.cs
    startLine: 10
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Dtos
  syntax:
    content: public InitFullSiteDto()
    content.vb: Public Sub New
  overload: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Tenancy.Domain.Dtos
  commentId: N:Mix.Tenancy.Domain.Dtos
  name: Mix.Tenancy.Domain.Dtos
  nameWithType: Mix.Tenancy.Domain.Dtos
  fullName: Mix.Tenancy.Domain.Dtos
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData
  name: TenantData
  nameWithType: InitFullSiteDto.TenantData
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.TenantData
- uid: Mix.Tenancy.Domain.Dtos.InitCmsDto
  commentId: T:Mix.Tenancy.Domain.Dtos.InitCmsDto
  parent: Mix.Tenancy.Domain.Dtos
  name: InitCmsDto
  nameWithType: InitCmsDto
  fullName: Mix.Tenancy.Domain.Dtos.InitCmsDto
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData
  name: AccountData
  nameWithType: InitFullSiteDto.AccountData
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.AccountData
- uid: Mix.Identity.Models.AccountViewModels.RegisterViewModel
  commentId: T:Mix.Identity.Models.AccountViewModels.RegisterViewModel
  parent: Mix.Identity.Models.AccountViewModels
  name: RegisterViewModel
  nameWithType: RegisterViewModel
  fullName: Mix.Identity.Models.AccountViewModels.RegisterViewModel
- uid: Mix.Identity.Models.AccountViewModels
  commentId: N:Mix.Identity.Models.AccountViewModels
  name: Mix.Identity.Models.AccountViewModels
  nameWithType: Mix.Identity.Models.AccountViewModels
  fullName: Mix.Identity.Models.AccountViewModels
- uid: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.#ctor*
  commentId: Overload:Mix.Tenancy.Domain.Dtos.InitFullSiteDto.#ctor
  name: InitFullSiteDto
  nameWithType: InitFullSiteDto.InitFullSiteDto
  fullName: Mix.Tenancy.Domain.Dtos.InitFullSiteDto.InitFullSiteDto
