### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  commentId: T:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  id: InitCultureViewModel
  parent: Mix.Tenancy.Domain.ViewModels.Init
  children:
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName
  - Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title
  langs:
  - csharp
  - vb
  name: InitCultureViewModel
  nameWithType: InitCultureViewModel
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitCultureViewModel
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 3
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: 'public class InitCultureViewModel : ViewModelBase<MixCmsContext, MixCulture, int, InitCultureViewModel>'
    content.vb: >-
      Public Class InitCultureViewModel
          Inherits ViewModelBase(Of MixCmsContext, MixCulture, Integer, InitCultureViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title
  id: Title
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: InitCultureViewModel.Title
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 5
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias
  id: Alias
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Alias
  nameWithType: InitCultureViewModel.Alias
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Alias
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 6
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public string Alias { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Alias As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon
  id: Icon
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: InitCultureViewModel.Icon
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 7
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid
  id: Lcid
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Lcid
  nameWithType: InitCultureViewModel.Lcid
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Lcid
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 8
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public string Lcid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Lcid As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture
  id: Specificulture
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: InitCultureViewModel.Specificulture
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 9
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image
  id: Image
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Image
  nameWithType: InitCultureViewModel.Image
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Image
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 10
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public virtual string Image { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Image As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName
  id: DisplayName
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: DisplayName
  nameWithType: InitCultureViewModel.DisplayName
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DisplayName
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 11
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public virtual string DisplayName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property DisplayName As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName
  id: SystemName
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: SystemName
  nameWithType: InitCultureViewModel.SystemName
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SystemName
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 12
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public virtual string SystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property SystemName As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description
  id: Description
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: InitCultureViewModel.Description
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 13
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public virtual string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable Property Description As String
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId
  commentId: P:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId
  id: MixTenantId
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: InitCultureViewModel.MixTenantId
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 15
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  commentId: M:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues(System.String,System.Nullable{System.Int32})
  id: InitDefaultValues(System.String,System.Nullable{System.Int32})
  parent: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel
  langs:
  - csharp
  - vb
  name: InitDefaultValues(String, Nullable<Int32>)
  nameWithType: InitCultureViewModel.InitDefaultValues(String, Nullable<Int32>)
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues(System.String, System.Nullable<System.Int32>)
  type: Method
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InitDefaultValues
    path: ../../mix.core/src/modules/mix.tenancy/Domain/ViewModels/Init/InitCultureViewModel.cs
    startLine: 17
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.ViewModels.Init
  syntax:
    content: public override void InitDefaultValues(string language = null, int? cultureId = default(int? ))
    parameters:
    - id: language
      type: System.String
    - id: cultureId
      type: System.Nullable{System.Int32}
    content.vb: Public Overrides Sub InitDefaultValues(language As String = Nothing, cultureId As Integer? = Nothing)
  overload: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues*
  nameWithType.vb: InitCultureViewModel.InitDefaultValues(String, Nullable(Of Int32))
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
  fullName.vb: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues(System.String, System.Nullable(Of System.Int32))
  name.vb: InitDefaultValues(String, Nullable(Of Int32))
references:
- uid: Mix.Tenancy.Domain.ViewModels.Init
  commentId: N:Mix.Tenancy.Domain.ViewModels.Init
  name: Mix.Tenancy.Domain.ViewModels.Init
  nameWithType: Mix.Tenancy.Domain.ViewModels.Init
  fullName: Mix.Tenancy.Domain.ViewModels.Init
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title
  name: Title
  nameWithType: InitCultureViewModel.Title
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Title
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias
  name: Alias
  nameWithType: InitCultureViewModel.Alias
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Alias
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon
  name: Icon
  nameWithType: InitCultureViewModel.Icon
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Icon
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid
  name: Lcid
  nameWithType: InitCultureViewModel.Lcid
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Lcid
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture
  name: Specificulture
  nameWithType: InitCultureViewModel.Specificulture
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Specificulture
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image
  name: Image
  nameWithType: InitCultureViewModel.Image
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Image
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName
  name: DisplayName
  nameWithType: InitCultureViewModel.DisplayName
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.DisplayName
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName
  name: SystemName
  nameWithType: InitCultureViewModel.SystemName
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.SystemName
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description
  name: Description
  nameWithType: InitCultureViewModel.Description
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.Description
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId
  name: MixTenantId
  nameWithType: InitCultureViewModel.MixTenantId
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues*
  commentId: Overload:Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues
  name: InitDefaultValues
  nameWithType: InitCultureViewModel.InitDefaultValues
  fullName: Mix.Tenancy.Domain.ViewModels.Init.InitCultureViewModel.InitDefaultValues
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
