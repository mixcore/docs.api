### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  commentId: T:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  id: GlobalSettingsViewModel
  parent: Mix.Cms.Lib.ViewModels
  children:
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses
  - Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId
  langs:
  - csharp
  - vb
  name: GlobalSettingsViewModel
  nameWithType: GlobalSettingsViewModel
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GlobalSettingsViewModel
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 21
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: public class GlobalSettingsViewModel
    content.vb: Public Class GlobalSettingsViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain
  id: Domain
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: Domain
  nameWithType: GlobalSettingsViewModel.Domain
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Domain
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 23
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("domain")]

      public string Domain { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("domain")>

      Public Property Domain As String
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: domain
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang
  id: Lang
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: Lang
  nameWithType: GlobalSettingsViewModel.Lang
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Lang
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 26
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("lang")]

      public string Lang { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("lang")>

      Public Property Lang As String
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lang
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon
  id: LangIcon
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: LangIcon
  nameWithType: GlobalSettingsViewModel.LangIcon
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LangIcon
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 29
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("langIcon")]

      public string LangIcon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("langIcon")>

      Public Property LangIcon As String
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: langIcon
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId
  id: ThemeId
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: ThemeId
  nameWithType: GlobalSettingsViewModel.ThemeId
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThemeId
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 32
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("themeId")]

      public int ThemeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: >-
      <JsonProperty("themeId")>

      Public Property ThemeId As Integer
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: themeId
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings
  id: PortalThemeSettings
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: PortalThemeSettings
  nameWithType: GlobalSettingsViewModel.PortalThemeSettings
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PortalThemeSettings
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 35
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("portalThemeSettings")]

      public JObject PortalThemeSettings { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JObject
    content.vb: >-
      <JsonProperty("portalThemeSettings")>

      Public Property PortalThemeSettings As JObject
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: portalThemeSettings
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey
  id: ApiEncryptKey
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: ApiEncryptKey
  nameWithType: GlobalSettingsViewModel.ApiEncryptKey
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ApiEncryptKey
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 38
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("apiEncryptKey")]

      public string ApiEncryptKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("apiEncryptKey")>

      Public Property ApiEncryptKey As String
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: apiEncryptKey
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV
  id: ApiEncryptIV
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: ApiEncryptIV
  nameWithType: GlobalSettingsViewModel.ApiEncryptIV
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ApiEncryptIV
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 41
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("apiEncryptIV")]

      public string ApiEncryptIV { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("apiEncryptIV")>

      Public Property ApiEncryptIV As String
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: apiEncryptIV
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi
  id: IsEncryptApi
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: IsEncryptApi
  nameWithType: GlobalSettingsViewModel.IsEncryptApi
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsEncryptApi
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 44
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("isEncryptApi")]

      public bool IsEncryptApi { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("isEncryptApi")>

      Public Property IsEncryptApi As Boolean
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: isEncryptApi
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures
  id: Cultures
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: Cultures
  nameWithType: GlobalSettingsViewModel.Cultures
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Cultures
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 47
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("cultures")]

      public List<SupportedCulture> Cultures { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture}
    content.vb: >-
      <JsonProperty("cultures")>

      Public Property Cultures As List(Of SupportedCulture)
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: cultures
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes
  id: PageTypes
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: PageTypes
  nameWithType: GlobalSettingsViewModel.PageTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageTypes
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 50
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("pageTypes")]

      public List<object> PageTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: >-
      <JsonProperty("pageTypes")>

      Public Property PageTypes As List(Of Object)
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: pageTypes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes
  id: ModuleTypes
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: ModuleTypes
  nameWithType: GlobalSettingsViewModel.ModuleTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleTypes
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 53
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("moduleTypes")]

      public List<object> ModuleTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: >-
      <JsonProperty("moduleTypes")>

      Public Property ModuleTypes As List(Of Object)
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: moduleTypes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes
  id: AttributeSetTypes
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: AttributeSetTypes
  nameWithType: GlobalSettingsViewModel.AttributeSetTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AttributeSetTypes
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 56
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("attributeSetTypes")]

      public List<object> AttributeSetTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: >-
      <JsonProperty("attributeSetTypes")>

      Public Property AttributeSetTypes As List(Of Object)
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: attributeSetTypes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes
  id: DataTypes
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: DataTypes
  nameWithType: GlobalSettingsViewModel.DataTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataTypes
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 59
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("dataTypes")]

      public List<object> DataTypes { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: >-
      <JsonProperty("dataTypes")>

      Public Property DataTypes As List(Of Object)
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: dataTypes
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses
  id: Statuses
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: Statuses
  nameWithType: GlobalSettingsViewModel.Statuses
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Statuses
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 62
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("statuses")]

      public List<object> Statuses { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.Object}
    content.vb: >-
      <JsonProperty("statuses")>

      Public Property Statuses As List(Of Object)
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: statuses
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration
  commentId: P:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration
  id: LastUpdateConfiguration
  parent: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel
  langs:
  - csharp
  - vb
  name: LastUpdateConfiguration
  nameWithType: GlobalSettingsViewModel.LastUpdateConfiguration
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LastUpdateConfiguration
    path: ../../mix.core/src/Mix.Cms.Lib/ViewModels/CommonViewModels.cs
    startLine: 65
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.ViewModels
  syntax:
    content: >-
      [JsonProperty("lastUpdateConfiguration")]

      public DateTime? LastUpdateConfiguration { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: >-
      <JsonProperty("lastUpdateConfiguration")>

      Public Property LastUpdateConfiguration As Date?
  overload: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lastUpdateConfiguration
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Cms.Lib.ViewModels
  commentId: N:Mix.Cms.Lib.ViewModels
  name: Mix.Cms.Lib.ViewModels
  nameWithType: Mix.Cms.Lib.ViewModels
  fullName: Mix.Cms.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain
  name: Domain
  nameWithType: GlobalSettingsViewModel.Domain
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Domain
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang
  name: Lang
  nameWithType: GlobalSettingsViewModel.Lang
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Lang
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon
  name: LangIcon
  nameWithType: GlobalSettingsViewModel.LangIcon
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LangIcon
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId
  name: ThemeId
  nameWithType: GlobalSettingsViewModel.ThemeId
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ThemeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings
  name: PortalThemeSettings
  nameWithType: GlobalSettingsViewModel.PortalThemeSettings
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PortalThemeSettings
- uid: Newtonsoft.Json.Linq.JObject
  commentId: T:Newtonsoft.Json.Linq.JObject
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: Newtonsoft.Json.Linq.JObject
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey
  name: ApiEncryptKey
  nameWithType: GlobalSettingsViewModel.ApiEncryptKey
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptKey
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV
  name: ApiEncryptIV
  nameWithType: GlobalSettingsViewModel.ApiEncryptIV
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ApiEncryptIV
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi
  name: IsEncryptApi
  nameWithType: GlobalSettingsViewModel.IsEncryptApi
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.IsEncryptApi
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures
  name: Cultures
  nameWithType: GlobalSettingsViewModel.Cultures
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Cultures
- uid: System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture}
  commentId: T:System.Collections.Generic.List{Mix.Domain.Core.Models.SupportedCulture}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<SupportedCulture>
  nameWithType: List<SupportedCulture>
  fullName: System.Collections.Generic.List<Mix.Domain.Core.Models.SupportedCulture>
  nameWithType.vb: List(Of SupportedCulture)
  fullName.vb: System.Collections.Generic.List(Of Mix.Domain.Core.Models.SupportedCulture)
  name.vb: List(Of SupportedCulture)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Domain.Core.Models.SupportedCulture
    name: SupportedCulture
    nameWithType: SupportedCulture
    fullName: Mix.Domain.Core.Models.SupportedCulture
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes
  name: PageTypes
  nameWithType: GlobalSettingsViewModel.PageTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.PageTypes
- uid: System.Collections.Generic.List{System.Object}
  commentId: T:System.Collections.Generic.List{System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Object>
  nameWithType: List<Object>
  fullName: System.Collections.Generic.List<System.Object>
  nameWithType.vb: List(Of Object)
  fullName.vb: System.Collections.Generic.List(Of System.Object)
  name.vb: List(Of Object)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes
  name: ModuleTypes
  nameWithType: GlobalSettingsViewModel.ModuleTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.ModuleTypes
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes
  name: AttributeSetTypes
  nameWithType: GlobalSettingsViewModel.AttributeSetTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.AttributeSetTypes
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes
  name: DataTypes
  nameWithType: GlobalSettingsViewModel.DataTypes
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.DataTypes
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses
  name: Statuses
  nameWithType: GlobalSettingsViewModel.Statuses
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.Statuses
- uid: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration*
  commentId: Overload:Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration
  name: LastUpdateConfiguration
  nameWithType: GlobalSettingsViewModel.LastUpdateConfiguration
  fullName: Mix.Cms.Lib.ViewModels.GlobalSettingsViewModel.LastUpdateConfiguration
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  name: Nullable<DateTime>
  nameWithType: Nullable<DateTime>
  fullName: System.Nullable<System.DateTime>
  nameWithType.vb: Nullable(Of DateTime)
  fullName.vb: System.Nullable(Of System.DateTime)
  name.vb: Nullable(Of DateTime)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.DateTime
    name: DateTime
    nameWithType: DateTime
    fullName: System.DateTime
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
