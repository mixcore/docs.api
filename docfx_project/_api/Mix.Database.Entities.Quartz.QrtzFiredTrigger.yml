### YamlMime:ManagedReference
items:
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  commentId: T:Mix.Database.Entities.Quartz.QrtzFiredTrigger
  id: QrtzFiredTrigger
  parent: Mix.Database.Entities.Quartz
  children:
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.State
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup
  - Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName
  langs:
  - csharp
  - vb
  name: QrtzFiredTrigger
  nameWithType: QrtzFiredTrigger
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  type: Class
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: QrtzFiredTrigger
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 2
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public class QrtzFiredTrigger
    content.vb: Public Class QrtzFiredTrigger
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName
  id: SchedName
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: SchedName
  nameWithType: QrtzFiredTrigger.SchedName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SchedName
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 4
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string SchedName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SchedName As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId
  id: EntryId
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: EntryId
  nameWithType: QrtzFiredTrigger.EntryId
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: EntryId
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 5
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string EntryId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property EntryId As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName
  id: TriggerName
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: TriggerName
  nameWithType: QrtzFiredTrigger.TriggerName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TriggerName
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 6
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string TriggerName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TriggerName As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup
  id: TriggerGroup
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: TriggerGroup
  nameWithType: QrtzFiredTrigger.TriggerGroup
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TriggerGroup
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 7
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string TriggerGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TriggerGroup As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName
  id: InstanceName
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: InstanceName
  nameWithType: QrtzFiredTrigger.InstanceName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: InstanceName
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 8
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string InstanceName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property InstanceName As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime
  id: FiredTime
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: FiredTime
  nameWithType: QrtzFiredTrigger.FiredTime
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: FiredTime
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 9
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public long FiredTime { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property FiredTime As Long
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime
  id: SchedTime
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: SchedTime
  nameWithType: QrtzFiredTrigger.SchedTime
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SchedTime
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 10
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public long SchedTime { get; set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property SchedTime As Long
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority
  id: Priority
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: Priority
  nameWithType: QrtzFiredTrigger.Priority
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Priority
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 11
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public int Priority { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Priority As Integer
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.State
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.State
  id: State
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: State
  nameWithType: QrtzFiredTrigger.State
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.State
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: State
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 12
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string State { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property State As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.State*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName
  id: JobName
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: JobName
  nameWithType: QrtzFiredTrigger.JobName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JobName
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 13
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string JobName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JobName As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup
  id: JobGroup
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: JobGroup
  nameWithType: QrtzFiredTrigger.JobGroup
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JobGroup
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 14
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public string JobGroup { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property JobGroup As String
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent
  id: IsNonconcurrent
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: IsNonconcurrent
  nameWithType: QrtzFiredTrigger.IsNonconcurrent
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsNonconcurrent
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 15
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public bool? IsNonconcurrent { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property IsNonconcurrent As Boolean?
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery
  commentId: P:Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery
  id: RequestsRecovery
  parent: Mix.Database.Entities.Quartz.QrtzFiredTrigger
  langs:
  - csharp
  - vb
  name: RequestsRecovery
  nameWithType: QrtzFiredTrigger.RequestsRecovery
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery
  type: Property
  source:
    remote:
      path: src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: RequestsRecovery
    path: ../../mix.core/src/platform/mix.database/Entities/Quartz/QrtzFiredTrigger.cs
    startLine: 16
  assemblies:
  - mix.database
  namespace: Mix.Database.Entities.Quartz
  syntax:
    content: public bool? RequestsRecovery { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: Public Property RequestsRecovery As Boolean?
  overload: Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Database.Entities.Quartz
  commentId: N:Mix.Database.Entities.Quartz
  name: Mix.Database.Entities.Quartz
  nameWithType: Mix.Database.Entities.Quartz
  fullName: Mix.Database.Entities.Quartz
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName
  name: SchedName
  nameWithType: QrtzFiredTrigger.SchedName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId
  name: EntryId
  nameWithType: QrtzFiredTrigger.EntryId
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.EntryId
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName
  name: TriggerName
  nameWithType: QrtzFiredTrigger.TriggerName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerName
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup
  name: TriggerGroup
  nameWithType: QrtzFiredTrigger.TriggerGroup
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.TriggerGroup
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName
  name: InstanceName
  nameWithType: QrtzFiredTrigger.InstanceName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.InstanceName
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime
  name: FiredTime
  nameWithType: QrtzFiredTrigger.FiredTime
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.FiredTime
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime
  name: SchedTime
  nameWithType: QrtzFiredTrigger.SchedTime
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.SchedTime
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority
  name: Priority
  nameWithType: QrtzFiredTrigger.Priority
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.Priority
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.State*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.State
  name: State
  nameWithType: QrtzFiredTrigger.State
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.State
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName
  name: JobName
  nameWithType: QrtzFiredTrigger.JobName
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobName
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup
  name: JobGroup
  nameWithType: QrtzFiredTrigger.JobGroup
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.JobGroup
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent
  name: IsNonconcurrent
  nameWithType: QrtzFiredTrigger.IsNonconcurrent
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.IsNonconcurrent
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery*
  commentId: Overload:Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery
  name: RequestsRecovery
  nameWithType: QrtzFiredTrigger.RequestsRecovery
  fullName: Mix.Database.Entities.Quartz.QrtzFiredTrigger.RequestsRecovery
