### YamlMime:ManagedReference
items:
- uid: Mix.Heart.Models.PagingModel
  commentId: T:Mix.Heart.Models.PagingModel
  id: PagingModel
  parent: Mix.Heart.Models
  children:
  - Mix.Heart.Models.PagingModel.PageIndex
  - Mix.Heart.Models.PagingModel.PageSize
  - Mix.Heart.Models.PagingModel.SortBy
  - Mix.Heart.Models.PagingModel.SortDirection
  - Mix.Heart.Models.PagingModel.Total
  - Mix.Heart.Models.PagingModel.TotalPage
  langs:
  - csharp
  - vb
  name: PagingModel
  nameWithType: PagingModel
  fullName: Mix.Heart.Models.PagingModel
  type: Class
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: PagingModel
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 4
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public class PagingModel
    content.vb: Public Class PagingModel
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Shared.Models.PagingRequestModel
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Heart.Models.PagingModel.PageIndex
  commentId: P:Mix.Heart.Models.PagingModel.PageIndex
  id: PageIndex
  parent: Mix.Heart.Models.PagingModel
  langs:
  - csharp
  - vb
  name: PageIndex
  nameWithType: PagingModel.PageIndex
  fullName: Mix.Heart.Models.PagingModel.PageIndex
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: PageIndex
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 6
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public int PageIndex { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property PageIndex As Integer
  overload: Mix.Heart.Models.PagingModel.PageIndex*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.PagingModel.PageSize
  commentId: P:Mix.Heart.Models.PagingModel.PageSize
  id: PageSize
  parent: Mix.Heart.Models.PagingModel
  langs:
  - csharp
  - vb
  name: PageSize
  nameWithType: PagingModel.PageSize
  fullName: Mix.Heart.Models.PagingModel.PageSize
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: PageSize
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 8
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public int? PageSize { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property PageSize As Integer?
  overload: Mix.Heart.Models.PagingModel.PageSize*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.PagingModel.Total
  commentId: P:Mix.Heart.Models.PagingModel.Total
  id: Total
  parent: Mix.Heart.Models.PagingModel
  langs:
  - csharp
  - vb
  name: Total
  nameWithType: PagingModel.Total
  fullName: Mix.Heart.Models.PagingModel.Total
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: Total
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 10
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public int Total { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Total As Integer
  overload: Mix.Heart.Models.PagingModel.Total*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.PagingModel.TotalPage
  commentId: P:Mix.Heart.Models.PagingModel.TotalPage
  id: TotalPage
  parent: Mix.Heart.Models.PagingModel
  langs:
  - csharp
  - vb
  name: TotalPage
  nameWithType: PagingModel.TotalPage
  fullName: Mix.Heart.Models.PagingModel.TotalPage
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: TotalPage
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 12
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public int TotalPage { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalPage As Integer
  overload: Mix.Heart.Models.PagingModel.TotalPage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.PagingModel.SortBy
  commentId: P:Mix.Heart.Models.PagingModel.SortBy
  id: SortBy
  parent: Mix.Heart.Models.PagingModel
  langs:
  - csharp
  - vb
  name: SortBy
  nameWithType: PagingModel.SortBy
  fullName: Mix.Heart.Models.PagingModel.SortBy
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: SortBy
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 14
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public string SortBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SortBy As String
  overload: Mix.Heart.Models.PagingModel.SortBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Heart.Models.PagingModel.SortDirection
  commentId: P:Mix.Heart.Models.PagingModel.SortDirection
  id: SortDirection
  parent: Mix.Heart.Models.PagingModel
  langs:
  - csharp
  - vb
  name: SortDirection
  nameWithType: PagingModel.SortDirection
  fullName: Mix.Heart.Models.PagingModel.SortDirection
  type: Property
  source:
    remote:
      path: src/Mix.Heart/Model/PagingModel.cs
      branch: develop/v2
      repo: https://github.com/mixcore/mix.heart.git
    id: SortDirection
    path: ../../mix.core/src/framework/mix-heart/src/Mix.Heart/Model/PagingModel.cs
    startLine: 16
  assemblies:
  - mix.heart
  namespace: Mix.Heart.Models
  syntax:
    content: public SortDirection SortDirection { get; set; }
    parameters: []
    return:
      type: Mix.Heart.Enums.SortDirection
    content.vb: Public Property SortDirection As SortDirection
  overload: Mix.Heart.Models.PagingModel.SortDirection*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Heart.Models
  commentId: N:Mix.Heart.Models
  name: Mix.Heart.Models
  nameWithType: Mix.Heart.Models
  fullName: Mix.Heart.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Heart.Models.PagingModel.PageIndex*
  commentId: Overload:Mix.Heart.Models.PagingModel.PageIndex
  name: PageIndex
  nameWithType: PagingModel.PageIndex
  fullName: Mix.Heart.Models.PagingModel.PageIndex
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Heart.Models.PagingModel.PageSize*
  commentId: Overload:Mix.Heart.Models.PagingModel.PageSize
  name: PageSize
  nameWithType: PagingModel.PageSize
  fullName: Mix.Heart.Models.PagingModel.PageSize
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Heart.Models.PagingModel.Total*
  commentId: Overload:Mix.Heart.Models.PagingModel.Total
  name: Total
  nameWithType: PagingModel.Total
  fullName: Mix.Heart.Models.PagingModel.Total
- uid: Mix.Heart.Models.PagingModel.TotalPage*
  commentId: Overload:Mix.Heart.Models.PagingModel.TotalPage
  name: TotalPage
  nameWithType: PagingModel.TotalPage
  fullName: Mix.Heart.Models.PagingModel.TotalPage
- uid: Mix.Heart.Models.PagingModel.SortBy*
  commentId: Overload:Mix.Heart.Models.PagingModel.SortBy
  name: SortBy
  nameWithType: PagingModel.SortBy
  fullName: Mix.Heart.Models.PagingModel.SortBy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Heart.Models.PagingModel.SortDirection*
  commentId: Overload:Mix.Heart.Models.PagingModel.SortDirection
  name: SortDirection
  nameWithType: PagingModel.SortDirection
  fullName: Mix.Heart.Models.PagingModel.SortDirection
- uid: Mix.Heart.Enums.SortDirection
  commentId: T:Mix.Heart.Enums.SortDirection
  parent: Mix.Heart.Enums
  name: SortDirection
  nameWithType: SortDirection
  fullName: Mix.Heart.Enums.SortDirection
- uid: Mix.Heart.Enums
  commentId: N:Mix.Heart.Enums
  name: Mix.Heart.Enums
  nameWithType: Mix.Heart.Enums
  fullName: Mix.Heart.Enums
