### YamlMime:ManagedReference
items:
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations
  commentId: T:Mix.Tenancy.Domain.Models.UploadConfigurations
  id: UploadConfigurations
  parent: Mix.Tenancy.Domain.Models
  children:
  - Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts
  - Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts
  - Mix.Tenancy.Domain.Models.UploadConfigurations.Height
  - Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop
  - Mix.Tenancy.Domain.Models.UploadConfigurations.Width
  langs:
  - csharp
  - vb
  name: UploadConfigurations
  nameWithType: UploadConfigurations
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations
  type: Class
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UploadConfigurations
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 13
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public class UploadConfigurations
    content.vb: Public Class UploadConfigurations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts
  commentId: P:Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts
  id: ArrayAccepts
  parent: Mix.Tenancy.Domain.Models.UploadConfigurations
  langs:
  - csharp
  - vb
  name: ArrayAccepts
  nameWithType: UploadConfigurations.ArrayAccepts
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ArrayAccepts
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 15
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public JArray ArrayAccepts { get; set; }
    parameters: []
    return:
      type: Newtonsoft.Json.Linq.JArray
    content.vb: Public Property ArrayAccepts As JArray
  overload: Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts
  commentId: P:Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts
  id: Accepts
  parent: Mix.Tenancy.Domain.Models.UploadConfigurations
  langs:
  - csharp
  - vb
  name: Accepts
  nameWithType: UploadConfigurations.Accepts
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Accepts
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 17
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public string Accepts { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Accepts As String
  overload: Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.Width
  commentId: P:Mix.Tenancy.Domain.Models.UploadConfigurations.Width
  id: Width
  parent: Mix.Tenancy.Domain.Models.UploadConfigurations
  langs:
  - csharp
  - vb
  name: Width
  nameWithType: UploadConfigurations.Width
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.Width
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Width
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 19
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public int? Width { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Width As Integer?
  overload: Mix.Tenancy.Domain.Models.UploadConfigurations.Width*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.Height
  commentId: P:Mix.Tenancy.Domain.Models.UploadConfigurations.Height
  id: Height
  parent: Mix.Tenancy.Domain.Models.UploadConfigurations
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: UploadConfigurations.Height
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.Height
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Height
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 21
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public int? Height { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Int32}
    content.vb: Public Property Height As Integer?
  overload: Mix.Tenancy.Domain.Models.UploadConfigurations.Height*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop
  commentId: P:Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop
  id: IsCrop
  parent: Mix.Tenancy.Domain.Models.UploadConfigurations
  langs:
  - csharp
  - vb
  name: IsCrop
  nameWithType: UploadConfigurations.IsCrop
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop
  type: Property
  source:
    remote:
      path: src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsCrop
    path: ../../mix.core/src/modules/mix.tenancy/Domain/Models/ColumnConfigurationModels.cs
    startLine: 23
  assemblies:
  - mix.tenancy
  namespace: Mix.Tenancy.Domain.Models
  syntax:
    content: public bool IsCrop { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsCrop As Boolean
  overload: Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Tenancy.Domain.Models
  commentId: N:Mix.Tenancy.Domain.Models
  name: Mix.Tenancy.Domain.Models
  nameWithType: Mix.Tenancy.Domain.Models
  fullName: Mix.Tenancy.Domain.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts*
  commentId: Overload:Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts
  name: ArrayAccepts
  nameWithType: UploadConfigurations.ArrayAccepts
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.ArrayAccepts
- uid: Newtonsoft.Json.Linq.JArray
  commentId: T:Newtonsoft.Json.Linq.JArray
  parent: Newtonsoft.Json.Linq
  isExternal: true
  name: JArray
  nameWithType: JArray
  fullName: Newtonsoft.Json.Linq.JArray
- uid: Newtonsoft.Json.Linq
  commentId: N:Newtonsoft.Json.Linq
  isExternal: true
  name: Newtonsoft.Json.Linq
  nameWithType: Newtonsoft.Json.Linq
  fullName: Newtonsoft.Json.Linq
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts*
  commentId: Overload:Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts
  name: Accepts
  nameWithType: UploadConfigurations.Accepts
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.Accepts
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.Width*
  commentId: Overload:Mix.Tenancy.Domain.Models.UploadConfigurations.Width
  name: Width
  nameWithType: UploadConfigurations.Width
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.Width
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Int32>
  nameWithType: Nullable<Int32>
  fullName: System.Nullable<System.Int32>
  nameWithType.vb: Nullable(Of Int32)
  fullName.vb: System.Nullable(Of System.Int32)
  name.vb: Nullable(Of Int32)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.Height*
  commentId: Overload:Mix.Tenancy.Domain.Models.UploadConfigurations.Height
  name: Height
  nameWithType: UploadConfigurations.Height
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.Height
- uid: Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop*
  commentId: Overload:Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop
  name: IsCrop
  nameWithType: UploadConfigurations.IsCrop
  fullName: Mix.Tenancy.Domain.Models.UploadConfigurations.IsCrop
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
