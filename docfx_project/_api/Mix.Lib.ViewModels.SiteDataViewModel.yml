### YamlMime:ManagedReference
items:
- uid: Mix.Lib.ViewModels.SiteDataViewModel
  commentId: T:Mix.Lib.ViewModels.SiteDataViewModel
  id: SiteDataViewModel
  parent: Mix.Lib.ViewModels
  children:
  - Mix.Lib.ViewModels.SiteDataViewModel.#ctor
  - Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents
  - Mix.Lib.ViewModels.SiteDataViewModel.Configurations
  - Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy
  - Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations
  - Mix.Lib.ViewModels.SiteDataViewModel.DataContents
  - Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues
  - Mix.Lib.ViewModels.SiteDataViewModel.Datas
  - Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents
  - Mix.Lib.ViewModels.SiteDataViewModel.Languages
  - Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns
  - Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases
  - Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases
  - Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents
  - Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas
  - Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts
  - Mix.Lib.ViewModels.SiteDataViewModel.Modules
  - Mix.Lib.ViewModels.SiteDataViewModel.PageContents
  - Mix.Lib.ViewModels.SiteDataViewModel.PageModules
  - Mix.Lib.ViewModels.SiteDataViewModel.PagePosts
  - Mix.Lib.ViewModels.SiteDataViewModel.Pages
  - Mix.Lib.ViewModels.SiteDataViewModel.PostContents
  - Mix.Lib.ViewModels.SiteDataViewModel.Posts
  - Mix.Lib.ViewModels.SiteDataViewModel.Specificulture
  - Mix.Lib.ViewModels.SiteDataViewModel.Templates
  - Mix.Lib.ViewModels.SiteDataViewModel.ThemeId
  - Mix.Lib.ViewModels.SiteDataViewModel.ThemeName
  - Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName
  langs:
  - csharp
  - vb
  name: SiteDataViewModel
  nameWithType: SiteDataViewModel
  fullName: Mix.Lib.ViewModels.SiteDataViewModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SiteDataViewModel
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public class SiteDataViewModel
    content.vb: Public Class SiteDataViewModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy
  id: CreatedBy
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: CreatedBy
  nameWithType: SiteDataViewModel.CreatedBy
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: CreatedBy
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string CreatedBy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CreatedBy As String
  overload: Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Specificulture
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Specificulture
  id: Specificulture
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: SiteDataViewModel.Specificulture
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Specificulture
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 6
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ThemeName
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ThemeName
  id: ThemeName
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ThemeName
  nameWithType: SiteDataViewModel.ThemeName
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ThemeName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThemeName
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 8
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string ThemeName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThemeName As String
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ThemeName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName
  id: ThemeSystemName
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ThemeSystemName
  nameWithType: SiteDataViewModel.ThemeSystemName
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThemeSystemName
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public string ThemeSystemName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ThemeSystemName As String
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ThemeId
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ThemeId
  id: ThemeId
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ThemeId
  nameWithType: SiteDataViewModel.ThemeId
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ThemeId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ThemeId
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public int ThemeId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ThemeId As Integer
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ThemeId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Posts
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Posts
  id: Posts
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Posts
  nameWithType: SiteDataViewModel.Posts
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Posts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Posts
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixPost> Posts { get; set; }
    parameters: []
    return:
      type: List{MixPost}
    content.vb: Public Property Posts As List(Of MixPost)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Posts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Pages
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Pages
  id: Pages
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Pages
  nameWithType: SiteDataViewModel.Pages
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Pages
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Pages
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixPage> Pages { get; set; }
    parameters: []
    return:
      type: List{MixPage}
    content.vb: Public Property Pages As List(Of MixPage)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Pages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Modules
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Modules
  id: Modules
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Modules
  nameWithType: SiteDataViewModel.Modules
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Modules
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Modules
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixModule> Modules { get; set; }
    parameters: []
    return:
      type: List{MixModule}
    content.vb: Public Property Modules As List(Of MixModule)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Modules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases
  id: MixDatabases
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatabases
  nameWithType: SiteDataViewModel.MixDatabases
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabases
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 22
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDatabase> MixDatabases { get; set; }
    parameters: []
    return:
      type: List{MixDatabase}
    content.vb: Public Property MixDatabases As List(Of MixDatabase)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Templates
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Templates
  id: Templates
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Templates
  nameWithType: SiteDataViewModel.Templates
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Templates
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Templates
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixTemplate> Templates { get; set; }
    parameters: []
    return:
      type: List{MixTemplate}
    content.vb: Public Property Templates As List(Of MixTemplate)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Templates*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Configurations
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Configurations
  id: Configurations
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Configurations
  nameWithType: SiteDataViewModel.Configurations
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Configurations
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Configurations
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixConfiguration> Configurations { get; set; }
    parameters: []
    return:
      type: List{MixConfiguration}
    content.vb: Public Property Configurations As List(Of MixConfiguration)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Configurations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Languages
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Languages
  id: Languages
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Languages
  nameWithType: SiteDataViewModel.Languages
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Languages
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Languages
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixLanguage> Languages { get; set; }
    parameters: []
    return:
      type: List{MixLanguage}
    content.vb: Public Property Languages As List(Of MixLanguage)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Languages*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns
  id: MixDatabaseColumns
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: MixDatabaseColumns
  nameWithType: SiteDataViewModel.MixDatabaseColumns
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixDatabaseColumns
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 34
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDatabaseColumn> MixDatabaseColumns { get; set; }
    parameters: []
    return:
      type: List{MixDatabaseColumn}
    content.vb: Public Property MixDatabaseColumns As List(Of MixDatabaseColumn)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PostContents
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.PostContents
  id: PostContents
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: PostContents
  nameWithType: SiteDataViewModel.PostContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PostContents
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PostContents
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 36
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixPostContent> PostContents { get; set; }
    parameters: []
    return:
      type: List{MixPostContent}
    content.vb: Public Property PostContents As List(Of MixPostContent)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.PostContents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PageContents
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.PageContents
  id: PageContents
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: PageContents
  nameWithType: SiteDataViewModel.PageContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PageContents
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageContents
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 38
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixPageContent> PageContents { get; set; }
    parameters: []
    return:
      type: List{MixPageContent}
    content.vb: Public Property PageContents As List(Of MixPageContent)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.PageContents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents
  id: ModuleContents
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ModuleContents
  nameWithType: SiteDataViewModel.ModuleContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleContents
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 40
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixModuleContent> ModuleContents { get; set; }
    parameters: []
    return:
      type: List{MixModuleContent}
    content.vb: Public Property ModuleContents As List(Of MixModuleContent)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents
  id: ConfigurationContents
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ConfigurationContents
  nameWithType: SiteDataViewModel.ConfigurationContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConfigurationContents
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 42
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixConfigurationContent> ConfigurationContents { get; set; }
    parameters: []
    return:
      type: List{MixConfigurationContent}
    content.vb: Public Property ConfigurationContents As List(Of MixConfigurationContent)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents
  id: LanguageContents
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: LanguageContents
  nameWithType: SiteDataViewModel.LanguageContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: LanguageContents
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 44
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixLanguageContent> LanguageContents { get; set; }
    parameters: []
    return:
      type: List{MixLanguageContent}
    content.vb: Public Property LanguageContents As List(Of MixLanguageContent)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Datas
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.Datas
  id: Datas
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: Datas
  nameWithType: SiteDataViewModel.Datas
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Datas
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Datas
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 46
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixData> Datas { get; set; }
    parameters: []
    return:
      type: List{MixData}
    content.vb: Public Property Datas As List(Of MixData)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.Datas*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.DataContents
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.DataContents
  id: DataContents
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: DataContents
  nameWithType: SiteDataViewModel.DataContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.DataContents
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataContents
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 48
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDataContent> DataContents { get; set; }
    parameters: []
    return:
      type: List{MixDataContent}
    content.vb: Public Property DataContents As List(Of MixDataContent)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.DataContents*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues
  id: DataContentValues
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: DataContentValues
  nameWithType: SiteDataViewModel.DataContentValues
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataContentValues
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 50
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDataContentValue> DataContentValues { get; set; }
    parameters: []
    return:
      type: List{MixDataContentValue}
    content.vb: Public Property DataContentValues As List(Of MixDataContentValue)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations
  id: DataContentAssociations
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: DataContentAssociations
  nameWithType: SiteDataViewModel.DataContentAssociations
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DataContentAssociations
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 52
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixDataContentAssociation> DataContentAssociations { get; set; }
    parameters: []
    return:
      type: List{MixDataContentAssociation}
    content.vb: Public Property DataContentAssociations As List(Of MixDataContentAssociation)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas
  id: ModuleDatas
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ModuleDatas
  nameWithType: SiteDataViewModel.ModuleDatas
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModuleDatas
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 54
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixModuleData> ModuleDatas { get; set; }
    parameters: []
    return:
      type: List{MixModuleData}
    content.vb: Public Property ModuleDatas As List(Of MixModuleData)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PagePosts
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.PagePosts
  id: PagePosts
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: PagePosts
  nameWithType: SiteDataViewModel.PagePosts
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PagePosts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PagePosts
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 56
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixPagePostAssociation> PagePosts { get; set; }
    parameters: []
    return:
      type: List{MixPagePostAssociation}
    content.vb: Public Property PagePosts As List(Of MixPagePostAssociation)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.PagePosts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PageModules
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.PageModules
  id: PageModules
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: PageModules
  nameWithType: SiteDataViewModel.PageModules
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PageModules
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: PageModules
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 58
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixPageModuleAssociation> PageModules { get; set; }
    parameters: []
    return:
      type: List{MixPageModuleAssociation}
    content.vb: Public Property PageModules As List(Of MixPageModuleAssociation)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.PageModules*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts
  id: ModulePosts
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: ModulePosts
  nameWithType: SiteDataViewModel.ModulePosts
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ModulePosts
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 60
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixModulePostAssociation> ModulePosts { get; set; }
    parameters: []
    return:
      type: List{MixModulePostAssociation}
    content.vb: Public Property ModulePosts As List(Of MixModulePostAssociation)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases
  commentId: P:Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases
  id: MixUrlAliases
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: MixUrlAliases
  nameWithType: SiteDataViewModel.MixUrlAliases
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases
  type: Property
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixUrlAliases
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 62
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public List<MixUrlAlias> MixUrlAliases { get; set; }
    parameters: []
    return:
      type: List{MixUrlAlias}
    content.vb: Public Property MixUrlAliases As List(Of MixUrlAlias)
  overload: Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.ViewModels.SiteDataViewModel.#ctor
  commentId: M:Mix.Lib.ViewModels.SiteDataViewModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.ViewModels.SiteDataViewModel
  langs:
  - csharp
  - vb
  name: SiteDataViewModel()
  nameWithType: SiteDataViewModel.SiteDataViewModel()
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.SiteDataViewModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/ViewModels/SiteDataViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/ViewModels/SiteDataViewModel.cs
    startLine: 66
  assemblies:
  - mix.library
  namespace: Mix.Lib.ViewModels
  syntax:
    content: public SiteDataViewModel()
    content.vb: Public Sub New
  overload: Mix.Lib.ViewModels.SiteDataViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: Mix.Lib.ViewModels
  commentId: N:Mix.Lib.ViewModels
  name: Mix.Lib.ViewModels
  nameWithType: Mix.Lib.ViewModels
  fullName: Mix.Lib.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy
  name: CreatedBy
  nameWithType: SiteDataViewModel.CreatedBy
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.CreatedBy
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Specificulture*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Specificulture
  name: Specificulture
  nameWithType: SiteDataViewModel.Specificulture
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Specificulture
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ThemeName*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ThemeName
  name: ThemeName
  nameWithType: SiteDataViewModel.ThemeName
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ThemeName
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName
  name: ThemeSystemName
  nameWithType: SiteDataViewModel.ThemeSystemName
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ThemeSystemName
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ThemeId*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ThemeId
  name: ThemeId
  nameWithType: SiteDataViewModel.ThemeId
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ThemeId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Posts*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Posts
  name: Posts
  nameWithType: SiteDataViewModel.Posts
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Posts
- uid: List{MixPost}
  commentId: '!:List{MixPost}'
  definition: List`1
  name: List<MixPost>
  nameWithType: List<MixPost>
  fullName: List<MixPost>
  nameWithType.vb: List(Of MixPost)
  fullName.vb: List(Of MixPost)
  name.vb: List(Of MixPost)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: MixPost
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPost
    name: MixPost
    nameWithType: MixPost
    fullName: MixPost
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Pages*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Pages
  name: Pages
  nameWithType: SiteDataViewModel.Pages
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Pages
- uid: List{MixPage}
  commentId: '!:List{MixPage}'
  definition: List`1
  name: List<MixPage>
  nameWithType: List<MixPage>
  fullName: List<MixPage>
  nameWithType.vb: List(Of MixPage)
  fullName.vb: List(Of MixPage)
  name.vb: List(Of MixPage)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: MixPage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPage
    name: MixPage
    nameWithType: MixPage
    fullName: MixPage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Modules*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Modules
  name: Modules
  nameWithType: SiteDataViewModel.Modules
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Modules
- uid: List{MixModule}
  commentId: '!:List{MixModule}'
  definition: List`1
  name: List<MixModule>
  nameWithType: List<MixModule>
  fullName: List<MixModule>
  nameWithType.vb: List(Of MixModule)
  fullName.vb: List(Of MixModule)
  name.vb: List(Of MixModule)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: MixModule
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModule
    name: MixModule
    nameWithType: MixModule
    fullName: MixModule
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases
  name: MixDatabases
  nameWithType: SiteDataViewModel.MixDatabases
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabases
- uid: List{MixDatabase}
  commentId: '!:List{MixDatabase}'
  definition: List`1
  name: List<MixDatabase>
  nameWithType: List<MixDatabase>
  fullName: List<MixDatabase>
  nameWithType.vb: List(Of MixDatabase)
  fullName.vb: List(Of MixDatabase)
  name.vb: List(Of MixDatabase)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: MixDatabase
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabase
    name: MixDatabase
    nameWithType: MixDatabase
    fullName: MixDatabase
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Templates*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Templates
  name: Templates
  nameWithType: SiteDataViewModel.Templates
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Templates
- uid: List{MixTemplate}
  commentId: '!:List{MixTemplate}'
  definition: List`1
  name: List<MixTemplate>
  nameWithType: List<MixTemplate>
  fullName: List<MixTemplate>
  nameWithType.vb: List(Of MixTemplate)
  fullName.vb: List(Of MixTemplate)
  name.vb: List(Of MixTemplate)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: MixTemplate
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixTemplate
    name: MixTemplate
    nameWithType: MixTemplate
    fullName: MixTemplate
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Configurations*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Configurations
  name: Configurations
  nameWithType: SiteDataViewModel.Configurations
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Configurations
- uid: List{MixConfiguration}
  commentId: '!:List{MixConfiguration}'
  definition: List`1
  name: List<MixConfiguration>
  nameWithType: List<MixConfiguration>
  fullName: List<MixConfiguration>
  nameWithType.vb: List(Of MixConfiguration)
  fullName.vb: List(Of MixConfiguration)
  name.vb: List(Of MixConfiguration)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixConfiguration
    name: MixConfiguration
    nameWithType: MixConfiguration
    fullName: MixConfiguration
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixConfiguration
    name: MixConfiguration
    nameWithType: MixConfiguration
    fullName: MixConfiguration
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Languages*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Languages
  name: Languages
  nameWithType: SiteDataViewModel.Languages
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Languages
- uid: List{MixLanguage}
  commentId: '!:List{MixLanguage}'
  definition: List`1
  name: List<MixLanguage>
  nameWithType: List<MixLanguage>
  fullName: List<MixLanguage>
  nameWithType.vb: List(Of MixLanguage)
  fullName.vb: List(Of MixLanguage)
  name.vb: List(Of MixLanguage)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixLanguage
    name: MixLanguage
    nameWithType: MixLanguage
    fullName: MixLanguage
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixLanguage
    name: MixLanguage
    nameWithType: MixLanguage
    fullName: MixLanguage
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns
  name: MixDatabaseColumns
  nameWithType: SiteDataViewModel.MixDatabaseColumns
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.MixDatabaseColumns
- uid: List{MixDatabaseColumn}
  commentId: '!:List{MixDatabaseColumn}'
  definition: List`1
  name: List<MixDatabaseColumn>
  nameWithType: List<MixDatabaseColumn>
  fullName: List<MixDatabaseColumn>
  nameWithType.vb: List(Of MixDatabaseColumn)
  fullName.vb: List(Of MixDatabaseColumn)
  name.vb: List(Of MixDatabaseColumn)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDatabaseColumn
    name: MixDatabaseColumn
    nameWithType: MixDatabaseColumn
    fullName: MixDatabaseColumn
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDatabaseColumn
    name: MixDatabaseColumn
    nameWithType: MixDatabaseColumn
    fullName: MixDatabaseColumn
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PostContents*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.PostContents
  name: PostContents
  nameWithType: SiteDataViewModel.PostContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PostContents
- uid: List{MixPostContent}
  commentId: '!:List{MixPostContent}'
  definition: List`1
  name: List<MixPostContent>
  nameWithType: List<MixPostContent>
  fullName: List<MixPostContent>
  nameWithType.vb: List(Of MixPostContent)
  fullName.vb: List(Of MixPostContent)
  name.vb: List(Of MixPostContent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPostContent
    name: MixPostContent
    nameWithType: MixPostContent
    fullName: MixPostContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPostContent
    name: MixPostContent
    nameWithType: MixPostContent
    fullName: MixPostContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PageContents*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.PageContents
  name: PageContents
  nameWithType: SiteDataViewModel.PageContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PageContents
- uid: List{MixPageContent}
  commentId: '!:List{MixPageContent}'
  definition: List`1
  name: List<MixPageContent>
  nameWithType: List<MixPageContent>
  fullName: List<MixPageContent>
  nameWithType.vb: List(Of MixPageContent)
  fullName.vb: List(Of MixPageContent)
  name.vb: List(Of MixPageContent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPageContent
    name: MixPageContent
    nameWithType: MixPageContent
    fullName: MixPageContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPageContent
    name: MixPageContent
    nameWithType: MixPageContent
    fullName: MixPageContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents
  name: ModuleContents
  nameWithType: SiteDataViewModel.ModuleContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ModuleContents
- uid: List{MixModuleContent}
  commentId: '!:List{MixModuleContent}'
  definition: List`1
  name: List<MixModuleContent>
  nameWithType: List<MixModuleContent>
  fullName: List<MixModuleContent>
  nameWithType.vb: List(Of MixModuleContent)
  fullName.vb: List(Of MixModuleContent)
  name.vb: List(Of MixModuleContent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModuleContent
    name: MixModuleContent
    nameWithType: MixModuleContent
    fullName: MixModuleContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModuleContent
    name: MixModuleContent
    nameWithType: MixModuleContent
    fullName: MixModuleContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents
  name: ConfigurationContents
  nameWithType: SiteDataViewModel.ConfigurationContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ConfigurationContents
- uid: List{MixConfigurationContent}
  commentId: '!:List{MixConfigurationContent}'
  definition: List`1
  name: List<MixConfigurationContent>
  nameWithType: List<MixConfigurationContent>
  fullName: List<MixConfigurationContent>
  nameWithType.vb: List(Of MixConfigurationContent)
  fullName.vb: List(Of MixConfigurationContent)
  name.vb: List(Of MixConfigurationContent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixConfigurationContent
    name: MixConfigurationContent
    nameWithType: MixConfigurationContent
    fullName: MixConfigurationContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixConfigurationContent
    name: MixConfigurationContent
    nameWithType: MixConfigurationContent
    fullName: MixConfigurationContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents
  name: LanguageContents
  nameWithType: SiteDataViewModel.LanguageContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.LanguageContents
- uid: List{MixLanguageContent}
  commentId: '!:List{MixLanguageContent}'
  definition: List`1
  name: List<MixLanguageContent>
  nameWithType: List<MixLanguageContent>
  fullName: List<MixLanguageContent>
  nameWithType.vb: List(Of MixLanguageContent)
  fullName.vb: List(Of MixLanguageContent)
  name.vb: List(Of MixLanguageContent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixLanguageContent
    name: MixLanguageContent
    nameWithType: MixLanguageContent
    fullName: MixLanguageContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixLanguageContent
    name: MixLanguageContent
    nameWithType: MixLanguageContent
    fullName: MixLanguageContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.Datas*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.Datas
  name: Datas
  nameWithType: SiteDataViewModel.Datas
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.Datas
- uid: List{MixData}
  commentId: '!:List{MixData}'
  definition: List`1
  name: List<MixData>
  nameWithType: List<MixData>
  fullName: List<MixData>
  nameWithType.vb: List(Of MixData)
  fullName.vb: List(Of MixData)
  name.vb: List(Of MixData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixData
    name: MixData
    nameWithType: MixData
    fullName: MixData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixData
    name: MixData
    nameWithType: MixData
    fullName: MixData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.DataContents*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.DataContents
  name: DataContents
  nameWithType: SiteDataViewModel.DataContents
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.DataContents
- uid: List{MixDataContent}
  commentId: '!:List{MixDataContent}'
  definition: List`1
  name: List<MixDataContent>
  nameWithType: List<MixDataContent>
  fullName: List<MixDataContent>
  nameWithType.vb: List(Of MixDataContent)
  fullName.vb: List(Of MixDataContent)
  name.vb: List(Of MixDataContent)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDataContent
    name: MixDataContent
    nameWithType: MixDataContent
    fullName: MixDataContent
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDataContent
    name: MixDataContent
    nameWithType: MixDataContent
    fullName: MixDataContent
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues
  name: DataContentValues
  nameWithType: SiteDataViewModel.DataContentValues
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.DataContentValues
- uid: List{MixDataContentValue}
  commentId: '!:List{MixDataContentValue}'
  definition: List`1
  name: List<MixDataContentValue>
  nameWithType: List<MixDataContentValue>
  fullName: List<MixDataContentValue>
  nameWithType.vb: List(Of MixDataContentValue)
  fullName.vb: List(Of MixDataContentValue)
  name.vb: List(Of MixDataContentValue)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDataContentValue
    name: MixDataContentValue
    nameWithType: MixDataContentValue
    fullName: MixDataContentValue
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDataContentValue
    name: MixDataContentValue
    nameWithType: MixDataContentValue
    fullName: MixDataContentValue
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations
  name: DataContentAssociations
  nameWithType: SiteDataViewModel.DataContentAssociations
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.DataContentAssociations
- uid: List{MixDataContentAssociation}
  commentId: '!:List{MixDataContentAssociation}'
  definition: List`1
  name: List<MixDataContentAssociation>
  nameWithType: List<MixDataContentAssociation>
  fullName: List<MixDataContentAssociation>
  nameWithType.vb: List(Of MixDataContentAssociation)
  fullName.vb: List(Of MixDataContentAssociation)
  name.vb: List(Of MixDataContentAssociation)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixDataContentAssociation
    name: MixDataContentAssociation
    nameWithType: MixDataContentAssociation
    fullName: MixDataContentAssociation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixDataContentAssociation
    name: MixDataContentAssociation
    nameWithType: MixDataContentAssociation
    fullName: MixDataContentAssociation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas
  name: ModuleDatas
  nameWithType: SiteDataViewModel.ModuleDatas
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ModuleDatas
- uid: List{MixModuleData}
  commentId: '!:List{MixModuleData}'
  definition: List`1
  name: List<MixModuleData>
  nameWithType: List<MixModuleData>
  fullName: List<MixModuleData>
  nameWithType.vb: List(Of MixModuleData)
  fullName.vb: List(Of MixModuleData)
  name.vb: List(Of MixModuleData)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: MixModuleData
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModuleData
    name: MixModuleData
    nameWithType: MixModuleData
    fullName: MixModuleData
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PagePosts*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.PagePosts
  name: PagePosts
  nameWithType: SiteDataViewModel.PagePosts
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PagePosts
- uid: List{MixPagePostAssociation}
  commentId: '!:List{MixPagePostAssociation}'
  definition: List`1
  name: List<MixPagePostAssociation>
  nameWithType: List<MixPagePostAssociation>
  fullName: List<MixPagePostAssociation>
  nameWithType.vb: List(Of MixPagePostAssociation)
  fullName.vb: List(Of MixPagePostAssociation)
  name.vb: List(Of MixPagePostAssociation)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPagePostAssociation
    name: MixPagePostAssociation
    nameWithType: MixPagePostAssociation
    fullName: MixPagePostAssociation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPagePostAssociation
    name: MixPagePostAssociation
    nameWithType: MixPagePostAssociation
    fullName: MixPagePostAssociation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.PageModules*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.PageModules
  name: PageModules
  nameWithType: SiteDataViewModel.PageModules
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.PageModules
- uid: List{MixPageModuleAssociation}
  commentId: '!:List{MixPageModuleAssociation}'
  definition: List`1
  name: List<MixPageModuleAssociation>
  nameWithType: List<MixPageModuleAssociation>
  fullName: List<MixPageModuleAssociation>
  nameWithType.vb: List(Of MixPageModuleAssociation)
  fullName.vb: List(Of MixPageModuleAssociation)
  name.vb: List(Of MixPageModuleAssociation)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixPageModuleAssociation
    name: MixPageModuleAssociation
    nameWithType: MixPageModuleAssociation
    fullName: MixPageModuleAssociation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixPageModuleAssociation
    name: MixPageModuleAssociation
    nameWithType: MixPageModuleAssociation
    fullName: MixPageModuleAssociation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts
  name: ModulePosts
  nameWithType: SiteDataViewModel.ModulePosts
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.ModulePosts
- uid: List{MixModulePostAssociation}
  commentId: '!:List{MixModulePostAssociation}'
  definition: List`1
  name: List<MixModulePostAssociation>
  nameWithType: List<MixModulePostAssociation>
  fullName: List<MixModulePostAssociation>
  nameWithType.vb: List(Of MixModulePostAssociation)
  fullName.vb: List(Of MixModulePostAssociation)
  name.vb: List(Of MixModulePostAssociation)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixModulePostAssociation
    name: MixModulePostAssociation
    nameWithType: MixModulePostAssociation
    fullName: MixModulePostAssociation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixModulePostAssociation
    name: MixModulePostAssociation
    nameWithType: MixModulePostAssociation
    fullName: MixModulePostAssociation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases
  name: MixUrlAliases
  nameWithType: SiteDataViewModel.MixUrlAliases
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.MixUrlAliases
- uid: List{MixUrlAlias}
  commentId: '!:List{MixUrlAlias}'
  definition: List`1
  name: List<MixUrlAlias>
  nameWithType: List<MixUrlAlias>
  fullName: List<MixUrlAlias>
  nameWithType.vb: List(Of MixUrlAlias)
  fullName.vb: List(Of MixUrlAlias)
  name.vb: List(Of MixUrlAlias)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: MixUrlAlias
    name: MixUrlAlias
    nameWithType: MixUrlAlias
    fullName: MixUrlAlias
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: MixUrlAlias
    name: MixUrlAlias
    nameWithType: MixUrlAlias
    fullName: MixUrlAlias
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.ViewModels.SiteDataViewModel.#ctor*
  commentId: Overload:Mix.Lib.ViewModels.SiteDataViewModel.#ctor
  name: SiteDataViewModel
  nameWithType: SiteDataViewModel.SiteDataViewModel
  fullName: Mix.Lib.ViewModels.SiteDataViewModel.SiteDataViewModel
