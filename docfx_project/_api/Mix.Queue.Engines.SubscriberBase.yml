### YamlMime:ManagedReference
items:
- uid: Mix.Queue.Engines.SubscriberBase
  commentId: T:Mix.Queue.Engines.SubscriberBase
  id: SubscriberBase
  parent: Mix.Queue.Engines
  children:
  - Mix.Queue.Engines.SubscriberBase.#ctor(System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel})
  - Mix.Queue.Engines.SubscriberBase.Handler(Mix.Queue.Models.MessageQueueModel)
  - Mix.Queue.Engines.SubscriberBase.MesageHandler(Mix.Queue.Models.MessageQueueModel)
  - Mix.Queue.Engines.SubscriberBase.StartAsync(System.Threading.CancellationToken)
  - Mix.Queue.Engines.SubscriberBase.StopAsync(System.Threading.CancellationToken)
  langs:
  - csharp
  - vb
  name: SubscriberBase
  nameWithType: SubscriberBase
  fullName: Mix.Queue.Engines.SubscriberBase
  type: Class
  source:
    remote:
      path: src/platform/mix.queue/Engines/SubscriberBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SubscriberBase
    path: ../../mix.core/src/platform/mix.queue/Engines/SubscriberBase.cs
    startLine: 13
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Engines
  syntax:
    content: 'public abstract class SubscriberBase : IHostedService'
    content.vb: >-
      Public MustInherit Class SubscriberBase
          Implements IHostedService
  inheritance:
  - System.Object
  derivedClasses:
  - Mix.Lib.Subscribers.MixBackgrouTaskSubscriber
  - Mixcore.Domain.Subscribers.DomainSubscriber
  - Mixcore.Domain.Subscribers.PageContentSubscriber
  - Mixcore.Domain.Subscribers.TemplateSubscriber
  - Mixcore.Domain.Subscribers.TenantSubscriber
  - Mixcore.Domain.Subscribers.ThemeSubscriber
  implements:
  - Microsoft.Extensions.Hosting.IHostedService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - abstract
  - class
  modifiers.vb:
  - Public
  - MustInherit
  - Class
- uid: Mix.Queue.Engines.SubscriberBase.#ctor(System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel})
  commentId: M:Mix.Queue.Engines.SubscriberBase.#ctor(System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel})
  id: '#ctor(System.String,System.String,Microsoft.Extensions.Configuration.IConfiguration,Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel})'
  parent: Mix.Queue.Engines.SubscriberBase
  langs:
  - csharp
  - vb
  name: SubscriberBase(String, String, IConfiguration, MixMemoryMessageQueue<MessageQueueModel>)
  nameWithType: SubscriberBase.SubscriberBase(String, String, IConfiguration, MixMemoryMessageQueue<MessageQueueModel>)
  fullName: Mix.Queue.Engines.SubscriberBase.SubscriberBase(System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue<Mix.Queue.Models.MessageQueueModel>)
  type: Constructor
  source:
    remote:
      path: src/platform/mix.queue/Engines/SubscriberBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.queue/Engines/SubscriberBase.cs
    startLine: 20
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Engines
  syntax:
    content: public SubscriberBase(string topicId, string moduleName, IConfiguration configuration, MixMemoryMessageQueue<MessageQueueModel> queueService)
    parameters:
    - id: topicId
      type: System.String
    - id: moduleName
      type: System.String
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
    - id: queueService
      type: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel}
    content.vb: Public Sub New(topicId As String, moduleName As String, configuration As IConfiguration, queueService As MixMemoryMessageQueue(Of MessageQueueModel))
  overload: Mix.Queue.Engines.SubscriberBase.#ctor*
  nameWithType.vb: SubscriberBase.SubscriberBase(String, String, IConfiguration, MixMemoryMessageQueue(Of MessageQueueModel))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Queue.Engines.SubscriberBase.SubscriberBase(System.String, System.String, Microsoft.Extensions.Configuration.IConfiguration, Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue(Of Mix.Queue.Models.MessageQueueModel))
  name.vb: SubscriberBase(String, String, IConfiguration, MixMemoryMessageQueue(Of MessageQueueModel))
- uid: Mix.Queue.Engines.SubscriberBase.StartAsync(System.Threading.CancellationToken)
  commentId: M:Mix.Queue.Engines.SubscriberBase.StartAsync(System.Threading.CancellationToken)
  id: StartAsync(System.Threading.CancellationToken)
  parent: Mix.Queue.Engines.SubscriberBase
  langs:
  - csharp
  - vb
  name: StartAsync(CancellationToken)
  nameWithType: SubscriberBase.StartAsync(CancellationToken)
  fullName: Mix.Queue.Engines.SubscriberBase.StartAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Engines/SubscriberBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StartAsync
    path: ../../mix.core/src/platform/mix.queue/Engines/SubscriberBase.cs
    startLine: 32
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Engines
  syntax:
    content: public Task StartAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StartAsync(cancellationToken As CancellationToken) As Task
  overload: Mix.Queue.Engines.SubscriberBase.StartAsync*
  implements:
  - Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Engines.SubscriberBase.StopAsync(System.Threading.CancellationToken)
  commentId: M:Mix.Queue.Engines.SubscriberBase.StopAsync(System.Threading.CancellationToken)
  id: StopAsync(System.Threading.CancellationToken)
  parent: Mix.Queue.Engines.SubscriberBase
  langs:
  - csharp
  - vb
  name: StopAsync(CancellationToken)
  nameWithType: SubscriberBase.StopAsync(CancellationToken)
  fullName: Mix.Queue.Engines.SubscriberBase.StopAsync(System.Threading.CancellationToken)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Engines/SubscriberBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: StopAsync
    path: ../../mix.core/src/platform/mix.queue/Engines/SubscriberBase.cs
    startLine: 45
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Engines
  syntax:
    content: public Task StopAsync(CancellationToken cancellationToken)
    parameters:
    - id: cancellationToken
      type: System.Threading.CancellationToken
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function StopAsync(cancellationToken As CancellationToken) As Task
  overload: Mix.Queue.Engines.SubscriberBase.StopAsync*
  implements:
  - Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Engines.SubscriberBase.MesageHandler(Mix.Queue.Models.MessageQueueModel)
  commentId: M:Mix.Queue.Engines.SubscriberBase.MesageHandler(Mix.Queue.Models.MessageQueueModel)
  id: MesageHandler(Mix.Queue.Models.MessageQueueModel)
  parent: Mix.Queue.Engines.SubscriberBase
  langs:
  - csharp
  - vb
  name: MesageHandler(MessageQueueModel)
  nameWithType: SubscriberBase.MesageHandler(MessageQueueModel)
  fullName: Mix.Queue.Engines.SubscriberBase.MesageHandler(Mix.Queue.Models.MessageQueueModel)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Engines/SubscriberBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MesageHandler
    path: ../../mix.core/src/platform/mix.queue/Engines/SubscriberBase.cs
    startLine: 88
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Engines
  syntax:
    content: public Task MesageHandler(MessageQueueModel data)
    parameters:
    - id: data
      type: Mix.Queue.Models.MessageQueueModel
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public Function MesageHandler(data As MessageQueueModel) As Task
  overload: Mix.Queue.Engines.SubscriberBase.MesageHandler*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Queue.Engines.SubscriberBase.Handler(Mix.Queue.Models.MessageQueueModel)
  commentId: M:Mix.Queue.Engines.SubscriberBase.Handler(Mix.Queue.Models.MessageQueueModel)
  id: Handler(Mix.Queue.Models.MessageQueueModel)
  parent: Mix.Queue.Engines.SubscriberBase
  langs:
  - csharp
  - vb
  name: Handler(MessageQueueModel)
  nameWithType: SubscriberBase.Handler(MessageQueueModel)
  fullName: Mix.Queue.Engines.SubscriberBase.Handler(Mix.Queue.Models.MessageQueueModel)
  type: Method
  source:
    remote:
      path: src/platform/mix.queue/Engines/SubscriberBase.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Handler
    path: ../../mix.core/src/platform/mix.queue/Engines/SubscriberBase.cs
    startLine: 105
  assemblies:
  - mix.queue
  namespace: Mix.Queue.Engines
  syntax:
    content: public abstract Task Handler(MessageQueueModel model)
    parameters:
    - id: model
      type: Mix.Queue.Models.MessageQueueModel
    return:
      type: System.Threading.Tasks.Task
    content.vb: Public MustOverride Function Handler(model As MessageQueueModel) As Task
  overload: Mix.Queue.Engines.SubscriberBase.Handler*
  modifiers.csharp:
  - public
  - abstract
  modifiers.vb:
  - Public
  - MustOverride
references:
- uid: Mix.Queue.Engines
  commentId: N:Mix.Queue.Engines
  name: Mix.Queue.Engines
  nameWithType: Mix.Queue.Engines
  fullName: Mix.Queue.Engines
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.Extensions.Hosting.IHostedService
  commentId: T:Microsoft.Extensions.Hosting.IHostedService
  parent: Microsoft.Extensions.Hosting
  isExternal: true
  name: IHostedService
  nameWithType: IHostedService
  fullName: Microsoft.Extensions.Hosting.IHostedService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Microsoft.Extensions.Hosting
  commentId: N:Microsoft.Extensions.Hosting
  isExternal: true
  name: Microsoft.Extensions.Hosting
  nameWithType: Microsoft.Extensions.Hosting
  fullName: Microsoft.Extensions.Hosting
- uid: Mix.Queue.Engines.SubscriberBase.#ctor*
  commentId: Overload:Mix.Queue.Engines.SubscriberBase.#ctor
  name: SubscriberBase
  nameWithType: SubscriberBase.SubscriberBase
  fullName: Mix.Queue.Engines.SubscriberBase.SubscriberBase
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel}
  commentId: T:Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue{Mix.Queue.Models.MessageQueueModel}
  parent: Mix.Queue.Engines.MixQueue
  definition: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
  name: MixMemoryMessageQueue<MessageQueueModel>
  nameWithType: MixMemoryMessageQueue<MessageQueueModel>
  fullName: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue<Mix.Queue.Models.MessageQueueModel>
  nameWithType.vb: MixMemoryMessageQueue(Of MessageQueueModel)
  fullName.vb: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue(Of Mix.Queue.Models.MessageQueueModel)
  name.vb: MixMemoryMessageQueue(Of MessageQueueModel)
  spec.csharp:
  - uid: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
    name: MixMemoryMessageQueue
    nameWithType: MixMemoryMessageQueue
    fullName: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
    name: MixMemoryMessageQueue
    nameWithType: MixMemoryMessageQueue
    fullName: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Queue.Models.MessageQueueModel
    name: MessageQueueModel
    nameWithType: MessageQueueModel
    fullName: Mix.Queue.Models.MessageQueueModel
  - name: )
    nameWithType: )
    fullName: )
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
- uid: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
  commentId: T:Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
  name: MixMemoryMessageQueue<T>
  nameWithType: MixMemoryMessageQueue<T>
  fullName: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue<T>
  nameWithType.vb: MixMemoryMessageQueue(Of T)
  fullName.vb: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue(Of T)
  name.vb: MixMemoryMessageQueue(Of T)
  spec.csharp:
  - uid: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
    name: MixMemoryMessageQueue
    nameWithType: MixMemoryMessageQueue
    fullName: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue`1
    name: MixMemoryMessageQueue
    nameWithType: MixMemoryMessageQueue
    fullName: Mix.Queue.Engines.MixQueue.MixMemoryMessageQueue
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Engines.MixQueue
  commentId: N:Mix.Queue.Engines.MixQueue
  name: Mix.Queue.Engines.MixQueue
  nameWithType: Mix.Queue.Engines.MixQueue
  fullName: Mix.Queue.Engines.MixQueue
- uid: Mix.Queue.Engines.SubscriberBase.StartAsync*
  commentId: Overload:Mix.Queue.Engines.SubscriberBase.StartAsync
  name: StartAsync
  nameWithType: SubscriberBase.StartAsync
  fullName: Mix.Queue.Engines.SubscriberBase.StartAsync
- uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.IHostedService
  isExternal: true
  name: StartAsync(CancellationToken)
  nameWithType: IHostedService.StartAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    nameWithType: IHostedService.StartAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StartAsync(System.Threading.CancellationToken)
    name: StartAsync
    nameWithType: IHostedService.StartAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StartAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.CancellationToken
  commentId: T:System.Threading.CancellationToken
  parent: System.Threading
  isExternal: true
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Threading.Tasks.Task
  commentId: T:System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Threading
  commentId: N:System.Threading
  isExternal: true
  name: System.Threading
  nameWithType: System.Threading
  fullName: System.Threading
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: Mix.Queue.Engines.SubscriberBase.StopAsync*
  commentId: Overload:Mix.Queue.Engines.SubscriberBase.StopAsync
  name: StopAsync
  nameWithType: SubscriberBase.StopAsync
  fullName: Mix.Queue.Engines.SubscriberBase.StopAsync
- uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  commentId: M:Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  parent: Microsoft.Extensions.Hosting.IHostedService
  isExternal: true
  name: StopAsync(CancellationToken)
  nameWithType: IHostedService.StopAsync(CancellationToken)
  fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
  spec.csharp:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    nameWithType: IHostedService.StopAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: Microsoft.Extensions.Hosting.IHostedService.StopAsync(System.Threading.CancellationToken)
    name: StopAsync
    nameWithType: IHostedService.StopAsync
    fullName: Microsoft.Extensions.Hosting.IHostedService.StopAsync
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: System.Threading.CancellationToken
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Queue.Engines.SubscriberBase.MesageHandler*
  commentId: Overload:Mix.Queue.Engines.SubscriberBase.MesageHandler
  name: MesageHandler
  nameWithType: SubscriberBase.MesageHandler
  fullName: Mix.Queue.Engines.SubscriberBase.MesageHandler
- uid: Mix.Queue.Models.MessageQueueModel
  commentId: T:Mix.Queue.Models.MessageQueueModel
  parent: Mix.Queue.Models
  name: MessageQueueModel
  nameWithType: MessageQueueModel
  fullName: Mix.Queue.Models.MessageQueueModel
- uid: Mix.Queue.Models
  commentId: N:Mix.Queue.Models
  name: Mix.Queue.Models
  nameWithType: Mix.Queue.Models
  fullName: Mix.Queue.Models
- uid: Mix.Queue.Engines.SubscriberBase.Handler*
  commentId: Overload:Mix.Queue.Engines.SubscriberBase.Handler
  name: Handler
  nameWithType: SubscriberBase.Handler
  fullName: Mix.Queue.Engines.SubscriberBase.Handler
