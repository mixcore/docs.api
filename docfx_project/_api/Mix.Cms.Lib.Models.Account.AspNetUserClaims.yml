### YamlMime:ManagedReference
items:
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  commentId: T:Mix.Cms.Lib.Models.Account.AspNetUserClaims
  id: AspNetUserClaims
  parent: Mix.Cms.Lib.Models.Account
  children:
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.User
  - Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId
  langs:
  - csharp
  - vb
  name: AspNetUserClaims
  nameWithType: AspNetUserClaims
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  type: Class
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: AspNetUserClaims
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 2
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public class AspNetUserClaims
    content.vb: Public Class AspNetUserClaims
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id
  id: Id
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: AspNetUserClaims.Id
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 4
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public int Id { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property Id As Integer
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId
  id: ApplicationUserId
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: ApplicationUserId
  nameWithType: AspNetUserClaims.ApplicationUserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ApplicationUserId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 5
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string ApplicationUserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ApplicationUserId As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType
  id: ClaimType
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: ClaimType
  nameWithType: AspNetUserClaims.ClaimType
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ClaimType
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 6
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string ClaimType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClaimType As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue
  id: ClaimValue
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: ClaimValue
  nameWithType: AspNetUserClaims.ClaimValue
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ClaimValue
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 7
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string ClaimValue { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ClaimValue As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId
  id: UserId
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: UserId
  nameWithType: AspNetUserClaims.UserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: UserId
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 8
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public string UserId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property UserId As String
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser
  id: ApplicationUser
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: ApplicationUser
  nameWithType: AspNetUserClaims.ApplicationUser
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ApplicationUser
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 10
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual AspNetUsers ApplicationUser { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Account.AspNetUsers
    content.vb: Public Overridable Property ApplicationUser As AspNetUsers
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.User
  commentId: P:Mix.Cms.Lib.Models.Account.AspNetUserClaims.User
  id: User
  parent: Mix.Cms.Lib.Models.Account.AspNetUserClaims
  langs:
  - csharp
  - vb
  name: User
  nameWithType: AspNetUserClaims.User
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.User
  type: Property
  source:
    remote:
      path: src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: User
    path: ../../mix.core/src/Mix.Cms.Lib/Models/Account/AspNetUserClaims.cs
    startLine: 11
  assemblies:
  - Mix.Cms.Lib
  namespace: Mix.Cms.Lib.Models.Account
  syntax:
    content: public virtual AspNetUsers User { get; set; }
    parameters: []
    return:
      type: Mix.Cms.Lib.Models.Account.AspNetUsers
    content.vb: Public Overridable Property User As AspNetUsers
  overload: Mix.Cms.Lib.Models.Account.AspNetUserClaims.User*
  modifiers.csharp:
  - public
  - virtual
  - get
  - set
  modifiers.vb:
  - Public
  - Overridable
references:
- uid: Mix.Cms.Lib.Models.Account
  commentId: N:Mix.Cms.Lib.Models.Account
  name: Mix.Cms.Lib.Models.Account
  nameWithType: Mix.Cms.Lib.Models.Account
  fullName: Mix.Cms.Lib.Models.Account
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id
  name: Id
  nameWithType: AspNetUserClaims.Id
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.Id
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId
  name: ApplicationUserId
  nameWithType: AspNetUserClaims.ApplicationUserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUserId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType
  name: ClaimType
  nameWithType: AspNetUserClaims.ClaimType
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimType
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue
  name: ClaimValue
  nameWithType: AspNetUserClaims.ClaimValue
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ClaimValue
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId
  name: UserId
  nameWithType: AspNetUserClaims.UserId
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.UserId
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser
  name: ApplicationUser
  nameWithType: AspNetUserClaims.ApplicationUser
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.ApplicationUser
- uid: Mix.Cms.Lib.Models.Account.AspNetUsers
  commentId: T:Mix.Cms.Lib.Models.Account.AspNetUsers
  parent: Mix.Cms.Lib.Models.Account
  name: AspNetUsers
  nameWithType: AspNetUsers
  fullName: Mix.Cms.Lib.Models.Account.AspNetUsers
- uid: Mix.Cms.Lib.Models.Account.AspNetUserClaims.User*
  commentId: Overload:Mix.Cms.Lib.Models.Account.AspNetUserClaims.User
  name: User
  nameWithType: AspNetUserClaims.User
  fullName: Mix.Cms.Lib.Models.Account.AspNetUserClaims.User
