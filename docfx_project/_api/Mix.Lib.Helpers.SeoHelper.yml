### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Helpers.SeoHelper
  commentId: T:Mix.Lib.Helpers.SeoHelper
  id: SeoHelper
  parent: Mix.Lib.Helpers
  children:
  - Mix.Lib.Helpers.SeoHelper.ConvertToUnSign(System.String)
  - Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters(System.String)
  - Mix.Lib.Helpers.SeoHelper.GetSEOString(System.String,System.Char)
  - Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen(System.String,System.Char)
  langs:
  - csharp
  - vb
  name: SeoHelper
  nameWithType: SeoHelper
  fullName: Mix.Lib.Helpers.SeoHelper
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Helpers/SEOHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SeoHelper
    path: ../../mix.core/src/platform/mix.library/Helpers/SEOHelper.cs
    startLine: 11
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  summary: "\nSEO Helper\n"
  example: []
  syntax:
    content: public static class SeoHelper
    content.vb: Public Module SeoHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters(System.String)
  commentId: M:Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters(System.String)
  id: DeleteSpecialCharaters(System.String)
  parent: Mix.Lib.Helpers.SeoHelper
  langs:
  - csharp
  - vb
  name: DeleteSpecialCharaters(String)
  nameWithType: SeoHelper.DeleteSpecialCharaters(String)
  fullName: Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/SEOHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: DeleteSpecialCharaters
    path: ../../mix.core/src/platform/mix.library/Helpers/SEOHelper.cs
    startLine: 19
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  summary: "\nDeletes the special charaters.\n"
  example: []
  syntax:
    content: public static string DeleteSpecialCharaters(string str)
    parameters:
    - id: str
      type: System.String
      description: The string.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function DeleteSpecialCharaters(str As String) As String
  overload: Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.SeoHelper.GetSEOString(System.String,System.Char)
  commentId: M:Mix.Lib.Helpers.SeoHelper.GetSEOString(System.String,System.Char)
  id: GetSEOString(System.String,System.Char)
  parent: Mix.Lib.Helpers.SeoHelper
  langs:
  - csharp
  - vb
  name: GetSEOString(String, Char)
  nameWithType: SeoHelper.GetSEOString(String, Char)
  fullName: Mix.Lib.Helpers.SeoHelper.GetSEOString(System.String, System.Char)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/SEOHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: GetSEOString
    path: ../../mix.core/src/platform/mix.library/Helpers/SEOHelper.cs
    startLine: 37
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  summary: "\nGets the seo string.\n"
  example: []
  syntax:
    content: public static string GetSEOString(string s, char replaceChar = '-')
    parameters:
    - id: s
      type: System.String
      description: The s.
    - id: replaceChar
      type: System.Char
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetSEOString(s As String, replaceChar As Char = "-"c) As String
  overload: Mix.Lib.Helpers.SeoHelper.GetSEOString*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.SeoHelper.ConvertToUnSign(System.String)
  commentId: M:Mix.Lib.Helpers.SeoHelper.ConvertToUnSign(System.String)
  id: ConvertToUnSign(System.String)
  parent: Mix.Lib.Helpers.SeoHelper
  langs:
  - csharp
  - vb
  name: ConvertToUnSign(String)
  nameWithType: SeoHelper.ConvertToUnSign(String)
  fullName: Mix.Lib.Helpers.SeoHelper.ConvertToUnSign(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/SEOHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConvertToUnSign
    path: ../../mix.core/src/platform/mix.library/Helpers/SEOHelper.cs
    startLine: 51
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  summary: "\nConverts to un sign.\n"
  example: []
  syntax:
    content: public static string ConvertToUnSign(string text)
    parameters:
    - id: text
      type: System.String
      description: The text.
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function ConvertToUnSign(text As String) As String
  overload: Mix.Lib.Helpers.SeoHelper.ConvertToUnSign*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen(System.String,System.Char)
  commentId: M:Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen(System.String,System.Char)
  id: WhiteSpaceToHyphen(System.String,System.Char)
  parent: Mix.Lib.Helpers.SeoHelper
  langs:
  - csharp
  - vb
  name: WhiteSpaceToHyphen(String, Char)
  nameWithType: SeoHelper.WhiteSpaceToHyphen(String, Char)
  fullName: Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen(System.String, System.Char)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Helpers/SEOHelper.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: WhiteSpaceToHyphen
    path: ../../mix.core/src/platform/mix.library/Helpers/SEOHelper.cs
    startLine: 96
  assemblies:
  - mix.library
  namespace: Mix.Lib.Helpers
  summary: "\nWhites the space to hyphen.\n"
  example: []
  syntax:
    content: public static string WhiteSpaceToHyphen(string str, char replaceChar = '-')
    parameters:
    - id: str
      type: System.String
      description: The string.
    - id: replaceChar
      type: System.Char
      description: ''
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function WhiteSpaceToHyphen(str As String, replaceChar As Char = "-"c) As String
  overload: Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: Mix.Lib.Helpers
  commentId: N:Mix.Lib.Helpers
  name: Mix.Lib.Helpers
  nameWithType: Mix.Lib.Helpers
  fullName: Mix.Lib.Helpers
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters*
  commentId: Overload:Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters
  name: DeleteSpecialCharaters
  nameWithType: SeoHelper.DeleteSpecialCharaters
  fullName: Mix.Lib.Helpers.SeoHelper.DeleteSpecialCharaters
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Helpers.SeoHelper.GetSEOString*
  commentId: Overload:Mix.Lib.Helpers.SeoHelper.GetSEOString
  name: GetSEOString
  nameWithType: SeoHelper.GetSEOString
  fullName: Mix.Lib.Helpers.SeoHelper.GetSEOString
- uid: System.Char
  commentId: T:System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: Mix.Lib.Helpers.SeoHelper.ConvertToUnSign*
  commentId: Overload:Mix.Lib.Helpers.SeoHelper.ConvertToUnSign
  name: ConvertToUnSign
  nameWithType: SeoHelper.ConvertToUnSign
  fullName: Mix.Lib.Helpers.SeoHelper.ConvertToUnSign
- uid: Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen*
  commentId: Overload:Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen
  name: WhiteSpaceToHyphen
  nameWithType: SeoHelper.WhiteSpaceToHyphen
  fullName: Mix.Lib.Helpers.SeoHelper.WhiteSpaceToHyphen
