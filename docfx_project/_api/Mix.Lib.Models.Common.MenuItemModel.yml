### YamlMime:ManagedReference
items:
- uid: Mix.Lib.Models.Common.MenuItemModel
  commentId: T:Mix.Lib.Models.Common.MenuItemModel
  id: MenuItemModel
  parent: Mix.Lib.Models.Common
  children:
  - Mix.Lib.Models.Common.MenuItemModel.#ctor
  - Mix.Lib.Models.Common.MenuItemModel.Classes
  - Mix.Lib.Models.Common.MenuItemModel.Description
  - Mix.Lib.Models.Common.MenuItemModel.Href
  - Mix.Lib.Models.Common.MenuItemModel.Icon
  - Mix.Lib.Models.Common.MenuItemModel.Id
  - Mix.Lib.Models.Common.MenuItemModel.IsActive
  - Mix.Lib.Models.Common.MenuItemModel.MenuItems
  - Mix.Lib.Models.Common.MenuItemModel.Obj
  - Mix.Lib.Models.Common.MenuItemModel.Property``1(System.String)
  - Mix.Lib.Models.Common.MenuItemModel.Specificulture
  - Mix.Lib.Models.Common.MenuItemModel.Target
  - Mix.Lib.Models.Common.MenuItemModel.TargetId
  - Mix.Lib.Models.Common.MenuItemModel.Title
  - Mix.Lib.Models.Common.MenuItemModel.Type
  - Mix.Lib.Models.Common.MenuItemModel.Uri
  langs:
  - csharp
  - vb
  name: MenuItemModel
  nameWithType: MenuItemModel
  fullName: Mix.Lib.Models.Common.MenuItemModel
  type: Class
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MenuItemModel
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 2
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public class MenuItemModel
    content.vb: Public Class MenuItemModel
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Lib.Models.Common.MenuItemModel.#ctor
  commentId: M:Mix.Lib.Models.Common.MenuItemModel.#ctor
  id: '#ctor'
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: MenuItemModel()
  nameWithType: MenuItemModel.MenuItemModel()
  fullName: Mix.Lib.Models.Common.MenuItemModel.MenuItemModel()
  type: Constructor
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 4
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public MenuItemModel()
    content.vb: Public Sub New
  overload: Mix.Lib.Models.Common.MenuItemModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Obj
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Obj
  id: Obj
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Obj
  nameWithType: MenuItemModel.Obj
  fullName: Mix.Lib.Models.Common.MenuItemModel.Obj
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Obj
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 10
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public JObject Obj { get; set; }
    parameters: []
    return:
      type: JObject
    content.vb: Public Property Obj As JObject
  overload: Mix.Lib.Models.Common.MenuItemModel.Obj*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Id
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Id
  id: Id
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: MenuItemModel.Id
  fullName: Mix.Lib.Models.Common.MenuItemModel.Id
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Id
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 12
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Specificulture
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Specificulture
  id: Specificulture
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Specificulture
  nameWithType: MenuItemModel.Specificulture
  fullName: Mix.Lib.Models.Common.MenuItemModel.Specificulture
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Specificulture
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 14
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Specificulture { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Specificulture As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Specificulture*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Title
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Title
  id: Title
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: MenuItemModel.Title
  fullName: Mix.Lib.Models.Common.MenuItemModel.Title
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Title
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 16
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Title*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Uri
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Uri
  id: Uri
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Uri
  nameWithType: MenuItemModel.Uri
  fullName: Mix.Lib.Models.Common.MenuItemModel.Uri
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Uri
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 18
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Uri { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Uri As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Uri*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Href
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Href
  id: Href
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Href
  nameWithType: MenuItemModel.Href
  fullName: Mix.Lib.Models.Common.MenuItemModel.Href
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Href
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 20
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Href { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Href As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Href*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: Mix.Lib.Models.Common.MenuItemModel.Icon
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Icon
  id: Icon
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Icon
  nameWithType: MenuItemModel.Icon
  fullName: Mix.Lib.Models.Common.MenuItemModel.Icon
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Icon
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 22
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Icon { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Icon As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Icon*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Type
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Type
  id: Type
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: MenuItemModel.Type
  fullName: Mix.Lib.Models.Common.MenuItemModel.Type
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Type
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 24
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public MixMenuItemType Type { get; set; }
    parameters: []
    return:
      type: MixMenuItemType
    content.vb: Public Property Type As MixMenuItemType
  overload: Mix.Lib.Models.Common.MenuItemModel.Type*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Target
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Target
  id: Target
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Target
  nameWithType: MenuItemModel.Target
  fullName: Mix.Lib.Models.Common.MenuItemModel.Target
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Target
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 26
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Target { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Target As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Target*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Classes
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Classes
  id: Classes
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Classes
  nameWithType: MenuItemModel.Classes
  fullName: Mix.Lib.Models.Common.MenuItemModel.Classes
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Classes
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 28
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Classes { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Classes As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Classes*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Description
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.Description
  id: Description
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: MenuItemModel.Description
  fullName: Mix.Lib.Models.Common.MenuItemModel.Description
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Description
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 30
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Description As String
  overload: Mix.Lib.Models.Common.MenuItemModel.Description*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.TargetId
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.TargetId
  id: TargetId
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: TargetId
  nameWithType: MenuItemModel.TargetId
  fullName: Mix.Lib.Models.Common.MenuItemModel.TargetId
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: TargetId
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 32
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public string TargetId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property TargetId As String
  overload: Mix.Lib.Models.Common.MenuItemModel.TargetId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.IsActive
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.IsActive
  id: IsActive
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: MenuItemModel.IsActive
  fullName: Mix.Lib.Models.Common.MenuItemModel.IsActive
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: IsActive
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 34
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public bool IsActive { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property IsActive As Boolean
  overload: Mix.Lib.Models.Common.MenuItemModel.IsActive*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.MenuItems
  commentId: P:Mix.Lib.Models.Common.MenuItemModel.MenuItems
  id: MenuItems
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: MenuItems
  nameWithType: MenuItemModel.MenuItems
  fullName: Mix.Lib.Models.Common.MenuItemModel.MenuItems
  type: Property
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MenuItems
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 36
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public List<MenuItemModel> MenuItems { get; set; }
    parameters: []
    return:
      type: List{Mix.Lib.Models.Common.MenuItemModel}
    content.vb: Public Property MenuItems As List(Of MenuItemModel)
  overload: Mix.Lib.Models.Common.MenuItemModel.MenuItems*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Lib.Models.Common.MenuItemModel.Property``1(System.String)
  commentId: M:Mix.Lib.Models.Common.MenuItemModel.Property``1(System.String)
  id: Property``1(System.String)
  parent: Mix.Lib.Models.Common.MenuItemModel
  langs:
  - csharp
  - vb
  name: Property<T>(String)
  nameWithType: MenuItemModel.Property<T>(String)
  fullName: Mix.Lib.Models.Common.MenuItemModel.Property<T>(System.String)
  type: Method
  source:
    remote:
      path: src/platform/mix.library/Models/Common/MenuItemModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Property
    path: ../../mix.core/src/platform/mix.library/Models/Common/MenuItemModel.cs
    startLine: 38
  assemblies:
  - mix.library
  namespace: Mix.Lib.Models.Common
  syntax:
    content: public T Property<T>(string fieldName)
    parameters:
    - id: fieldName
      type: System.String
    typeParameters:
    - id: T
    return:
      type: '{T}'
    content.vb: Public Function Property(Of T)(fieldName As String) As T
  overload: Mix.Lib.Models.Common.MenuItemModel.Property*
  nameWithType.vb: MenuItemModel.Property(Of T)(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: Mix.Lib.Models.Common.MenuItemModel.Property(Of T)(System.String)
  name.vb: Property(Of T)(String)
references:
- uid: Mix.Lib.Models.Common
  commentId: N:Mix.Lib.Models.Common
  name: Mix.Lib.Models.Common
  nameWithType: Mix.Lib.Models.Common
  fullName: Mix.Lib.Models.Common
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Lib.Models.Common.MenuItemModel.#ctor*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.#ctor
  name: MenuItemModel
  nameWithType: MenuItemModel.MenuItemModel
  fullName: Mix.Lib.Models.Common.MenuItemModel.MenuItemModel
- uid: Mix.Lib.Models.Common.MenuItemModel.Obj*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Obj
  name: Obj
  nameWithType: MenuItemModel.Obj
  fullName: Mix.Lib.Models.Common.MenuItemModel.Obj
- uid: JObject
  isExternal: true
  name: JObject
  nameWithType: JObject
  fullName: JObject
- uid: Mix.Lib.Models.Common.MenuItemModel.Id*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Id
  name: Id
  nameWithType: MenuItemModel.Id
  fullName: Mix.Lib.Models.Common.MenuItemModel.Id
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Lib.Models.Common.MenuItemModel.Specificulture*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Specificulture
  name: Specificulture
  nameWithType: MenuItemModel.Specificulture
  fullName: Mix.Lib.Models.Common.MenuItemModel.Specificulture
- uid: Mix.Lib.Models.Common.MenuItemModel.Title*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Title
  name: Title
  nameWithType: MenuItemModel.Title
  fullName: Mix.Lib.Models.Common.MenuItemModel.Title
- uid: Mix.Lib.Models.Common.MenuItemModel.Uri*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Uri
  name: Uri
  nameWithType: MenuItemModel.Uri
  fullName: Mix.Lib.Models.Common.MenuItemModel.Uri
- uid: Mix.Lib.Models.Common.MenuItemModel.Href*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Href
  name: Href
  nameWithType: MenuItemModel.Href
  fullName: Mix.Lib.Models.Common.MenuItemModel.Href
- uid: Mix.Lib.Models.Common.MenuItemModel.Icon*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Icon
  name: Icon
  nameWithType: MenuItemModel.Icon
  fullName: Mix.Lib.Models.Common.MenuItemModel.Icon
- uid: Mix.Lib.Models.Common.MenuItemModel.Type*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Type
  name: Type
  nameWithType: MenuItemModel.Type
  fullName: Mix.Lib.Models.Common.MenuItemModel.Type
- uid: MixMenuItemType
  isExternal: true
  name: MixMenuItemType
  nameWithType: MixMenuItemType
  fullName: MixMenuItemType
- uid: Mix.Lib.Models.Common.MenuItemModel.Target*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Target
  name: Target
  nameWithType: MenuItemModel.Target
  fullName: Mix.Lib.Models.Common.MenuItemModel.Target
- uid: Mix.Lib.Models.Common.MenuItemModel.Classes*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Classes
  name: Classes
  nameWithType: MenuItemModel.Classes
  fullName: Mix.Lib.Models.Common.MenuItemModel.Classes
- uid: Mix.Lib.Models.Common.MenuItemModel.Description*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Description
  name: Description
  nameWithType: MenuItemModel.Description
  fullName: Mix.Lib.Models.Common.MenuItemModel.Description
- uid: Mix.Lib.Models.Common.MenuItemModel.TargetId*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.TargetId
  name: TargetId
  nameWithType: MenuItemModel.TargetId
  fullName: Mix.Lib.Models.Common.MenuItemModel.TargetId
- uid: Mix.Lib.Models.Common.MenuItemModel.IsActive*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.IsActive
  name: IsActive
  nameWithType: MenuItemModel.IsActive
  fullName: Mix.Lib.Models.Common.MenuItemModel.IsActive
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Mix.Lib.Models.Common.MenuItemModel.MenuItems*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.MenuItems
  name: MenuItems
  nameWithType: MenuItemModel.MenuItems
  fullName: Mix.Lib.Models.Common.MenuItemModel.MenuItems
- uid: List{Mix.Lib.Models.Common.MenuItemModel}
  commentId: '!:List{Mix.Lib.Models.Common.MenuItemModel}'
  definition: List`1
  name: List<MenuItemModel>
  nameWithType: List<MenuItemModel>
  fullName: List<Mix.Lib.Models.Common.MenuItemModel>
  nameWithType.vb: List(Of MenuItemModel)
  fullName.vb: List(Of Mix.Lib.Models.Common.MenuItemModel)
  name.vb: List(Of MenuItemModel)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Mix.Lib.Models.Common.MenuItemModel
    name: MenuItemModel
    nameWithType: MenuItemModel
    fullName: Mix.Lib.Models.Common.MenuItemModel
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Mix.Lib.Models.Common.MenuItemModel
    name: MenuItemModel
    nameWithType: MenuItemModel
    fullName: Mix.Lib.Models.Common.MenuItemModel
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: Mix.Lib.Models.Common.MenuItemModel.Property*
  commentId: Overload:Mix.Lib.Models.Common.MenuItemModel.Property
  name: Property
  nameWithType: MenuItemModel.Property
  fullName: Mix.Lib.Models.Common.MenuItemModel.Property
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
