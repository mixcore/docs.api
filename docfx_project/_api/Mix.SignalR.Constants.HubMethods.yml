### YamlMime:ManagedReference
items:
- uid: Mix.SignalR.Constants.HubMethods
  commentId: T:Mix.SignalR.Constants.HubMethods
  id: HubMethods
  parent: Mix.SignalR.Constants
  children:
  - Mix.SignalR.Constants.HubMethods.JoinGroup
  - Mix.SignalR.Constants.HubMethods.NewMember
  - Mix.SignalR.Constants.HubMethods.NewMessage
  - Mix.SignalR.Constants.HubMethods.NewNotification
  - Mix.SignalR.Constants.HubMethods.ReceiveMethod
  - Mix.SignalR.Constants.HubMethods.SaveData
  - Mix.SignalR.Constants.HubMethods.SendGroupMessage
  - Mix.SignalR.Constants.HubMethods.SendMessage
  - Mix.SignalR.Constants.HubMethods.SendPrivateMessage
  langs:
  - csharp
  - vb
  name: HubMethods
  nameWithType: HubMethods
  fullName: Mix.SignalR.Constants.HubMethods
  type: Class
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: HubMethods
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 2
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public class HubMethods
    content.vb: Public Class HubMethods
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.SignalR.Constants.HubMethods.ReceiveMethod
  commentId: F:Mix.SignalR.Constants.HubMethods.ReceiveMethod
  id: ReceiveMethod
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: ReceiveMethod
  nameWithType: HubMethods.ReceiveMethod
  fullName: Mix.SignalR.Constants.HubMethods.ReceiveMethod
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ReceiveMethod
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 4
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string ReceiveMethod = "receive_message"
    return:
      type: System.String
    content.vb: Public Const ReceiveMethod As String = "receive_message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.SendMessage
  commentId: F:Mix.SignalR.Constants.HubMethods.SendMessage
  id: SendMessage
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: SendMessage
  nameWithType: HubMethods.SendMessage
  fullName: Mix.SignalR.Constants.HubMethods.SendMessage
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendMessage
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 5
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string SendMessage = "sendMessage"
    return:
      type: System.String
    content.vb: Public Const SendMessage As String = "sendMessage"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.SendGroupMessage
  commentId: F:Mix.SignalR.Constants.HubMethods.SendGroupMessage
  id: SendGroupMessage
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: SendGroupMessage
  nameWithType: HubMethods.SendGroupMessage
  fullName: Mix.SignalR.Constants.HubMethods.SendGroupMessage
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendGroupMessage
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 6
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string SendGroupMessage = "send_group_message"
    return:
      type: System.String
    content.vb: Public Const SendGroupMessage As String = "send_group_message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.SendPrivateMessage
  commentId: F:Mix.SignalR.Constants.HubMethods.SendPrivateMessage
  id: SendPrivateMessage
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: SendPrivateMessage
  nameWithType: HubMethods.SendPrivateMessage
  fullName: Mix.SignalR.Constants.HubMethods.SendPrivateMessage
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SendPrivateMessage
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 7
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string SendPrivateMessage = "send_private_message"
    return:
      type: System.String
    content.vb: Public Const SendPrivateMessage As String = "send_private_message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.SaveData
  commentId: F:Mix.SignalR.Constants.HubMethods.SaveData
  id: SaveData
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: SaveData
  nameWithType: HubMethods.SaveData
  fullName: Mix.SignalR.Constants.HubMethods.SaveData
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: SaveData
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 8
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string SaveData = "save_data"
    return:
      type: System.String
    content.vb: Public Const SaveData As String = "save_data"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.JoinGroup
  commentId: F:Mix.SignalR.Constants.HubMethods.JoinGroup
  id: JoinGroup
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: JoinGroup
  nameWithType: HubMethods.JoinGroup
  fullName: Mix.SignalR.Constants.HubMethods.JoinGroup
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: JoinGroup
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 9
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string JoinGroup = "join_group"
    return:
      type: System.String
    content.vb: Public Const JoinGroup As String = "join_group"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.NewMessage
  commentId: F:Mix.SignalR.Constants.HubMethods.NewMessage
  id: NewMessage
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: NewMessage
  nameWithType: HubMethods.NewMessage
  fullName: Mix.SignalR.Constants.HubMethods.NewMessage
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NewMessage
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 10
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string NewMessage = "new_message"
    return:
      type: System.String
    content.vb: Public Const NewMessage As String = "new_message"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.NewNotification
  commentId: F:Mix.SignalR.Constants.HubMethods.NewNotification
  id: NewNotification
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: NewNotification
  nameWithType: HubMethods.NewNotification
  fullName: Mix.SignalR.Constants.HubMethods.NewNotification
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NewNotification
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 11
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string NewNotification = "new_notification"
    return:
      type: System.String
    content.vb: Public Const NewNotification As String = "new_notification"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
- uid: Mix.SignalR.Constants.HubMethods.NewMember
  commentId: F:Mix.SignalR.Constants.HubMethods.NewMember
  id: NewMember
  parent: Mix.SignalR.Constants.HubMethods
  langs:
  - csharp
  - vb
  name: NewMember
  nameWithType: HubMethods.NewMember
  fullName: Mix.SignalR.Constants.HubMethods.NewMember
  type: Field
  source:
    remote:
      path: src/platform/mix.signalr/Constants/HubMethods.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NewMember
    path: ../../mix.core/src/platform/mix.signalr/Constants/HubMethods.cs
    startLine: 12
  assemblies:
  - mix.signalr
  namespace: Mix.SignalR.Constants
  syntax:
    content: public const string NewMember = "new_member"
    return:
      type: System.String
    content.vb: Public Const NewMember As String = "new_member"
  modifiers.csharp:
  - public
  - const
  modifiers.vb:
  - Public
  - Const
references:
- uid: Mix.SignalR.Constants
  commentId: N:Mix.SignalR.Constants
  name: Mix.SignalR.Constants
  nameWithType: Mix.SignalR.Constants
  fullName: Mix.SignalR.Constants
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
