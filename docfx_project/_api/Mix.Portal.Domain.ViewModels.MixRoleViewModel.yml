### YamlMime:ManagedReference
items:
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  commentId: T:Mix.Portal.Domain.ViewModels.MixRoleViewModel
  id: MixRoleViewModel
  parent: Mix.Portal.Domain.ViewModels
  children:
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor(Mix.Database.Entities.Account.MixRole,UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor(UnitOfWorkInfo)
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name
  - Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName
  langs:
  - csharp
  - vb
  name: MixRoleViewModel
  nameWithType: MixRoleViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  type: Class
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixRoleViewModel
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 5
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: 'public class MixRoleViewModel : ViewModelBase<MixCmsAccountContext, MixRole, Guid, MixRoleViewModel>'
    content.vb: >-
      Public Class MixRoleViewModel
          Inherits ViewModelBase(Of MixCmsAccountContext, MixRole, Guid, MixRoleViewModel)
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor
  commentId: M:Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor
  id: '#ctor'
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: MixRoleViewModel()
  nameWithType: MixRoleViewModel.MixRoleViewModel()
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixRoleViewModel()
  type: Constructor
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 10
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixRoleViewModel()
    content.vb: Public Sub New
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor(Mix.Database.Entities.Account.MixRole,UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor(Mix.Database.Entities.Account.MixRole,UnitOfWorkInfo)
  id: '#ctor(Mix.Database.Entities.Account.MixRole,UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: MixRoleViewModel(MixRole, UnitOfWorkInfo)
  nameWithType: MixRoleViewModel.MixRoleViewModel(MixRole, UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixRoleViewModel(Mix.Database.Entities.Account.MixRole, UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 14
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixRoleViewModel(MixRole entity, UnitOfWorkInfo uowInfo = null)
    parameters:
    - id: entity
      type: Mix.Database.Entities.Account.MixRole
    - id: uowInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(entity As MixRole, uowInfo As UnitOfWorkInfo = Nothing)
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor(UnitOfWorkInfo)
  commentId: M:Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor(UnitOfWorkInfo)
  id: '#ctor(UnitOfWorkInfo)'
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: MixRoleViewModel(UnitOfWorkInfo)
  nameWithType: MixRoleViewModel.MixRoleViewModel(UnitOfWorkInfo)
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixRoleViewModel(UnitOfWorkInfo)
  type: Constructor
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: .ctor
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 20
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public MixRoleViewModel(UnitOfWorkInfo unitOfWorkInfo)
    parameters:
    - id: unitOfWorkInfo
      type: UnitOfWorkInfo
    content.vb: Public Sub New(unitOfWorkInfo As UnitOfWorkInfo)
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name
  commentId: P:Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name
  id: Name
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: MixRoleViewModel.Name
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: Name
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 27
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string Name { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Name As String
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName
  commentId: P:Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName
  id: NormalizedName
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: NormalizedName
  nameWithType: MixRoleViewModel.NormalizedName
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: NormalizedName
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 28
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string NormalizedName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NormalizedName As String
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp
  commentId: P:Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp
  id: ConcurrencyStamp
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: ConcurrencyStamp
  nameWithType: MixRoleViewModel.ConcurrencyStamp
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: ConcurrencyStamp
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 29
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public string ConcurrencyStamp { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ConcurrencyStamp As String
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId
  commentId: P:Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId
  id: MixTenantId
  parent: Mix.Portal.Domain.ViewModels.MixRoleViewModel
  langs:
  - csharp
  - vb
  name: MixTenantId
  nameWithType: MixRoleViewModel.MixTenantId
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId
  type: Property
  source:
    remote:
      path: src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
      branch: develop
      repo: https://github.com/mixcore/mix.core.git
    id: MixTenantId
    path: ../../mix.core/src/modules/mix.account/Domain/ViewModels/MixRoleViewModel.cs
    startLine: 30
  assemblies:
  - mix.account
  namespace: Mix.Portal.Domain.ViewModels
  syntax:
    content: public int MixTenantId { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property MixTenantId As Integer
  overload: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: Mix.Portal.Domain.ViewModels
  commentId: N:Mix.Portal.Domain.ViewModels
  name: Mix.Portal.Domain.ViewModels
  nameWithType: Mix.Portal.Domain.ViewModels
  fullName: Mix.Portal.Domain.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixRoleViewModel.#ctor
  name: MixRoleViewModel
  nameWithType: MixRoleViewModel.MixRoleViewModel
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixRoleViewModel
- uid: Mix.Database.Entities.Account.MixRole
  commentId: T:Mix.Database.Entities.Account.MixRole
  parent: Mix.Database.Entities.Account
  name: MixRole
  nameWithType: MixRole
  fullName: Mix.Database.Entities.Account.MixRole
- uid: UnitOfWorkInfo
  isExternal: true
  name: UnitOfWorkInfo
  nameWithType: UnitOfWorkInfo
  fullName: UnitOfWorkInfo
- uid: Mix.Database.Entities.Account
  commentId: N:Mix.Database.Entities.Account
  name: Mix.Database.Entities.Account
  nameWithType: Mix.Database.Entities.Account
  fullName: Mix.Database.Entities.Account
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name
  name: Name
  nameWithType: MixRoleViewModel.Name
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName
  name: NormalizedName
  nameWithType: MixRoleViewModel.NormalizedName
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.NormalizedName
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp
  name: ConcurrencyStamp
  nameWithType: MixRoleViewModel.ConcurrencyStamp
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.ConcurrencyStamp
- uid: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId*
  commentId: Overload:Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId
  name: MixTenantId
  nameWithType: MixRoleViewModel.MixTenantId
  fullName: Mix.Portal.Domain.ViewModels.MixRoleViewModel.MixTenantId
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
